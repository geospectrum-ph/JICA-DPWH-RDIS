"use strict";(self.webpackChunkSEEDs_v2_0_Client=self.webpackChunkSEEDs_v2_0_Client||[]).push([[707],{25078:(t,e,r)=>{r.d(e,{g:()=>h});var n=r(16842),a=r(89412),l=r(49905),c=r(71014),u=r(60985);const o=()=>a.A.getLogger("esri.views.webgl.BufferObject");class h{static createIndex(t,e,r){return new h(t,u.NZ.ELEMENT_ARRAY_BUFFER,e,r)}static createVertex(t,e,r){return new h(t,u.NZ.ARRAY_BUFFER,e,r)}static createUniform(t,e,r){return new h(t,u.NZ.UNIFORM_BUFFER,e,r)}static createPixelPack(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u._U.STREAM_READ,r=arguments.length>2?arguments[2]:void 0;const n=new h(t,u.NZ.PIXEL_PACK_BUFFER,e);return r&&n.setSize(r),n}static createPixelUnpack(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u._U.STREAM_DRAW,r=arguments.length>2?arguments[2]:void 0;return new h(t,u.NZ.PIXEL_UNPACK_BUFFER,e,r)}static createTransformFeedback(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u._U.STATIC_DRAW,r=arguments.length>2?arguments[2]:void 0;const n=new h(t,u.NZ.TRANSFORM_FEEDBACK_BUFFER,e);return n.setSize(r),n}constructor(t,e,r,n){this._context=t,this.bufferType=e,this.usage=r,this._glName=null,this._size=-1,this._indexType=void 0,t.instanceCounter.increment(u.vt.BufferObject,this),this._glName=this._context.gl.createBuffer(),(0,c.Y2)(this._context.gl),n&&this.setData(n)}get glName(){return this._glName}get size(){return this._size}get indexType(){return this._indexType}get usedMemory(){return this.bufferType===u.NZ.ELEMENT_ARRAY_BUFFER?this._indexType===u.pe.UNSIGNED_INT?4*this._size:2*this._size:this._size}get _isVAOAware(){return this.bufferType===u.NZ.ELEMENT_ARRAY_BUFFER||this.bufferType===u.NZ.ARRAY_BUFFER}dispose(){var t;null!==(t=this._context)&&void 0!==t&&t.gl?(this._glName&&(this._context.gl.deleteBuffer(this._glName),this._glName=null),this._context.instanceCounter.decrement(u.vt.BufferObject,this),this._context=null):this._glName&&o().warn("Leaked WebGL buffer object")}setSize(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;if(t<=0&&o().error("Buffer size needs to be positive!"),this.bufferType===u.NZ.ELEMENT_ARRAY_BUFFER&&null!=e)switch(this._indexType=e,e){case u.pe.UNSIGNED_SHORT:t*=2;break;case u.pe.UNSIGNED_INT:t*=4}this._setBufferData(t)}setData(t){if(!t)return;let e=t.byteLength;this.bufferType===u.NZ.ELEMENT_ARRAY_BUFFER&&((0,l.jq)(t)&&(e/=2,this._indexType=u.pe.UNSIGNED_SHORT),(0,l.XJ)(t)&&(e/=4,this._indexType=u.pe.UNSIGNED_INT)),this._setBufferData(e,t)}_setBufferData(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;this._size=t;const r=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const n=this._context.gl;null!=e?n.bufferData(this.bufferType,e,this.usage):n.bufferData(this.bufferType,t,this.usage),(0,c.Y2)(n),this._isVAOAware&&this._context.bindVAO(r)}setSubData(t,e,r,n){if(!t)return;(e<0||e*t.BYTES_PER_ELEMENT>=this.usedMemory)&&o().error("offset is out of range!"),r>=n&&o().error("end must be bigger than start!"),(e+(n-r))*t.BYTES_PER_ELEMENT>this.usedMemory&&o().error("An attempt to write beyond the end of the buffer!");const a=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const{gl:l}=this._context;l.bufferSubData(this.bufferType,e*t.BYTES_PER_ELEMENT,t,r,n-r),(0,c.Y2)(l),this._isVAOAware&&this._context.bindVAO(a)}getSubData(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2?arguments[2]:void 0,a=arguments.length>3?arguments[3]:void 0;if(r<0||a<0)return void o().error("Problem getting subdata: offset and length were less than zero!");const l=function E(t){return(0,n.Xj)(t)}(t)?t.BYTES_PER_ELEMENT:1;if(l*((null!==r&&void 0!==r?r:0)+(null!==a&&void 0!==a?a:0))>t.byteLength)return void o().error("Problem getting subdata: offset and length exceeded destination size!");e+l*(null!==a&&void 0!==a?a:0)>this.usedMemory&&o().warn("Potential problem getting subdata: requested data exceeds buffer size!");const c=this._context.gl;this.bufferType===u.NZ.TRANSFORM_FEEDBACK_BUFFER?(this._context.bindBuffer(this,u.NZ.TRANSFORM_FEEDBACK_BUFFER),c.getBufferSubData(u.NZ.TRANSFORM_FEEDBACK_BUFFER,e,t,r,a),this._context.unbindBuffer(u.NZ.TRANSFORM_FEEDBACK_BUFFER)):(this._context.bindBuffer(this,u.NZ.COPY_READ_BUFFER),c.getBufferSubData(u.NZ.COPY_READ_BUFFER,e,t,r,a),this._context.unbindBuffer(u.NZ.COPY_READ_BUFFER))}async getSubDataAsync(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2?arguments[2]:void 0,n=arguments.length>3?arguments[3]:void 0;await this._context.clientWaitAsync(),this.getSubData(t,e,r,n)}}},50707:(t,e,r)=>{r.d(e,{H:()=>x});r(50886);var n=r(89412),a=r(35598),l=r(25078),c=r(71014),u=r(60985),_=r(87107),d=r(11897),f=r(83663);class x{constructor(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this._context=t,this._glName=null,this._colorAttachments=new Map,this._depthStencilBuffer=null,this._depthStencilTexture=null,this._initialized=!1,t.instanceCounter.increment(u.vt.FramebufferObject,this);const n=E(e)?e:new f.g(this._context,e);if(this._colorAttachments.set(u.Nm.COLOR_ATTACHMENT0,n),this._validateTextureDescriptor(n.descriptor),this._validateColorAttachmentPoint(u.Nm.COLOR_ATTACHMENT0),null!=r)if(function A(t){return E(t)||null!=t&&"pixelFormat"in t}(r))this._context.capabilities.depthTexture||console.error("Setting the depth/stencil texture as an attachment requires WEBGL_depth_texture or WebGL2"),this._depthStencilTexture=E(r)?r:new f.g(this._context,r),this._validateTextureDescriptor(this._depthStencilTexture.descriptor);else{const t=function g(t){return null!=t&&"type"in t&&t.type===_.p.RenderBuffer}(r)?r:new d.l(this._context,r);this._depthStencilBuffer=t,this._validateRenderBufferDescriptor(t.descriptor)}}dispose(){var t,e;if(0===this._colorAttachments.size&&!this._glName)return;const r=this._context.getBoundFramebufferObject();this._colorAttachments.forEach(((t,e)=>{var r;return null===(r=this.detachColorTexture(e))||void 0===r?void 0:r.dispose()})),null!==(t=this.detachDepthStencilBuffer())&&void 0!==t&&t.dispose(),null!==(e=this.detachDepthStencilTexture())&&void 0!==e&&e.dispose(),this._glName&&(this._context.gl.deleteFramebuffer(this._glName),this._glName=null),this._context.bindFramebuffer(r),this._context.instanceCounter.decrement(u.vt.FramebufferObject,this)}get glName(){return this._glName}get colorTexture(){return this._colorAttachments.get(u.Nm.COLOR_ATTACHMENT0)}get depthStencil(){return this._depthStencilTexture||this._depthStencilBuffer}get depthStencilTexture(){return this._depthStencilTexture}get width(){var t,e;const r=this._colorAttachments.get(u.Nm.COLOR_ATTACHMENT0);return null!==(t=null===r||void 0===r||null===(e=r.descriptor)||void 0===e?void 0:e.width)&&void 0!==t?t:0}get height(){var t,e;const r=this._colorAttachments.get(u.Nm.COLOR_ATTACHMENT0);return null!==(t=null===r||void 0===r||null===(e=r.descriptor)||void 0===e?void 0:e.height)&&void 0!==t?t:0}get usedMemory(){var t,e;return[...this._colorAttachments].reduce(((t,e)=>{let[r,n]=e;return t+n.usedMemory}),null!==(t=null===(e=this.depthStencil)||void 0===e?void 0:e.usedMemory)&&void 0!==t?t:0)}getColorTexture(t){const e=this._colorAttachments.get(t);return e&&E(e)?e:null}get colorAttachments(){return[...this._colorAttachments.keys()]}attachColorTexture(t){var e;let r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u.Nm.COLOR_ATTACHMENT0;if(!t)return;this._validateColorAttachmentPoint(r);const n=t.descriptor;this._validateTextureDescriptor(n),null!==(e=this.detachColorTexture(r))&&void 0!==e&&e.dispose(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,r)),this._colorAttachments.set(r,t)}detachColorTexture(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:u.Nm.COLOR_ATTACHMENT0;const e=this._colorAttachments.get(t);if(e){if(this._initialized){const e=this._context.getBoundFramebufferObject();this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t),this._context.bindFramebuffer(e)}return this._colorAttachments.delete(t),e}}setColorTextureTarget(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u.Nm.COLOR_ATTACHMENT0;const r=this._colorAttachments.get(e);r&&this._framebufferTexture2D(r.glName,e,t)}attachDepthStencil(t){if(t)switch(t.type){case _.p.Texture:return this._attachDepthStencilTexture(t);case _.p.RenderBuffer:return this._attachDepthStencilBuffer(t)}}_attachDepthStencilTexture(t){var e;if(null==t)return;const r=t.descriptor;r.pixelFormat!==u.Ab.DEPTH_STENCIL&&r.pixelFormat!==u.Ab.DEPTH24_STENCIL8&&console.error("Depth/Stencil texture must have a pixel type of DEPTH_STENCIL!"),r.dataType!==u.ld.UNSIGNED_INT_24_8&&console.error("Depth/Stencil texture must have data type of UNSIGNED_INT_24_8!"),this._context.capabilities.depthTexture||console.error("Extension WEBGL_depth_texture isn't supported therefore it is no possible to set the depth/stencil texture!"),this._validateTextureDescriptor(r),this._disposeDepthStencilAttachments(),this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(t.glName,u.nI)),null!==(e=this._depthStencilTexture)&&void 0!==e&&e.dispose(),this._depthStencilTexture=t}detachDepthStencilTexture(){const t=this._depthStencilTexture;return t&&this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,u.nI)),this._depthStencilTexture=null,t}_attachDepthStencilBuffer(t){if(null==t)return;const e=t.descriptor;if(this._validateRenderBufferDescriptor(e),this._disposeDepthStencilAttachments(),this._initialized){this._context.bindFramebuffer(this);const r=this._context.gl,n=this._getGLAttachmentPoint(e);r.framebufferRenderbuffer(u.R.FRAMEBUFFER,n,r.RENDERBUFFER,t.glName)}this._depthStencilBuffer=t}detachDepthStencilBuffer(){const t=this._depthStencilBuffer;if(t&&this._initialized){this._context.bindFramebuffer(this);const e=this._context.gl,r=this._getGLAttachmentPoint(t.descriptor);e.framebufferRenderbuffer(u.R.FRAMEBUFFER,r,e.RENDERBUFFER,null)}return this._depthStencilBuffer=null,t}copyToTexture(t,e,r,n,a,l,c){(t<0||e<0||a<0||l<0)&&console.error("Offsets cannot be negative!"),(r<=0||n<=0)&&console.error("Copy width and height must be greater than zero!");const _=c.descriptor;c.descriptor.target!==u.Ap.TEXTURE_2D&&console.error("Texture target must be TEXTURE_2D!"),(null==(null===_||void 0===_?void 0:_.width)||null==(null===_||void 0===_?void 0:_.height)||t+r>this.width||e+n>this.height||a+r>_.width||l+n>_.height)&&console.error("Bad dimensions, the current input values will attempt to read or copy out of bounds!");const d=this._context,T=d.bindTexture(c,f.g.TEXTURE_UNIT_FOR_UPDATES);d.setActiveTexture(f.g.TEXTURE_UNIT_FOR_UPDATES),d.bindFramebuffer(this),d.gl.copyTexSubImage2D(u.Ap.TEXTURE_2D,0,a,l,t,e,r,n),d.bindTexture(T,f.g.TEXTURE_UNIT_FOR_UPDATES)}readPixels(t,e,r,n,a,l,c){(r<=0||n<=0)&&console.error("Copy width and height must be greater than zero!"),c||console.error("Target memory is not initialized!"),this._context.bindFramebuffer(this),this._context.gl.readPixels(t,e,r,n,a,l,c)}async readPixelsAsync(t,e,r,n,a,c,_){const{gl:d}=this._context,f=l.g.createPixelPack(this._context,u._U.STREAM_READ,_.byteLength);this._context.bindBuffer(f),this._context.bindFramebuffer(this),d.readPixels(t,e,r,n,a,c,0),this._context.unbindBuffer(u.NZ.PIXEL_PACK_BUFFER),await f.getSubDataAsync(_),f.dispose()}resize(t,e){var r,n;if(this.width===t&&this.height===e)return;const a={width:t,height:e};b(a,this._context.parameters.maxTextureSize),this._colorAttachments.forEach((t=>t.resize(a.width,a.height))),null!==(r=this._depthStencilTexture)&&void 0!==r&&r.resize(a.width,a.height),this._initialized&&(b(a,this._context.parameters.maxRenderbufferSize),null!==(n=this._depthStencilBuffer)&&void 0!==n&&n.resize(a.width,a.height),this._context.getBoundFramebufferObject()===this&&this._context.bindFramebuffer(null),this._initialized=!1)}initializeAndBind(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:u.R.FRAMEBUFFER;const e=this._context.gl;if(this._initialized)return void e.bindFramebuffer(t,this.glName);this._glName&&e.deleteFramebuffer(this._glName);const r=e.createFramebuffer();if(e.bindFramebuffer(t,r),this._colorAttachments.forEach(((e,r)=>this._framebufferTexture2D(e.glName,r,S(e),t))),this._depthStencilBuffer){const r=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);e.framebufferRenderbuffer(t,r,e.RENDERBUFFER,this._depthStencilBuffer.glName)}else this._depthStencilTexture&&this._framebufferTexture2D(this._depthStencilTexture.glName,e.DEPTH_STENCIL_ATTACHMENT,S(this._depthStencilTexture),t);(0,c.en)()&&e.checkFramebufferStatus(t)!==e.FRAMEBUFFER_COMPLETE&&console.error("Framebuffer is incomplete!"),this._glName=r,this._initialized=!0}_framebufferTexture2D(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:u.Nm.COLOR_ATTACHMENT0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:u.Ap.TEXTURE_2D,n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:u.R.FRAMEBUFFER,a=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;this._context.gl.framebufferTexture2D(n,e,r,t,a)}_disposeDepthStencilAttachments(){const t=this._context.gl;if(this._depthStencilBuffer){if(this._initialized){this._context.bindFramebuffer(this);const e=this._getGLAttachmentPoint(this._depthStencilBuffer.descriptor);t.framebufferRenderbuffer(u.R.FRAMEBUFFER,e,t.RENDERBUFFER,null)}this._depthStencilBuffer=(0,a.WD)(this._depthStencilBuffer)}this._depthStencilTexture&&(this._initialized&&(this._context.bindFramebuffer(this),this._framebufferTexture2D(null,t.DEPTH_STENCIL_ATTACHMENT)),this._depthStencilTexture=(0,a.WD)(this._depthStencilTexture))}_validateTextureDescriptor(t){t.target!==u.Ap.TEXTURE_2D&&t.target!==u.Ap.TEXTURE_CUBE_MAP&&console.error("Texture type must be TEXTURE_2D or TEXTURE_CUBE_MAP!"),b(t,this._context.parameters.maxTextureSize),this._validateBufferDimensions(t)}_validateRenderBufferDescriptor(t){b(t,this._context.parameters.maxRenderbufferSize),this._validateBufferDimensions(t)}_validateBufferDimensions(t){t.width<=0&&(t.width=this.width),t.height<=0&&(t.height=this.height),this.width>0&&this.height>0&&(this.width===t.width&&this.height===t.height||console.error("Attachment size must match framebuffer size!"))}_getGLAttachmentPoint(t){switch(t.internalFormat){case u.yQ.DEPTH_COMPONENT16:case u.yQ.DEPTH_COMPONENT24:case u.yQ.DEPTH_COMPONENT32F:return this._context.gl.DEPTH_ATTACHMENT;case u.yQ.DEPTH24_STENCIL8:case u.yQ.DEPTH32F_STENCIL8:case u.yQ.DEPTH_STENCIL:return this._context.gl.DEPTH_STENCIL_ATTACHMENT;case u.yQ.STENCIL_INDEX8:return this._context.gl.STENCIL_ATTACHMENT}}_validateColorAttachmentPoint(t){if(-1===x._MAX_COLOR_ATTACHMENTS){const{gl:t}=this._context;x._MAX_COLOR_ATTACHMENTS=t.getParameter(t.MAX_COLOR_ATTACHMENTS)}const e=t-u.Nm.COLOR_ATTACHMENT0;e+1>x._MAX_COLOR_ATTACHMENTS&&n.A.getLogger("esri.views.webgl.FrameBufferObject").error("esri.FrameBufferObject","illegal attachment point for color attachment: ".concat(e+1,". Implementation supports up to ").concat(x._MAX_COLOR_ATTACHMENTS," color attachments"))}}function E(t){return null!=t&&"type"in t&&t.type===_.p.Texture}function b(t,e){const r=Math.max(t.width,t.height);if(r>e){n.A.getLogger("esri.views.webgl.FramebufferObject").warn("Resizing FBO attachment size ".concat(t.width,"x").concat(t.height," to device limit ").concat(e));const a=e/r;return t.width=Math.round(t.width*a),t.height=Math.round(t.height*a),!1}return!0}function S(t){return t.descriptor.target===u.Ap.TEXTURE_CUBE_MAP?u.Ap.TEXTURE_CUBE_MAP_POSITIVE_X:u.Ap.TEXTURE_2D}x._MAX_COLOR_ATTACHMENTS=-1},11897:(t,e,r)=>{r.d(e,{l:()=>s});var n=r(60985),a=r(87107),l=r(79448);class s{constructor(t,e){this._context=t,this._descriptor=e,this.type=a.p.RenderBuffer,this._context.instanceCounter.increment(n.vt.Renderbuffer,this);const r=this._context.gl;this.glName=r.createRenderbuffer(),this._context.bindRenderbuffer(this);const{width:l,height:c,internalFormat:u,multisampled:_}=e;_?r.renderbufferStorageMultisample(r.RENDERBUFFER,this.samples,u,l,c):r.renderbufferStorage(r.RENDERBUFFER,u,l,c)}get descriptor(){return this._descriptor}get samples(){const t=this._descriptor.samples,e=this._context.parameters.maxSamples;return t?Math.min(t,e):e}get usedMemory(){return(0,l.e)(this._descriptor)}resize(t,e){const r=this._descriptor;if(r.width===t&&r.height===e)return;r.width=t,r.height=e;const n=this._context.gl;this._context.bindRenderbuffer(this),r.multisampled?n.renderbufferStorageMultisample(n.RENDERBUFFER,this.samples,r.internalFormat,r.width,r.height):n.renderbufferStorage(n.RENDERBUFFER,r.internalFormat,r.width,r.height)}dispose(){this._context&&(this._context.gl.deleteRenderbuffer(this.glName),this._context.instanceCounter.decrement(n.vt.Renderbuffer,this),this._context=null)}}},79448:(t,e,r)=>{r.d(e,{e:()=>h,q:()=>i});var n=r(76879);class i{constructor(t,e){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e;this.internalFormat=t,this.width=e,this.height=r,this.multisampled=!1,this.samples=1}}function h(t){return t.width<=0||t.height<=0||null==t.internalFormat?0:t.width*t.height*(0,n.IB)(t.internalFormat)}}}]);
//# sourceMappingURL=707.98d60153.chunk.js.map