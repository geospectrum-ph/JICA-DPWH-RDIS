"use strict";(self.webpackChunkSEEDs_v2_0_Client=self.webpackChunkSEEDs_v2_0_Client||[]).push([[6073],{55451:(e,t,o)=>{o.d(t,{b:()=>p,l:()=>m,o:()=>h});var s,l=o(2155),c={exports:{}};void 0!==(s=["precision","highp","mediump","lowp","attribute","const","uniform","varying","break","continue","do","for","while","if","else","in","out","inout","float","int","void","bool","true","false","discard","return","mat2","mat3","mat4","vec2","vec3","vec4","ivec2","ivec3","ivec4","bvec2","bvec3","bvec4","sampler1D","sampler2D","sampler3D","samplerCube","sampler1DShadow","sampler2DShadow","struct","asm","class","union","enum","typedef","template","this","packed","goto","switch","default","inline","noinline","volatile","public","static","extern","external","interface","long","short","double","half","fixed","unsigned","input","output","hvec2","hvec3","hvec4","dvec2","dvec3","dvec4","fvec2","fvec3","fvec4","sampler2DRect","sampler3DRect","sampler2DRectShadow","sizeof","cast","namespace","using"])&&(c.exports=s);const m=(0,l.g)(c.exports);var g,f={exports:{}};g=f,function(e){var t=["<<=",">>=","++","--","<<",">>","<=",">=","==","!=","&&","||","+=","-=","*=","/=","%=","&=","^^","^=","|=","(",")","[","]",".","!","~","*","/","%","+","-","<",">","&","^","|","?",":","=",",",";","{","}"];void 0!==t&&(g.exports=t)}();const h=(0,l.g)(f.exports);var u,d={exports:{}};u=d,function(e){var t=["abs","acos","all","any","asin","atan","ceil","clamp","cos","cross","dFdx","dFdy","degrees","distance","dot","equal","exp","exp2","faceforward","floor","fract","gl_BackColor","gl_BackLightModelProduct","gl_BackLightProduct","gl_BackMaterial","gl_BackSecondaryColor","gl_ClipPlane","gl_ClipVertex","gl_Color","gl_DepthRange","gl_DepthRangeParameters","gl_EyePlaneQ","gl_EyePlaneR","gl_EyePlaneS","gl_EyePlaneT","gl_Fog","gl_FogCoord","gl_FogFragCoord","gl_FogParameters","gl_FragColor","gl_FragCoord","gl_FragData","gl_FragDepth","gl_FragDepthEXT","gl_FrontColor","gl_FrontFacing","gl_FrontLightModelProduct","gl_FrontLightProduct","gl_FrontMaterial","gl_FrontSecondaryColor","gl_LightModel","gl_LightModelParameters","gl_LightModelProducts","gl_LightProducts","gl_LightSource","gl_LightSourceParameters","gl_MaterialParameters","gl_MaxClipPlanes","gl_MaxCombinedTextureImageUnits","gl_MaxDrawBuffers","gl_MaxFragmentUniformComponents","gl_MaxLights","gl_MaxTextureCoords","gl_MaxTextureImageUnits","gl_MaxTextureUnits","gl_MaxVaryingFloats","gl_MaxVertexAttribs","gl_MaxVertexTextureImageUnits","gl_MaxVertexUniformComponents","gl_ModelViewMatrix","gl_ModelViewMatrixInverse","gl_ModelViewMatrixInverseTranspose","gl_ModelViewMatrixTranspose","gl_ModelViewProjectionMatrix","gl_ModelViewProjectionMatrixInverse","gl_ModelViewProjectionMatrixInverseTranspose","gl_ModelViewProjectionMatrixTranspose","gl_MultiTexCoord0","gl_MultiTexCoord1","gl_MultiTexCoord2","gl_MultiTexCoord3","gl_MultiTexCoord4","gl_MultiTexCoord5","gl_MultiTexCoord6","gl_MultiTexCoord7","gl_Normal","gl_NormalMatrix","gl_NormalScale","gl_ObjectPlaneQ","gl_ObjectPlaneR","gl_ObjectPlaneS","gl_ObjectPlaneT","gl_Point","gl_PointCoord","gl_PointParameters","gl_PointSize","gl_Position","gl_ProjectionMatrix","gl_ProjectionMatrixInverse","gl_ProjectionMatrixInverseTranspose","gl_ProjectionMatrixTranspose","gl_SecondaryColor","gl_TexCoord","gl_TextureEnvColor","gl_TextureMatrix","gl_TextureMatrixInverse","gl_TextureMatrixInverseTranspose","gl_TextureMatrixTranspose","gl_Vertex","greaterThan","greaterThanEqual","inversesqrt","length","lessThan","lessThanEqual","log","log2","matrixCompMult","max","min","mix","mod","normalize","not","notEqual","pow","radians","reflect","refract","sign","sin","smoothstep","sqrt","step","tan","texture2D","texture2DLod","texture2DProj","texture2DProjLod","textureCube","textureCubeLod","texture2DLodEXT","texture2DProjLodEXT","textureCubeLodEXT","texture2DGradEXT","texture2DProjGradEXT","textureCubeGradEXT","textureSize","texelFetch"];void 0!==t&&(u.exports=t)}();const p=(0,l.g)(d.exports)},76073:(e,t,o)=>{o.d(t,{B:()=>r});o(50886);var s=o(71014),l=o(60985);const c=["layout","centroid","smooth","case","mat2x2","mat2x3","mat2x4","mat3x2","mat3x3","mat3x4","mat4x2","mat4x3","mat4x4","uint","uvec2","uvec3","uvec4","samplerCubeShadow","sampler2DArray","sampler2DArrayShadow","isampler2D","isampler3D","isamplerCube","isampler2DArray","usampler2D","usampler3D","usamplerCube","usampler2DArray","coherent","restrict","readonly","writeonly","resource","atomic_uint","noperspective","patch","sample","subroutine","common","partition","active","filter","image1D","image2D","image3D","imageCube","iimage1D","iimage2D","iimage3D","iimageCube","uimage1D","uimage2D","uimage3D","uimageCube","image1DArray","image2DArray","iimage1DArray","iimage2DArray","uimage1DArray","uimage2DArray","image1DShadow","image2DShadow","image1DArrayShadow","image2DArrayShadow","imageBuffer","iimageBuffer","uimageBuffer","sampler1DArray","sampler1DArrayShadow","isampler1D","isampler1DArray","usampler1D","usampler1DArray","isampler2DRect","usampler2DRect","samplerBuffer","isamplerBuffer","usamplerBuffer","sampler2DMS","isampler2DMS","usampler2DMS","sampler2DMSArray","isampler2DMSArray","usampler2DMSArray","trunc","round","roundEven","isnan","isinf","floatBitsToInt","floatBitsToUint","intBitsToFloat","uintBitsToFloat","packSnorm2x16","unpackSnorm2x16","packUnorm2x16","unpackUnorm2x16","packHalf2x16","unpackHalf2x16","outerProduct","transpose","determinant","inverse","texture","textureSize","textureProj","textureLod","textureOffset","texelFetch","texelFetchOffset","textureProjOffset","textureLodOffset","textureProjLod","textureProjLodOffset","textureGrad","textureGradOffset","textureProjGrad","textureProjGradOffset"],m={enableCache:!1};var g=o(55451),f=999,h=9999,u=0,d=1,p=2,y=3,U=4,P=5,w=6,b=7,k=8,A=9,B=10,q=11,K=["block-comment","line-comment","preprocessor","operator","integer","float","ident","builtin","keyword","whitespace","eof","integer"];function E(){var e,t,o,s=0,l=0,c=f,m=[],Q=[],Z=1,J=0,Y=0,ee=!1,te=!1,re="";return function(e){return Q=[],null!==e?F(e.replace?e.replace(/\r\n/g,"\n"):e):function L(e){return m.length&&X(m.join("")),c=B,X("(eof)"),Q}()};function X(e){e.length&&Q.push({type:K[c],data:e,position:Y,line:Z,column:J})}function F(t){var m;for(s=0,o=(re+=t).length;e=re[s],s<o;){switch(m=s,c){case u:s=V();break;case d:case p:s=M();break;case y:s=O();break;case U:s=$();break;case q:s=W();break;case P:s=z();break;case h:s=I();break;case A:s=H();break;case f:s=C()}m!==s&&("\n"===re[m]?(J=0,++Z):++J)}return l+=s,re=re.slice(s),Q}function C(){return m=m.length?[]:m,"/"===t&&"*"===e?(Y=l+s-1,c=u,t=e,s+1):"/"===t&&"/"===e?(Y=l+s-1,c=d,t=e,s+1):"#"===e?(c=p,Y=l+s,s):/\s/.test(e)?(c=A,Y=l+s,s):(ee=/\d/.test(e),te=/[^\w_]/.test(e),Y=l+s,c=ee?U:te?y:h,s)}function H(){return/[^\s]/g.test(e)?(X(m.join("")),c=f,s):(m.push(e),t=e,s+1)}function M(){return"\r"!==e&&"\n"!==e||"\\"===t?(m.push(e),t=e,s+1):(X(m.join("")),c=f,s)}function V(){return"/"===e&&"*"===t?(m.push(e),X(m.join("")),c=f,s+1):(m.push(e),t=e,s+1)}function O(){if("."===t&&/\d/.test(e))return c=P,s;if("/"===t&&"*"===e)return c=u,s;if("/"===t&&"/"===e)return c=d,s;if("."===e&&m.length){for(;N(m););return c=P,s}if(";"===e||")"===e||"("===e){if(m.length)for(;N(m););return X(e),c=f,s+1}var o=2===m.length&&"="!==e;if(/[\w_\d\s]/.test(e)||o){for(;N(m););return c=f,s}return m.push(e),t=e,s+1}function N(e){for(var t,o,s=0;;){if(t=g.o.indexOf(e.slice(0,e.length+s).join("")),o=g.o[t],-1===t){if(s--+e.length>0)continue;o=e.slice(0,1).join("")}return X(o),Y+=o.length,(m=m.slice(o.length)).length}}function W(){return/[^a-fA-F0-9]/.test(e)?(X(m.join("")),c=f,s):(m.push(e),t=e,s+1)}function $(){return"."===e||/[eE]/.test(e)?(m.push(e),c=P,t=e,s+1):"x"===e&&1===m.length&&"0"===m[0]?(c=q,m.push(e),t=e,s+1):/[^\d]/.test(e)?(X(m.join("")),c=f,s):(m.push(e),t=e,s+1)}function z(){return"f"===e&&(m.push(e),t=e,s+=1),/[eE]/.test(e)||"-"===e&&/[eE]/.test(t)?(m.push(e),t=e,s+1):/[^\d]/.test(e)?(X(m.join("")),c=f,s):(m.push(e),t=e,s+1)}function I(){if(/[^\d\w_]/.test(e)){var o=m.join("");return c=g.l.indexOf(o)>-1?k:g.b.indexOf(o)>-1?b:w,X(m.join("")),c=f,s}return m.push(e),t=e,s+1}}function v(e){return function _(e){var t=E(),o=[];return(o=o.concat(t(e))).concat(t(null))}(e)}const Q=new Set(["GL_OES_standard_derivatives","GL_EXT_frag_depth","GL_EXT_draw_buffers","GL_EXT_shader_texture_lod"]);function D(e,t){for(let o=t-1;o>=0;o--){const t=e[o];if("whitespace"!==t.type&&"block-comment"!==t.type){if("keyword"!==t.type)break;if("attribute"===t.data||"in"===t.data)return!0}}return!1}function R(e,t,o,s){s=s||o;for(const l of e)if("ident"===l.type&&l.data===o)return s in t?t[s]++:t[s]=0,R(e,t,s+"_"+t[s],s);return o}function T(e,t){let o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"afterVersion";function r(e,t){for(let o=t;o<e.length;o++){const t=e[o];if("operator"===t.type&&";"===t.data)return o}return null}const s={data:"\n",type:"whitespace"},i=t=>t<e.length&&/[^\r\n]$/.test(e[t].data);let l=function n(e){let t=-1,s=0,l=-1;for(let c=0;c<e.length;c++){const m=e[c];if("preprocessor"===m.type&&(/\#(if|ifdef|ifndef)\s+.+/.test(m.data)?++s:/\#endif\s*.*/.test(m.data)&&--s),"afterVersion"!==o&&"afterPrecision"!==o||"preprocessor"===m.type&&m.data.startsWith("#version")&&(l=Math.max(l,c)),"afterPrecision"===o&&"keyword"===m.type&&"precision"===m.data){const t=r(e,c);if(null===t)throw new Error("precision statement not followed by any semicolons!");l=Math.max(l,t)}t<l&&0===s&&(t=c)}return t+1}(e);i(l-1)&&e.splice(l++,0,s);for(const c of t)e.splice(l++,0,c);i(l-1)&&i(l)&&e.splice(l,0,s)}function S(e,t,o){T(e,[{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:arguments.length>3&&void 0!==arguments[3]?arguments[3]:"lowp"},{type:"whitespace",data:" "},{type:"keyword",data:o},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function G(e,t,o,s){let l=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"lowp";T(e,[{type:"keyword",data:"layout"},{type:"operator",data:"("},{type:"keyword",data:"location"},{type:"whitespace",data:" "},{type:"operator",data:"="},{type:"whitespace",data:" "},{type:"integer",data:s.toString()},{type:"operator",data:")"},{type:"whitespace",data:" "},{type:"keyword",data:"out"},{type:"whitespace",data:" "},{type:"keyword",data:l},{type:"whitespace",data:" "},{type:"keyword",data:o},{type:"whitespace",data:" "},{type:"ident",data:t},{type:"operator",data:";"}],"afterPrecision")}function X(e,t){let o,s,l=-1;for(let c=t;c<e.length;c++){const t=e[c];if("operator"===t.type&&("["===t.data&&(o=c),"]"===t.data)){s=c;break}"integer"===t.type&&(l=parseInt(t.data,10))}return o&&s&&e.splice(o,s-o+1),l}function F(e,t){if(e.startsWith("#version 300"))return e;const o=function C(e){return m.enableCache?Z.get(e):null}(e);if(null!=o)return o;const s=v(e);if("300 es"===function x(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"100",o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"300 es";const s=/^\s*\#version\s+([0-9]+(\s+[a-zA-Z]+)?)\s*/;for(const l of e)if("preprocessor"===l.type){const e=s.exec(l.data);if(e){const s=e[1].replaceAll(/\s\s+/g," ");if(s===o)return s;if(s===t)return l.data="#version "+o,t;throw new Error("unknown glsl version: "+s)}}return e.splice(0,0,{type:"preprocessor",data:"#version "+o},{type:"whitespace",data:"\n"}),null}(s,"100","300 es"))return e;let g=null,f=null;const h={},u={};for(let m=0;m<s.length;++m){const e=s[m];switch(e.type){case"keyword":t===l.Co.VERTEX_SHADER&&"attribute"===e.data?e.data="in":"varying"===e.data&&(e.data=t===l.Co.VERTEX_SHADER?"out":"in");break;case"builtin":if(/^texture(2D|Cube)(Proj)?(Lod|Grad)?(EXT)?$/.test(e.data.trim())&&(e.data=e.data.replaceAll(/(2D|Cube|EXT)/g,"")),t===l.Co.FRAGMENT_SHADER&&"gl_FragColor"===e.data&&(g||(g=R(s,h,"fragColor"),S(s,g,"vec4")),e.data=g),t===l.Co.FRAGMENT_SHADER&&"gl_FragData"===e.data){const t=X(s,m+1),o=R(s,h,"fragData");G(s,o,"vec4",t,"mediump"),e.data=o}else t===l.Co.FRAGMENT_SHADER&&"gl_FragDepthEXT"===e.data&&(f||(f=R(s,h,"gl_FragDepth")),e.data=f);break;case"ident":if(c.includes(e.data)){if(t===l.Co.VERTEX_SHADER&&D(s,m))throw new Error("attribute in vertex shader uses a name that is a reserved word in glsl 300 es");e.data in u||(u[e.data]=R(s,h,e.data)),e.data=u[e.data]}}}for(let l=s.length-1;l>=0;--l){const e=s[l];if("preprocessor"===e.type){const t=e.data.match(/\#extension\s+(.*)\:/);if(t&&t[1]&&Q.has(t[1].trim())){const e=s[l+1];s.splice(l,e&&"whitespace"===e.type?2:1)}const o=e.data.match(/\#ifdef\s+(.*)/);o&&o[1]&&Q.has(o[1].trim())&&(e.data="#if 1");const c=e.data.match(/\#ifndef\s+(.*)/);c&&c[1]&&Q.has(c[1].trim())&&(e.data="#if 0")}}return function H(e,t){return m.enableCache&&Z.set(e,t),t}(e,function j(e){return e.map((e=>"eof"!==e.type?e.data:"")).join("")}(s))}const Z=new Map;class r{constructor(e,t,o,c){var m;let g=arguments.length>4&&void 0!==arguments[4]?arguments[4]:new Map,f=arguments.length>5&&void 0!==arguments[5]?arguments[5]:[];this._context=e,this._locations=c,this._uniformBlockBindings=g,this._transformFeedbackVaryings=f,this._refCount=1,this._compiled=!1,this._linesOfCode=0,this._nameToUniformLocation=new Map,this._nameToUniform1=new Map,this._nameToUniform1v=new Map,this._nameToUniform2=new Map,this._nameToUniform3=new Map,this._nameToUniform4=new Map,this._nameToUniformMatrix3=new Map,this._nameToUniformMatrix4=new Map,e||console.error("RenderingContext isn't initialized!"),0===t.length&&console.error("Shaders source should not be empty!"),t=F(t,l.Co.VERTEX_SHADER),o=F(o,l.Co.FRAGMENT_SHADER),this._vShader=Program_s(this._context,l.Co.VERTEX_SHADER,t),this._fShader=Program_s(this._context,l.Co.FRAGMENT_SHADER,o),J.enabled&&(this._linesOfCode=t.match(/\n/g).length+o.match(/\n/g).length+2,this._context.instanceCounter.increment(l.vt.LinesOfCode,this._vShader,this._linesOfCode)),this._vShader&&this._fShader||console.error("Error loading shaders!"),this._context.instanceCounter.increment(l.vt.Shader,this),(0,s.Xc)()&&(this.vertexShader=t,this.fragmentShader=o),this.usedMemory=t.length+o.length;const h=this._context.gl,u=h.createProgram();h.attachShader(u,this._vShader),h.attachShader(u,this._fShader),this._locations.forEach(((e,t)=>h.bindAttribLocation(u,e,t))),null!==(m=this._transformFeedbackVaryings)&&void 0!==m&&m.length&&h.transformFeedbackVaryings(u,this._transformFeedbackVaryings,h.SEPARATE_ATTRIBS),h.linkProgram(u),(0,s.Xc)()&&!h.getProgramParameter(u,h.LINK_STATUS)&&console.error("Could not link shader\nvalidated: ".concat(h.getProgramParameter(u,h.VALIDATE_STATUS),", gl error ").concat(h.getError(),", vertex: ").concat(h.getShaderParameter(this._vShader,h.COMPILE_STATUS),", fragment: ").concat(h.getShaderParameter(this._fShader,h.COMPILE_STATUS),", info log: ").concat(h.getProgramInfoLog(u),", vertex source: ").concat(this.vertexShader,", fragment source: ").concat(this.fragmentShader));for(const[s,l]of this._uniformBlockBindings){const e=h.getUniformBlockIndex(u,s);e<4294967295&&h.uniformBlockBinding(u,e,l)}this._glName=u,this._context.instanceCounter.increment(l.vt.Program,this)}get glName(){return this._glName}get hasGLName(){return null!=this._glName}get hasTransformFeedbackVaryings(){var e;return!(null===(e=this._transformFeedbackVaryings)||void 0===e||!e.length)}get compiled(){if(this._compiled)return!0;const e=this._context.gl.getExtension("KHR_parallel_shader_compile");return null==e||null==this.glName?(this._compiled=!0,!0):(this._compiled=!!this._context.gl.getProgramParameter(this.glName,e.COMPLETION_STATUS_KHR),this._compiled)}dispose(){if(--this._refCount>0)return;const e=this._context.gl,t=this._context.instanceCounter;this._nameToUniformLocation.forEach((e=>e&&t.decrement(l.vt.Uniform,e))),this._nameToUniformLocation.clear(),this._vShader&&(this._linesOfCode>0&&(t.decrement(l.vt.LinesOfCode,this._vShader,this._linesOfCode),this._linesOfCode=0),e.deleteShader(this._vShader),this._vShader=null,t.decrement(l.vt.Shader,this)),this._fShader&&(e.deleteShader(this._fShader),this._fShader=null),this._glName&&(e.deleteProgram(this._glName),this._glName=null,t.decrement(l.vt.Program,this))}ref(){++this._refCount}_getUniformLocation(e){const t=this._nameToUniformLocation.get(e);if(void 0!==t)return t;if(this.glName){const t=this._context.gl.getUniformLocation(this.glName,e);return this._nameToUniformLocation.set(e,t),t&&this._context.instanceCounter.increment(l.vt.Uniform,t),t}return null}hasUniform(e){return null!=this._getUniformLocation(e)}setUniform1i(e,t){const o=this._nameToUniform1.get(e);void 0!==o&&t===o||(this._context.gl.uniform1i(this._getUniformLocation(e),t),this._nameToUniform1.set(e,t))}setUniform1iv(e,t){Program_m(this._nameToUniform1v,e,t)&&this._context.gl.uniform1iv(this._getUniformLocation(e),t)}setUniform2iv(e,t){Program_m(this._nameToUniform2,e,t)&&this._context.gl.uniform2iv(this._getUniformLocation(e),t)}setUniform3iv(e,t){Program_m(this._nameToUniform3,e,t)&&this._context.gl.uniform3iv(this._getUniformLocation(e),t)}setUniform4iv(e,t){Program_m(this._nameToUniform4,e,t)&&this._context.gl.uniform4iv(this._getUniformLocation(e),t)}setUniform1f(e,t){const o=this._nameToUniform1.get(e);void 0!==o&&t===o||(this._context.gl.uniform1f(this._getUniformLocation(e),t),this._nameToUniform1.set(e,t))}setUniform1fv(e,t){Program_m(this._nameToUniform1v,e,t)&&this._context.gl.uniform1fv(this._getUniformLocation(e),t)}setUniform2f(e,t,o){const s=this._nameToUniform2.get(e);void 0===s?(this._context.gl.uniform2f(this._getUniformLocation(e),t,o),this._nameToUniform2.set(e,[t,o])):t===s[0]&&o===s[1]||(this._context.gl.uniform2f(this._getUniformLocation(e),t,o),s[0]=t,s[1]=o)}setUniform2fv(e,t){Program_m(this._nameToUniform2,e,t)&&this._context.gl.uniform2fv(this._getUniformLocation(e),t)}setUniform3f(e,t,o,s){const l=this._nameToUniform3.get(e);void 0===l?(this._context.gl.uniform3f(this._getUniformLocation(e),t,o,s),this._nameToUniform3.set(e,[t,o,s])):t===l[0]&&o===l[1]&&s===l[2]||(this._context.gl.uniform3f(this._getUniformLocation(e),t,o,s),l[0]=t,l[1]=o,l[2]=s)}setUniform3fv(e,t){const o=this._getUniformLocation(e);null!=o&&Program_m(this._nameToUniform3,e,t)&&this._context.gl.uniform3fv(o,t)}setUniform4f(e,t,o,s,l){const c=this._nameToUniform4.get(e);void 0===c?(this._context.gl.uniform4f(this._getUniformLocation(e),t,o,s,l),this._nameToUniform4.set(e,[t,o,s,l])):void 0!==c&&t===c[0]&&o===c[1]&&s===c[2]&&l===c[3]||(this._context.gl.uniform4f(this._getUniformLocation(e),t,o,s,l),c[0]=t,c[1]=o,c[2]=s,c[3]=l)}setUniform4fv(e,t){const o=this._getUniformLocation(e);null!=o&&Program_m(this._nameToUniform4,e,t)&&this._context.gl.uniform4fv(o,t)}setUniformMatrix3fv(e,t){let o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=this._getUniformLocation(e);null!=s&&Program_m(this._nameToUniformMatrix3,e,t)&&this._context.gl.uniformMatrix3fv(s,o,t)}setUniformMatrix4fv(e,t){let o=arguments.length>2&&void 0!==arguments[2]&&arguments[2];const s=this._getUniformLocation(e);null!=s&&Program_m(this._nameToUniformMatrix4,e,t)&&this._context.gl.uniformMatrix4fv(s,o,t)}stop(){}}function Program_s(e,t,o){const c=e.gl,m=c.createShader(t);return c.shaderSource(m,o),c.compileShader(m),(0,s.Xc)()&&!c.getShaderParameter(m,c.COMPILE_STATUS)&&(console.error("Compile error in ".concat(t===l.Co.VERTEX_SHADER?"vertex":"fragment"," shader")),console.error(c.getShaderInfoLog(m)),console.error(function a(e){let t=2;return e.replaceAll("\n",(()=>"\n"+function Program_h(e){return e>=1e3?e.toString():("  "+e).slice(-3)}(t++)+":"))}(o))),m}function Program_m(e,t,o){const s=e.get(t);if(!s)return e.set(t,Array.from(o)),!0;const l=o.length;if(s.length!==l)return e.set(t,Array.from(o)),!0;for(let c=0;c<l;++c){const e=o[c];if(s[c]!==e){for(s[c]=e;c<l;++c)s[c]=o[c];return!0}}return!1}const J={enabled:!1}}}]);
//# sourceMappingURL=6073.da095c36.chunk.js.map