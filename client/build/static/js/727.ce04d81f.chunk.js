"use strict";(self.webpackChunkSEEDs_v2_0_Client=self.webpackChunkSEEDs_v2_0_Client||[]).push([[727],{3764:(t,a,l)=>{l.d(a,{Zn:()=>n,aZ:()=>e,lh:()=>r,nA:()=>s,p3:()=>i,r9:()=>o});var u=l(62599);function r(t,a){if(null==t)return null;const l={},d=new RegExp("^".concat(a),"i");for(const p of Object.keys(t))if(d.test(p)){const d=p.substring(a.length);l[u.et.fromJSON(d)]=t[p]}return l}function i(t,a,l){if(null!=t){a.attributes||(a.attributes={});for(const d in t){const p=u.et.toJSON(d);a.attributes["".concat(l).concat(p)]=t[d]}}}function e(t){const a={};for(const l of Object.keys(t)){const d=l;a[u.et.fromJSON(d)]=t[l]}return a}function s(t){const a={};for(const l of Object.keys(t)){const d=l;a[u.et.toJSON(d)]=t[l]}return a}function n(t,a){return null==t||null==a?null:Math.round((t-a)/6e4)}function o(t){var a,l,u;const d=t.toJSON(),p=d;return p.accumulateAttributeNames&&(p.accumulateAttributeNames=null===(a=d.accumulateAttributeNames)||void 0===a?void 0:a.join()),p.attributeParameterValues&&(p.attributeParameterValues=JSON.stringify(d.attributeParameterValues)),p.barriers&&(p.barriers=JSON.stringify(d.barriers)),p.outSR&&(p.outSR=null===(l=d.outSR)||void 0===l?void 0:l.wkid),p.overrides&&(p.overrides=JSON.stringify(d.overrides)),p.polygonBarriers&&(p.polygonBarriers=JSON.stringify(d.polygonBarriers)),p.polylineBarriers&&(p.polylineBarriers=JSON.stringify(d.polylineBarriers)),p.restrictionAttributeNames&&(p.restrictionAttributeNames=null===(u=d.restrictionAttributeNames)||void 0===u?void 0:u.join()),p.stops&&(p.stops=JSON.stringify(d.stops)),p.travelMode&&(p.travelMode=JSON.stringify(d.travelMode)),p}},64980:(t,a,l)=>{l.d(a,{A:()=>S});var u,d=l(80671),p=l(13812),m=l(21365),b=l(21343),c=l(88706),y=l(83375),v=l(57453),T=(l(50886),l(89412),l(76761),l(68682)),h=l(60141),f=l(62599);let g=u=class extends((0,c.O)(y.oY)){constructor(t){super(t),this.directionLineType=null,this.directionPointId=null,this.distance=null,this.duration=null,this.fromLevel=null,this.geometry=null,this.objectId=null,this.popupTemplate=null,this.symbol=null,this.toLevel=null,this.type="direction-line"}static fromGraphic(t){var a,l,d;return new u({directionLineType:f.gD.fromJSON(t.attributes.DirectionLineType),directionPointId:t.attributes.DirectionPointID,distance:t.attributes.Meters,duration:t.attributes.Minutes,fromLevel:null!==(a=t.attributes.FromLevel)&&void 0!==a?a:null,geometry:t.geometry,objectId:null!==(l=t.attributes.ObjectID)&&void 0!==l?l:t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,symbol:t.symbol,toLevel:null!==(d=t.attributes.ToLevel)&&void 0!==d?d:null})}toGraphic(){const t={ObjectID:this.objectId,DirectionLineType:null!=this.directionLineType?f.gD.toJSON(this.directionLineType):null,DirectionPointID:this.directionPointId,Meters:this.distance,Minutes:this.duration};return null!=this.fromLevel&&(t.FromLevel=this.fromLevel),null!=this.toLevel&&(t.ToLevel=this.toLevel),new p.A({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};g.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"DirectionLineType",alias:"Line Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionsLineType",codedValues:[{name:"Unknown",code:0},{name:"Segment",code:1},{name:"Maneuver Segment",code:2},{name:"Restriction violation",code:3},{name:"Scale cost barrier crossing",code:4},{name:"Heavy Traffic",code:5},{name:"Slow Traffic",code:6},{name:"Moderate Traffic",code:7}]}},{name:"DirectionPointID",alias:"Direction Point ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"FromLevel",alias:"Start from 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1},{name:"Meters",alias:"Length in Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"Minutes",alias:"Duration in Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"ToLevel",alias:"End at 3D Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1}],g.popupInfo={title:"Direction Lines",fieldInfos:[{fieldName:"DirectionLineType",label:"Line Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Meters",label:"Length in Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Minutes",label:"Duration in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DirectionPointID",label:"Direction Point ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"FromLevel",label:"Start from 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ToLevel",label:"End at 3D Level",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,d._)([(0,v.MZ)({type:f.gD.apiValues,json:{read:{source:"attributes.DirectionLineType",reader:f.gD.read}}})],g.prototype,"directionLineType",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.DirectionPointID"}}})],g.prototype,"directionPointId",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.Meters"}}})],g.prototype,"distance",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.Minutes"}}})],g.prototype,"duration",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.FromLevel"}}})],g.prototype,"fromLevel",void 0),(0,d._)([(0,v.MZ)({type:h.A})],g.prototype,"geometry",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.ObjectID"}}})],g.prototype,"objectId",void 0),(0,d._)([(0,v.MZ)({type:m.A})],g.prototype,"popupTemplate",void 0),(0,d._)([(0,v.MZ)({types:b.Es})],g.prototype,"symbol",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.ToLevel"}}})],g.prototype,"toLevel",void 0),(0,d._)([(0,v.MZ)({readOnly:!0,json:{read:!1}})],g.prototype,"type",void 0),g=u=(0,d._)([(0,T.$)("esri.rest.support.DirectionLine")],g);const S=g},61810:(t,a,l)=>{l.d(a,{A:()=>N});var u,d=l(80671),p=l(13812),m=l(21365),b=l(21343),c=l(88706),y=l(83375),v=l(57453),T=(l(50886),l(89412),l(76761),l(59299)),h=l(68682),f=l(57264),g=l(62599);let S=u=class extends((0,c.O)(y.oY)){constructor(t){super(t),this.alternateName=null,this.arrivalTime=null,this.arrivalTimeOffset=null,this.azimuth=null,this.branchName=null,this.directionPointType=null,this.displayText=null,this.exitName=null,this.geometry=null,this.intersectingName=null,this.level=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sequence=null,this.shortVoiceInstruction=null,this.stopId=null,this.symbol=null,this.towardName=null,this.type="direction-point",this.voiceInstruction=null}readArrivalTime(t,a){return null!=a.attributes.ArrivalTime?new Date(a.attributes.ArrivalTime):null}static fromGraphic(t){var a,l,d,p,m,b,c,y,v,T,h,f,S,N;return new u({alternateName:null!==(a=t.attributes.AlternateName)&&void 0!==a?a:null,arrivalTime:null!=t.attributes.ArrivalTime?new Date(t.attributes.ArrivalTime):null,arrivalTimeOffset:null!==(l=t.attributes.ArrivalUTCOffset)&&void 0!==l?l:null,azimuth:null!==(d=t.attributes.Azimuth)&&void 0!==d?d:null,branchName:null!==(p=t.attributes.BranchName)&&void 0!==p?p:null,directionPointType:g._6.fromJSON(t.attributes.DirectionPointType),displayText:null!==(m=t.attributes.DisplayText)&&void 0!==m?m:null,exitName:null!==(b=t.attributes.ExitName)&&void 0!==b?b:null,geometry:t.geometry,intersectingName:null!==(c=t.attributes.IntersectingName)&&void 0!==c?c:null,level:null!==(y=t.attributes.Level)&&void 0!==y?y:null,name:null!==(v=t.attributes.Name)&&void 0!==v?v:null,objectId:null!==(T=t.attributes.ObjectID)&&void 0!==T?T:t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,sequence:t.attributes.Sequence,shortVoiceInstruction:null!==(h=t.attributes.ShortVoiceInstruction)&&void 0!==h?h:null,stopId:null!==(f=t.attributes.StopID)&&void 0!==f?f:null,symbol:t.symbol,towardName:null!==(S=t.attributes.TowardName)&&void 0!==S?S:null,voiceInstruction:null!==(N=t.attributes.VoiceInstruction)&&void 0!==N?N:null})}toGraphic(){const t={ObjectID:this.objectId,DirectionPointType:null!=this.directionPointType?g._6.toJSON(this.directionPointType):null,Sequence:this.sequence,StopID:this.stopId};return null!=this.alternateName&&(t.AlternateName=this.alternateName),null!=this.arrivalTime&&(t.ArrivalTime=this.arrivalTime.getTime()),null!=this.arrivalTimeOffset&&(t.ArrivalUTCOffset=this.arrivalTimeOffset),null!=this.azimuth&&(t.Azimuth=this.azimuth),null!=this.branchName&&(t.BranchName=this.branchName),null!=this.displayText&&(t.DisplayText=this.displayText),null!=this.exitName&&(t.ExitName=this.exitName),null!=this.intersectingName&&(t.IntersectingName=this.intersectingName),null!=this.level&&(t.Level=this.level),null!=this.name&&(t.Name=this.name),null!=this.shortVoiceInstruction&&(t.ShortVoiceInstruction=this.shortVoiceInstruction),null!=this.towardName&&(t.TowardName=this.towardName),null!=this.voiceInstruction&&(t.VoiceInstruction=this.voiceInstruction),new p.A({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};S.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AlternateName",alias:"Alternative Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ArrivalTime",alias:"Maneuver Starts at",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Azimuth",alias:"Azimuth",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"BranchName",alias:"Signpost Branch Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"DirectionPointType",alias:"Directions Item Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriDirectionPointType",codedValues:[{name:"Unknown",code:0},{name:"",code:1},{name:"Arrive at stop",code:50},{name:"Depart at stop",code:51},{name:"Go straight",code:52},{name:"Take ferry",code:100},{name:"Take off ferry",code:101},{name:"Keep center at fork",code:102},{name:"Take roundabout",code:103},{name:"Make U-Turn",code:104},{name:"Pass the door",code:150},{name:"Take stairs",code:151},{name:"",code:152},{name:"Take escalator",code:153},{name:"Take pedestrian ramp",code:154},{name:"Keep left at fork",code:200},{name:"Ramp left",code:201},{name:"Take left-handed roundabout",code:202},{name:"Make left-handed U-Turn",code:203},{name:"Bear left",code:204},{name:"Turn left",code:205},{name:"Make sharp left",code:206},{name:"Turn left, followed by turn left",code:207},{name:"Turn left, followed by turn right",code:208},{name:"Keep right at fork",code:300},{name:"Ramp right",code:301},{name:"Take right-handed roundabout",code:302},{name:"Make right-handed U-Turn",code:303},{name:"Bear right",code:304},{name:"Turn right",code:305},{name:"Make sharp right",code:306},{name:"Turn right, followed by turn left",code:307},{name:"Turn right, followed by turn right",code:308},{name:"Indicates up direction of elevator",code:400},{name:"Indicates up direction of escalator",code:401},{name:"Take up-stairs",code:402},{name:"Indicates down direction of elevator",code:500},{name:"Indicates down direction of escalator",code:501},{name:"Take down-stairs",code:502},{name:"General event",code:1e3},{name:"Landmark",code:1001},{name:"Time zone change",code:1002},{name:"Heavy traffic segment",code:1003},{name:"Scale cost barrier crossing",code:1004},{name:"Administrative Border crossing",code:1005},{name:"Restriction violation",code:1006}]}},{name:"DisplayText",alias:"Text to Display",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"ExitName",alias:"Highway Exit Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"IntersectingName",alias:"Intersecting Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Level",alias:"3D Logical Level",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Name",alias:"Primary Feature Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ShortVoiceInstruction",alias:"Voice Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StopID",alias:"Stop ID",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TowardName",alias:"Signpost Toward Name",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null},{name:"VoiceInstruction",alias:"Voice Full Instruction",type:"esriFieldTypeString",length:2048,editable:!0,nullable:!0,visible:!0,domain:null}],S.popupInfo={title:"{DisplayText}",fieldInfos:[{fieldName:"DirectionPointType",label:"Directions Item Type",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"DisplayText",label:"Text to Display",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"StopID",label:"Stop ID",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Maneuver Starts at",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Azimuth",label:"Azimuth",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Name",label:"Primary Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AlternateName",label:"Alternative Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ExitName",label:"Highway Exit Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"IntersectingName",label:"Intersecting Feature Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BranchName",label:"Signpost Branch Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TowardName",label:"Signpost Toward Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ShortVoiceInstruction",label:"Voice Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"VoiceInstruction",label:"Voice Full Instruction",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.AlternateName"}}})],S.prototype,"alternateName",void 0),(0,d._)([(0,v.MZ)()],S.prototype,"arrivalTime",void 0),(0,d._)([(0,T.w)("arrivalTime",["attributes.ArrivalTime"])],S.prototype,"readArrivalTime",null),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.ArrivalUTCOffset"}}})],S.prototype,"arrivalTimeOffset",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.Azimuth"}}})],S.prototype,"azimuth",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.BranchName"}}})],S.prototype,"branchName",void 0),(0,d._)([(0,v.MZ)({type:g._6.apiValues,json:{read:{source:"attributes.DirectionPointType",reader:g._6.read}}})],S.prototype,"directionPointType",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.DisplayText"}}})],S.prototype,"displayText",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.ExitName"}}})],S.prototype,"exitName",void 0),(0,d._)([(0,v.MZ)({type:f.A})],S.prototype,"geometry",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.IntersectingName"}}})],S.prototype,"intersectingName",void 0),(0,d._)([(0,v.MZ)()],S.prototype,"level",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.Name"}}})],S.prototype,"name",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.ObjectID"}}})],S.prototype,"objectId",void 0),(0,d._)([(0,v.MZ)({type:m.A})],S.prototype,"popupTemplate",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.Sequence"}}})],S.prototype,"sequence",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.ShortVoiceInstruction"}}})],S.prototype,"shortVoiceInstruction",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.StopID"}}})],S.prototype,"stopId",void 0),(0,d._)([(0,v.MZ)({types:b.Es})],S.prototype,"symbol",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.TowardName"}}})],S.prototype,"towardName",void 0),(0,d._)([(0,v.MZ)({readOnly:!0,json:{read:!1}})],S.prototype,"type",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.VoiceInstruction"}}})],S.prototype,"voiceInstruction",void 0),S=u=(0,d._)([(0,h.$)("esri.rest.support.DirectionPoint")],S);const N=S},1442:(t,a,l)=>{l.d(a,{A:()=>A});var u,d=l(80671),p=l(13812),m=l(21365),b=l(21343),c=l(88706),y=l(83375),v=l(57453),T=(l(50886),l(89412),l(76761),l(59299)),h=l(68682),f=l(51715),g=l(57264),S=l(3764),N=l(62599);let O=u=class extends((0,c.O)(y.oY)){constructor(t){super(t),this.addedCost=null,this.barrierType=null,this.costs=null,this.curbApproach=null,this.fullEdge=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.sideOfEdge=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.type="point-barrier"}readCosts(t,a){return(0,S.lh)(a.attributes,"Attr_")}writeCosts(t,a){(0,S.p3)(t,a,"Attr_")}static fromGraphic(t){var a,l,d;return new u({addedCost:null!==(a=t.attributes.AddedCost)&&void 0!==a?a:null,barrierType:null!=t.attributes.BarrierType?N.iM.fromJSON(t.attributes.BarrierType):null,costs:null!=t.attributes.Costs?(0,S.aZ)(JSON.parse(t.attributes.Costs)):null,curbApproach:null!=t.attributes.CurbApproach?N.JJ.fromJSON(t.attributes.CurbApproach):null,fullEdge:null!=t.attributes.FullEdge?N.fe.fromJSON(t.attributes.FullEdge):null,geometry:t.geometry,name:null!==(l=t.attributes.Name)&&void 0!==l?l:null,objectId:null!==(d=t.attributes.ObjectID)&&void 0!==d?d:t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,status:null!=t.attributes.Status?N.$r.fromJSON(t.attributes.Status):null,symbol:t.symbol})}toGraphic(){const t={ObjectID:this.objectId,AddedCost:this.addedCost,BarrierType:null!=this.barrierType?N.iM.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify((0,S.nA)(this.costs)):null,CurbApproach:null!=this.curbApproach?N.JJ.toJSON(this.curbApproach):null,FullEdge:null!=this.fullEdge?N.fe.toJSON(this.fullEdge):null,Name:this.name,Status:null!=this.status?N.$r.toJSON(this.status):null};return new p.A({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};O.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AddedCost",alias:"Added Cost",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"FullEdge",alias:"Full Edge",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAIntYesNo",codedValues:[{name:"No",code:0},{name:"Yes",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}}],O.popupInfo={title:"Point Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"AddedCost",label:"Added Cost",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,d._)([(0,v.MZ)()],O.prototype,"addedCost",void 0),(0,d._)([(0,v.MZ)({type:N.iM.apiValues,json:{name:"attributes.BarrierType",read:{reader:N.iM.read},write:{writer:N.iM.write}}})],O.prototype,"barrierType",void 0),(0,d._)([(0,v.MZ)()],O.prototype,"costs",void 0),(0,d._)([(0,T.w)("costs",["attributes"])],O.prototype,"readCosts",null),(0,d._)([(0,f.K)("costs")],O.prototype,"writeCosts",null),(0,d._)([(0,v.MZ)({constructOnly:!0,type:N.JJ.apiValues,json:{read:{source:"attributes.CurbApproach",reader:N.JJ.read}}})],O.prototype,"curbApproach",void 0),(0,d._)([(0,v.MZ)({type:N.fe.apiValues,json:{name:"attributes.FullEdge",read:{reader:N.fe.read},write:{writer:N.fe.write}}})],O.prototype,"fullEdge",void 0),(0,d._)([(0,v.MZ)({type:g.A,json:{write:!0}})],O.prototype,"geometry",void 0),(0,d._)([(0,v.MZ)({json:{name:"attributes.Name"}})],O.prototype,"name",void 0),(0,d._)([(0,v.MZ)({json:{name:"attributes.ObjectID"}})],O.prototype,"objectId",void 0),(0,d._)([(0,v.MZ)({type:m.A})],O.prototype,"popupTemplate",void 0),(0,d._)([(0,v.MZ)({type:N.mt.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:N.mt.read}}})],O.prototype,"sideOfEdge",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.SourceID"}}})],O.prototype,"sourceId",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.SourceOID"}}})],O.prototype,"sourceOid",void 0),(0,d._)([(0,v.MZ)({type:N.$r.apiValues,json:{read:{source:"attributes.Status",reader:N.$r.read}}})],O.prototype,"status",void 0),(0,d._)([(0,v.MZ)({types:b.Es})],O.prototype,"symbol",void 0),(0,d._)([(0,v.MZ)({readOnly:!0,json:{read:!1}})],O.prototype,"type",void 0),O=u=(0,d._)([(0,h.$)("esri.rest.support.PointBarrier")],O);const A=O},74754:(t,a,l)=>{l.d(a,{A:()=>A});var u,d=l(80671),p=l(13812),m=l(21365),b=l(21343),c=l(88706),y=l(83375),v=l(57453),T=(l(50886),l(89412),l(76761),l(59299)),h=l(68682),f=l(51715),g=l(48343),S=l(3764),N=l(62599);let O=u=class extends((0,c.O)(y.oY)){constructor(t){super(t),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polygon-barrier"}readCosts(t,a){return(0,S.lh)(a.attributes,"Attr_")}writeCosts(t,a){(0,S.p3)(t,a,"Attr_")}static fromGraphic(t){var a,l,d;return new u({barrierType:null!=t.attributes.BarrierType?N.iM.fromJSON(t.attributes.BarrierType):null,costs:null!=t.attributes.Costs?(0,S.aZ)(JSON.parse(t.attributes.Costs)):null,geometry:t.geometry,name:null!==(a=t.attributes.Name)&&void 0!==a?a:null,objectId:null!==(l=t.attributes.ObjectID)&&void 0!==l?l:t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,scaleFactor:null!==(d=t.attributes.ScaleFactor)&&void 0!==d?d:null,symbol:t.symbol})}toGraphic(){var t,a;const l={ObjectID:this.objectId,BarrierType:null!=this.barrierType?N.iM.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify((0,S.nA)(this.costs)):null,Name:null!==(t=this.name)&&void 0!==t?t:null,ScaleFactor:null!==(a=this.scaleFactor)&&void 0!==a?a:null};return new p.A({geometry:this.geometry,attributes:l,symbol:this.symbol,popupTemplate:this.popupTemplate})}};O.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],O.popupInfo={title:"Polygon Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,d._)([(0,v.MZ)({type:N.iM.apiValues,json:{name:"attributes.BarrierType",read:{reader:N.iM.read},write:{writer:N.iM.write}}})],O.prototype,"barrierType",void 0),(0,d._)([(0,v.MZ)()],O.prototype,"costs",void 0),(0,d._)([(0,T.w)("costs",["attributes"])],O.prototype,"readCosts",null),(0,d._)([(0,f.K)("costs")],O.prototype,"writeCosts",null),(0,d._)([(0,v.MZ)({type:g.A,json:{write:!0}})],O.prototype,"geometry",void 0),(0,d._)([(0,v.MZ)({json:{name:"attributes.Name"}})],O.prototype,"name",void 0),(0,d._)([(0,v.MZ)({json:{name:"attributes.ObjectID"}})],O.prototype,"objectId",void 0),(0,d._)([(0,v.MZ)({type:m.A})],O.prototype,"popupTemplate",void 0),(0,d._)([(0,v.MZ)()],O.prototype,"scaleFactor",void 0),(0,d._)([(0,v.MZ)({types:b.Es})],O.prototype,"symbol",void 0),(0,d._)([(0,v.MZ)({readOnly:!0,json:{read:!1}})],O.prototype,"type",void 0),O=u=(0,d._)([(0,h.$)("esri.rest.support.PolygonBarrier")],O);const A=O},68232:(t,a,l)=>{l.d(a,{A:()=>O});var u,d=l(80671),p=l(13812),m=l(21365),b=l(21343),c=l(88706),y=l(83375),v=l(57453),T=(l(50886),l(89412),l(76761),l(59299)),h=l(68682),f=l(60141),g=l(3764),S=l(62599);let N=u=class extends((0,c.O)(y.oY)){constructor(t){super(t),this.barrierType=null,this.costs=null,this.geometry=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.scaleFactor=null,this.symbol=null,this.type="polyline-barrier"}readCosts(t,a){return(0,g.lh)(a.attributes,"Attr_")}static fromGraphic(t){var a,l,d;return new u({barrierType:null!=t.attributes.BarrierType?S.iM.fromJSON(t.attributes.BarrierType):null,costs:null!=t.attributes.Costs?(0,g.aZ)(JSON.parse(t.attributes.Costs)):null,geometry:t.geometry,name:null!==(a=t.attributes.Name)&&void 0!==a?a:null,objectId:null!==(l=t.attributes.ObjectID)&&void 0!==l?l:t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,scaleFactor:null!==(d=t.attributes.ScaleFactor)&&void 0!==d?d:null,symbol:t.symbol})}toGraphic(){const t={ObjectID:this.objectId,BarrierType:null!=this.barrierType?S.iM.toJSON(this.barrierType):null,Costs:null!=this.costs?JSON.stringify((0,g.nA)(this.costs)):null,Name:this.name,ScaleFactor:this.scaleFactor};return new p.A({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};N.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"BarrierType",alias:"Barrier Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNABarrierType",codedValues:[{name:"Restriction",code:0},{name:"Scaled Cost",code:1},{name:"Added Cost",code:2}]}},{name:"Costs",alias:"Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"ScaleFactor",alias:"Scale Factor",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0}],N.popupInfo={title:"Line Barriers",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"BarrierType",label:"Barrier Type",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"ScaleFactor",isEditable:!0,tooltip:"",visible:!0,format:{places:3,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Costs",label:"Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,d._)([(0,v.MZ)({type:S.iM.apiValues,json:{read:{source:"attributes.BarrierType",reader:S.iM.read}}})],N.prototype,"barrierType",void 0),(0,d._)([(0,v.MZ)()],N.prototype,"costs",void 0),(0,d._)([(0,T.w)("costs",["attributes"])],N.prototype,"readCosts",null),(0,d._)([(0,v.MZ)({type:f.A,json:{write:!0}})],N.prototype,"geometry",void 0),(0,d._)([(0,v.MZ)({json:{name:"attributes.Name"}})],N.prototype,"name",void 0),(0,d._)([(0,v.MZ)({json:{name:"attributes.ObjectID"}})],N.prototype,"objectId",void 0),(0,d._)([(0,v.MZ)({type:m.A})],N.prototype,"popupTemplate",void 0),(0,d._)([(0,v.MZ)()],N.prototype,"scaleFactor",void 0),(0,d._)([(0,v.MZ)({types:b.Es})],N.prototype,"symbol",void 0),(0,d._)([(0,v.MZ)({readOnly:!0,json:{read:!1}})],N.prototype,"type",void 0),N=u=(0,d._)([(0,h.$)("esri.rest.support.PolylineBarrier")],N);const O=N},20466:(t,a,l)=>{l.d(a,{A:()=>O});var u,d=l(80671),p=l(13812),m=l(21365),b=l(21343),c=l(88706),y=l(83375),v=l(57453),T=(l(50886),l(89412),l(76761),l(59299)),h=l(68682),f=l(60141),g=l(3764),S=l(47171);let N=u=class extends((0,c.O)(y.oY)){constructor(t){super(t),this.analysisSettings=null,this.endTime=null,this.endTimeOffset=null,this.firstStopId=null,this.geometry=null,this.lastStopId=null,this.messages=null,this.name=null,this.objectId=null,this.popupTemplate=null,this.startTime=null,this.startTimeOffset=null,this.stopCount=null,this.symbol=null,this.totalCosts=null,this.totalDistance=null,this.totalDuration=null,this.totalLateDuration=null,this.totalViolations=null,this.totalWait=null,this.totalWaitDuration=null,this.type="route-info",this.version="1.0.0"}readEndTime(t,a){return null!=a.attributes.EndTimeUTC?new Date(a.attributes.EndTimeUTC):null}readEndTimeOffset(t,a){return(0,g.Zn)(a.attributes.EndTime,a.attributes.EndTimeUTC)}readStartTime(t,a){return null!=a.attributes.StartTimeUTC?new Date(a.attributes.StartTimeUTC):null}readStartTimeOffset(t,a){return(0,g.Zn)(a.attributes.StartTime,a.attributes.StartTimeUTC)}readTotalCosts(t,a){return(0,g.lh)(a.attributes,"Total_")}readTotalViolations(t,a){return(0,g.lh)(a.attributes,"TotalViolation_")}readTotalWait(t,a){return(0,g.lh)(a.attributes,"TotalWait_")}static fromGraphic(t){var a,l,d,p,m,b,c;return new u({analysisSettings:null!=t.attributes.AnalysisSettings?S.A.fromJSON(JSON.parse(t.attributes.AnalysisSettings)):null,endTime:null!=t.attributes.EndTime?new Date(t.attributes.EndTime):null,endTimeOffset:null!==(a=t.attributes.EndUTCOffset)&&void 0!==a?a:null,geometry:t.geometry,messages:null!=t.attributes.Messages?JSON.parse(t.attributes.Messages):null,name:t.attributes.RouteName,objectId:null!==(l=t.attributes.ObjectID)&&void 0!==l?l:t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,startTime:null!=t.attributes.StartTime?new Date(t.attributes.StartTime):null,startTimeOffset:null!==(d=t.attributes.StartUTCOffset)&&void 0!==d?d:null,symbol:t.symbol,totalCosts:null!=t.attributes.TotalCosts?(0,g.aZ)(JSON.parse(t.attributes.TotalCosts)):null,totalDistance:null!==(p=t.attributes.TotalMeters)&&void 0!==p?p:null,totalDuration:null!==(m=t.attributes.TotalMinutes)&&void 0!==m?m:null,totalLateDuration:null!==(b=t.attributes.TotalLateMinutes)&&void 0!==b?b:null,totalWaitDuration:null!==(c=t.attributes.TotalWaitMinutes)&&void 0!==c?c:null,version:t.attributes.Version})}toGraphic(){const t={ObjectID:this.objectId,AnalysisSettings:null!=this.analysisSettings?JSON.stringify(this.analysisSettings.toJSON()):null,EndTime:null!=this.endTime?this.endTime.getTime():null,EndUTCOffset:this.endTimeOffset,Messages:null!=this.messages?JSON.stringify(this.messages):null,RouteName:this.name,StartTime:null!=this.startTime?this.startTime.getTime():null,StartUTCOffset:this.startTimeOffset,TotalCosts:null!=this.totalCosts?JSON.stringify((0,g.nA)(this.totalCosts)):null,TotalLateMinutes:this.totalLateDuration,TotalMeters:this.totalDistance,TotalMinutes:this.totalDuration,TotalWaitMinutes:this.totalWaitDuration,Version:this.version};return new p.A({geometry:this.geometry,attributes:t,symbol:this.symbol,popupTemplate:this.popupTemplate})}};N.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"AnalysisSettings",alias:"Analysis Settings",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"EndTime",alias:"End Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"EndUTCOffset",alias:"End Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"Messages",alias:"Analysis Messages",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:1024,editable:!0,nullable:!0,visible:!0,domain:null},{name:"StartTime",alias:"Start Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"StartUTCOffset",alias:"Start Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TotalCosts",alias:"Total Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"TotalLateMinutes",alias:"Total Late Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"TotalMeters",alias:"Total Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalMinutes",alias:"Total Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"TotalWaitMinutes",alias:"Total Wait Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Version",alias:"Version",type:"esriFieldTypeString",length:16,editable:!0,nullable:!0,visible:!0,domain:null}],N.popupInfo={title:"Route Details",fieldInfos:[{fieldName:"RouteName",label:"Route Name",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"TotalMinutes",label:"Total Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalMeters",label:"Total Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalLateMinutes",label:"Total Late Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalWaitMinutes",label:"Total Wait Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TotalCosts",label:"Total Costs",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"StartTime",label:"Start Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"StartUTCOffset",label:"Start Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"EndTime",label:"End Time",isEditable:!1,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"EndUTCOffset",label:"End Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Messages",label:"Analysis Messages",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"AnalysisSettings",isEditable:!1,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"Version",label:"Version",isEditable:!1,tooltip:"",visible:!0,stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,d._)([(0,v.MZ)()],N.prototype,"analysisSettings",void 0),(0,d._)([(0,v.MZ)()],N.prototype,"endTime",void 0),(0,d._)([(0,T.w)("endTime",["attributes.EndTimeUTC"])],N.prototype,"readEndTime",null),(0,d._)([(0,v.MZ)()],N.prototype,"endTimeOffset",void 0),(0,d._)([(0,T.w)("endTimeOffset",["attributes.EndTime","attributes.EndTimeUTC"])],N.prototype,"readEndTimeOffset",null),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.FirstStopID"}}})],N.prototype,"firstStopId",void 0),(0,d._)([(0,v.MZ)({type:f.A})],N.prototype,"geometry",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.LastStopID"}}})],N.prototype,"lastStopId",void 0),(0,d._)([(0,v.MZ)()],N.prototype,"messages",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.Name"}}})],N.prototype,"name",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.ObjectID"}}})],N.prototype,"objectId",void 0),(0,d._)([(0,v.MZ)({type:m.A})],N.prototype,"popupTemplate",void 0),(0,d._)([(0,v.MZ)()],N.prototype,"startTime",void 0),(0,d._)([(0,T.w)("startTime",["attributes.StartTimeUTC"])],N.prototype,"readStartTime",null),(0,d._)([(0,v.MZ)()],N.prototype,"startTimeOffset",void 0),(0,d._)([(0,T.w)("startTimeOffset",["attributes.StartTime","attributes.StartTimeUTC"])],N.prototype,"readStartTimeOffset",null),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.StopCount"}}})],N.prototype,"stopCount",void 0),(0,d._)([(0,v.MZ)({types:b.Es})],N.prototype,"symbol",void 0),(0,d._)([(0,v.MZ)()],N.prototype,"totalCosts",void 0),(0,d._)([(0,T.w)("totalCosts",["attributes"])],N.prototype,"readTotalCosts",null),(0,d._)([(0,v.MZ)()],N.prototype,"totalDistance",void 0),(0,d._)([(0,v.MZ)()],N.prototype,"totalDuration",void 0),(0,d._)([(0,v.MZ)()],N.prototype,"totalLateDuration",void 0),(0,d._)([(0,v.MZ)()],N.prototype,"totalViolations",void 0),(0,d._)([(0,T.w)("totalViolations",["attributes"])],N.prototype,"readTotalViolations",null),(0,d._)([(0,v.MZ)()],N.prototype,"totalWait",void 0),(0,d._)([(0,T.w)("totalWait",["attributes"])],N.prototype,"readTotalWait",null),(0,d._)([(0,v.MZ)()],N.prototype,"totalWaitDuration",void 0),(0,d._)([(0,v.MZ)({readOnly:!0,json:{read:!1}})],N.prototype,"type",void 0),(0,d._)([(0,v.MZ)()],N.prototype,"version",void 0),N=u=(0,d._)([(0,h.$)("esri.rest.support.RouteInfo")],N);const O=N},47171:(t,a,l)=>{l.d(a,{A:()=>h});var u=l(80671),d=l(83375),p=l(57453),m=(l(50886),l(89412),l(76761),l(59299)),b=l(68682),c=l(51715),y=l(62599),v=l(59160);let T=class extends d.oY{constructor(t){super(t),this.accumulateAttributes=null,this.directionsLanguage=null,this.findBestSequence=null,this.preserveFirstStop=null,this.preserveLastStop=null,this.startTimeIsUTC=null,this.timeWindowsAreUTC=null,this.travelMode=null}readAccumulateAttributes(t){return null==t?null:t.map((t=>y.et.fromJSON(t)))}writeAccumulateAttributes(t,a,l){(null===t||void 0===t?void 0:t.length)&&(a[l]=t.map((t=>y.et.toJSON(t))))}};(0,u._)([(0,p.MZ)({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],T.prototype,"accumulateAttributes",void 0),(0,u._)([(0,m.w)("accumulateAttributes")],T.prototype,"readAccumulateAttributes",null),(0,u._)([(0,c.K)("accumulateAttributes")],T.prototype,"writeAccumulateAttributes",null),(0,u._)([(0,p.MZ)({type:String,json:{write:!0}})],T.prototype,"directionsLanguage",void 0),(0,u._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],T.prototype,"findBestSequence",void 0),(0,u._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],T.prototype,"preserveFirstStop",void 0),(0,u._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],T.prototype,"preserveLastStop",void 0),(0,u._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],T.prototype,"startTimeIsUTC",void 0),(0,u._)([(0,p.MZ)({type:Boolean,json:{write:!0}})],T.prototype,"timeWindowsAreUTC",void 0),(0,u._)([(0,p.MZ)({type:v.A,json:{write:!0}})],T.prototype,"travelMode",void 0),T=(0,u._)([(0,b.$)("esri.layers.support.RouteSettings")],T);const h=T},46779:(t,a,l)=>{l.d(a,{A:()=>A});var u,d=l(80671),p=l(13812),m=l(21365),b=l(21343),c=l(88706),y=l(83375),v=l(57453),T=(l(50886),l(89412),l(76761),l(59299)),h=l(68682),f=l(51715),g=l(57264),S=l(3764),N=l(62599);let O=u=class extends((0,c.O)(y.oY)){constructor(t){super(t),this.arriveCurbApproach=null,this.arriveTime=null,this.arriveTimeOffset=null,this.bearing=null,this.bearingTol=null,this.cumulativeCosts=null,this.cumulativeDistance=null,this.cumulativeDuration=null,this.curbApproach=null,this.departCurbApproach=null,this.departTime=null,this.departTimeOffset=null,this.distanceToNetworkInMeters=null,this.geometry=null,this.lateDuration=null,this.locationType=null,this.name=null,this.navLatency=null,this.objectId=null,this.popupTemplate=null,this.posAlong=null,this.routeName=null,this.serviceCosts=null,this.serviceDistance=null,this.serviceDuration=null,this.sequence=null,this.sideOfEdge=null,this.snapX=null,this.snapY=null,this.snapZ=null,this.sourceId=null,this.sourceOid=null,this.status=null,this.symbol=null,this.timeWindowEnd=null,this.timeWindowEndOffset=null,this.timeWindowStart=null,this.timeWindowStartOffset=null,this.type="stop",this.violations=null,this.waitDuration=null,this.wait=null}readArriveTimeOffset(t,a){return(0,S.Zn)(a.attributes.ArriveTime,a.attributes.ArriveTimeUTC)}readCumulativeCosts(t,a){return(0,S.lh)(a.attributes,"Cumul_")}readDepartTimeOffset(t,a){return(0,S.Zn)(a.attributes.DepartTime,a.attributes.DepartTimeUTC)}readServiceCosts(t,a){return(0,S.lh)(a.attributes,"Attr_")}writeServiceCosts(t,a){(0,S.p3)(t,a,"Attr_")}writeTimeWindowEnd(t,a){null!=t&&(a.attributes||(a.attributes={}),a.attributes.TimeWindowEnd=t.getTime())}writeTimeWindowStart(t,a){null!=t&&(a.attributes||(a.attributes={}),a.attributes.TimeWindowStart=t.getTime())}readViolations(t,a){return(0,S.lh)(a.attributes,"Violation_")}readWait(t,a){return(0,S.lh)(a.attributes,"Wait_")}static fromGraphic(t){var a,l,d,p,m,b,c,y,v,T,h;return new u({arriveCurbApproach:null!=t.attributes.ArrivalCurbApproach?N.JJ.fromJSON(t.attributes.ArrivalCurbApproach):null,arriveTime:null!=t.attributes.ArrivalTime?new Date(t.attributes.ArrivalTime):null,arriveTimeOffset:t.attributes.ArrivalUTCOffset,cumulativeCosts:null!=t.attributes.CumulativeCosts?(0,S.aZ)(JSON.parse(t.attributes.CumulativeCosts)):null,cumulativeDistance:null!==(a=t.attributes.CumulativeMeters)&&void 0!==a?a:null,cumulativeDuration:null!==(l=t.attributes.CumulativeMinutes)&&void 0!==l?l:null,curbApproach:null!=t.attributes.CurbApproach?N.JJ.fromJSON(t.attributes.CurbApproach):null,departCurbApproach:null!=t.attributes.DepartureCurbApproach?N.JJ.fromJSON(t.attributes.DepartureCurbApproach):null,departTime:null!=t.attributes.DepartureTime?new Date(t.attributes.DepartureTime):null,departTimeOffset:null!==(d=t.attributes.DepartureUTCOffset)&&void 0!==d?d:null,geometry:t.geometry,lateDuration:null!==(p=t.attributes.LateMinutes)&&void 0!==p?p:null,locationType:null!=t.attributes.LocationType?N.EM.fromJSON(t.attributes.LocationType):null,name:t.attributes.Name,objectId:null!==(m=t.attributes.ObjectID)&&void 0!==m?m:t.attributes.__OBJECTID,popupTemplate:t.popupTemplate,routeName:t.attributes.RouteName,sequence:null!==(b=t.attributes.Sequence)&&void 0!==b?b:null,serviceCosts:null!=t.attributes.ServiceCosts?(0,S.aZ)(JSON.parse(t.attributes.ServiceCosts)):null,serviceDistance:null!==(c=t.attributes.ServiceMeters)&&void 0!==c?c:null,serviceDuration:null!==(y=t.attributes.ServiceMinutes)&&void 0!==y?y:null,status:null!=t.attributes.Status?N.$r.fromJSON(t.attributes.Status):null,symbol:t.symbol,timeWindowEnd:null!=t.attributes.TimeWindowEnd?new Date(t.attributes.TimeWindowEnd):null,timeWindowEndOffset:null!==(v=t.attributes.TimeWindowEndUTCOffset)&&void 0!==v?v:null,timeWindowStart:null!=t.attributes.TimeWindowStart?new Date(t.attributes.TimeWindowStart):null,timeWindowStartOffset:null!==(T=t.attributes.TimeWindowStartUTCOffset)&&void 0!==T?T:null,waitDuration:null!==(h=t.attributes.WaitMinutes)&&void 0!==h?h:null})}toGraphic(){var t,a;const l={ObjectID:this.objectId,ArrivalCurbApproach:null!=this.arriveCurbApproach?N.JJ.toJSON(this.arriveCurbApproach):null,ArrivalTime:null!=this.arriveTime?this.arriveTime.getTime():null,ArrivalUTCOffset:this.arriveTimeOffset,CumulativeCosts:null!=this.cumulativeCosts?JSON.stringify((0,S.nA)(this.cumulativeCosts)):null,CumulativeMeters:this.cumulativeDistance,CumulativeMinutes:this.cumulativeDuration,CurbApproach:null!=this.curbApproach?N.JJ.toJSON(this.curbApproach):null,DepartureCurbApproach:null!=this.departCurbApproach?N.JJ.toJSON(this.departCurbApproach):null,DepartureTime:null!=this.departTime?this.departTime.getTime():null,DepartureUTCOffset:this.departTimeOffset,LateMinutes:this.lateDuration,LocationType:null!=this.locationType?N.EM.toJSON(this.locationType):null,Name:this.name,RouteName:this.routeName,Sequence:this.sequence,ServiceCosts:null!=this.serviceCosts?JSON.stringify((0,S.nA)(this.serviceCosts)):null,ServiceMeters:this.serviceDistance,ServiceMinutes:this.serviceDuration,Status:null!=this.status?N.$r.toJSON(this.status):null,TimeWindowEnd:null!=this.timeWindowEnd?this.timeWindowEnd.getTime():null,TimeWindowEndUTCOffset:null!==(t=this.timeWindowEndOffset)&&void 0!==t?t:this.arriveTimeOffset,TimeWindowStart:null!=this.timeWindowStart?this.timeWindowStart.getTime():null,TimeWindowStartUTCOffset:null!==(a=this.timeWindowStartOffset)&&void 0!==a?a:this.arriveTimeOffset,WaitMinutes:this.waitDuration};return new p.A({geometry:this.geometry,attributes:l,symbol:this.symbol,popupTemplate:this.popupTemplate})}};O.fields=[{name:"ObjectID",alias:"ObjectID",type:"esriFieldTypeOID",editable:!1,nullable:!1,domain:null},{name:"ArrivalCurbApproach",alias:"Arrival Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"ArrivalTime",alias:"Arrival Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"ArrivalUTCOffset",alias:"Arrival Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"CumulativeCosts",alias:"Cumulative Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"CumulativeMeters",alias:"Cumulative Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CumulativeMinutes",alias:"Cumulative Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!0},{name:"CurbApproach",alias:"Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!1,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureCurbApproach",alias:"Departure Curb Approach",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNACurbApproachType",codedValues:[{name:"Either side",code:0},{name:"From the right",code:1},{name:"From the left",code:2},{name:"Depart in the same direction",code:3}]}},{name:"DepartureTime",alias:"Departure Time",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!0},{name:"DepartureUTCOffset",alias:"Departure Time: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"LateMinutes",alias:"Minutes Late",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"LocationType",alias:"Location Type",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNALocationType",codedValues:[{name:"Stop",code:0},{name:"Waypoint",code:1}]}},{name:"Name",alias:"Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"RouteName",alias:"Route Name",type:"esriFieldTypeString",length:255,editable:!0,nullable:!0,visible:!0},{name:"Sequence",alias:"Sequence",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"ServiceCosts",alias:"Service Costs",type:"esriFieldTypeString",length:1048576,editable:!0,nullable:!0,visible:!1,domain:null},{name:"ServiceMeters",alias:"Service Meters",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"ServiceMinutes",alias:"Service Minutes",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1},{name:"Status",alias:"Status",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0,domain:{type:"codedValue",name:"esriNAObjectStatus",codedValues:[{name:"OK",code:0},{name:"Not Located on Network",code:1},{name:"Network Unbuilt",code:2},{name:"Prohibited Street",code:3},{name:"Invalid Field Values",code:4},{name:"Cannot Reach",code:5},{name:"Time Window Violation",code:6}]}},{name:"TimeWindowEnd",alias:"Time Window End",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowEndUTCOffset",alias:"Time Window End: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"TimeWindowStart",alias:"Time Window Start",type:"esriFieldTypeDate",length:36,editable:!0,nullable:!0,visible:!1},{name:"TimeWindowStartUTCOffset",alias:"Time Window Start: Offset from UTC in Minutes",type:"esriFieldTypeInteger",editable:!0,nullable:!0,visible:!0},{name:"WaitMinutes",alias:"Minutes Early",type:"esriFieldTypeDouble",editable:!0,nullable:!0,visible:!1}],O.popupInfo={title:"{Name}",fieldInfos:[{fieldName:"Name",label:"Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"RouteName",label:"Route Name",isEditable:!0,tooltip:"",visible:!0,stringFieldOption:"textbox"},{fieldName:"Sequence",label:"Sequence",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalTime",label:"Arrival Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"ArrivalUTCOffset",label:"Arrival Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureTime",label:"Departure Time",isEditable:!0,tooltip:"",visible:!0,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"DepartureUTCOffset",label:"Departure Time: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CurbApproach",label:"Curb Approach",isEditable:!0,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ArrivalCurbApproach",label:"Arrival Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"DepartureCurbApproach",label:"Departure Curb Approach",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"Status",label:"Status",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"LocationType",label:"Location Type",isEditable:!1,tooltip:"",visible:!0,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowStart",label:"Time Window Start",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowStartUTCOffset",label:"Time Window Start: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"TimeWindowEnd",label:"Time Window End",isEditable:!0,tooltip:"",visible:!1,format:{dateFormat:"shortDateShortTime24"},stringFieldOption:"textbox"},{fieldName:"TimeWindowEndUTCOffset",label:"Time Window End: Offset from UTC in Minutes",isEditable:!1,tooltip:"",visible:!1,format:{places:0,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMinutes",label:"Service Minutes",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceMeters",label:"Service Meters",isEditable:!0,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"ServiceCosts",label:"Service Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"CumulativeMinutes",label:"Cumulative Minutes",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeMeters",label:"Cumulative Meters",isEditable:!1,tooltip:"",visible:!0,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"CumulativeCosts",label:"Cumulative Costs",isEditable:!0,tooltip:"",visible:!1,stringFieldOption:"textbox"},{fieldName:"LateMinutes",label:"Minutes Late",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"},{fieldName:"WaitMinutes",label:"Minutes Early",isEditable:!1,tooltip:"",visible:!1,format:{places:2,digitSeparator:!0},stringFieldOption:"textbox"}],description:null,showAttachments:!1,mediaInfos:[]},(0,d._)([(0,v.MZ)({type:N.JJ.apiValues,json:{read:{source:"attributes.ArrivalCurbApproach",reader:N.JJ.read}}})],O.prototype,"arriveCurbApproach",void 0),(0,d._)([(0,v.MZ)({type:Date,json:{read:{source:"attributes.ArriveTimeUTC"}}})],O.prototype,"arriveTime",void 0),(0,d._)([(0,v.MZ)()],O.prototype,"arriveTimeOffset",void 0),(0,d._)([(0,T.w)("arriveTimeOffset",["attributes.ArriveTime","attributes.ArriveTimeUTC"])],O.prototype,"readArriveTimeOffset",null),(0,d._)([(0,v.MZ)({json:{name:"attributes.Bearing",read:!1,write:!0}})],O.prototype,"bearing",void 0),(0,d._)([(0,v.MZ)({json:{name:"attributes.BearingTol",read:!1,write:!0}})],O.prototype,"bearingTol",void 0),(0,d._)([(0,v.MZ)()],O.prototype,"cumulativeCosts",void 0),(0,d._)([(0,T.w)("cumulativeCosts",["attributes"])],O.prototype,"readCumulativeCosts",null),(0,d._)([(0,v.MZ)()],O.prototype,"cumulativeDistance",void 0),(0,d._)([(0,v.MZ)()],O.prototype,"cumulativeDuration",void 0),(0,d._)([(0,v.MZ)({type:N.JJ.apiValues,json:{name:"attributes.CurbApproach",read:{reader:N.JJ.read},write:{writer:N.JJ.write}}})],O.prototype,"curbApproach",void 0),(0,d._)([(0,v.MZ)({type:N.JJ.apiValues,json:{read:{source:"attributes.DepartCurbApproach",reader:N.JJ.read}}})],O.prototype,"departCurbApproach",void 0),(0,d._)([(0,v.MZ)({type:Date,json:{read:{source:"attributes.DepartTimeUTC"}}})],O.prototype,"departTime",void 0),(0,d._)([(0,v.MZ)()],O.prototype,"departTimeOffset",void 0),(0,d._)([(0,T.w)("departTimeOffset",["attributes.DepartTime","attributes.DepartTimeUTC"])],O.prototype,"readDepartTimeOffset",null),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.DistanceToNetworkInMeters"}}})],O.prototype,"distanceToNetworkInMeters",void 0),(0,d._)([(0,v.MZ)({type:g.A,json:{write:!0}})],O.prototype,"geometry",void 0),(0,d._)([(0,v.MZ)()],O.prototype,"lateDuration",void 0),(0,d._)([(0,v.MZ)({type:N.EM.apiValues,json:{name:"attributes.LocationType",read:{reader:N.EM.read},write:{writer:N.EM.write}}})],O.prototype,"locationType",void 0),(0,d._)([(0,v.MZ)({json:{name:"attributes.Name"}})],O.prototype,"name",void 0),(0,d._)([(0,v.MZ)({json:{name:"attributes.NavLatency",read:!1,write:!0}})],O.prototype,"navLatency",void 0),(0,d._)([(0,v.MZ)({json:{name:"attributes.ObjectID"}})],O.prototype,"objectId",void 0),(0,d._)([(0,v.MZ)({type:m.A})],O.prototype,"popupTemplate",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.PosAlong"}}})],O.prototype,"posAlong",void 0),(0,d._)([(0,v.MZ)({json:{name:"attributes.RouteName"}})],O.prototype,"routeName",void 0),(0,d._)([(0,v.MZ)()],O.prototype,"serviceCosts",void 0),(0,d._)([(0,T.w)("serviceCosts",["attributes"])],O.prototype,"readServiceCosts",null),(0,d._)([(0,f.K)("serviceCosts")],O.prototype,"writeServiceCosts",null),(0,d._)([(0,v.MZ)()],O.prototype,"serviceDistance",void 0),(0,d._)([(0,v.MZ)()],O.prototype,"serviceDuration",void 0),(0,d._)([(0,v.MZ)({json:{name:"attributes.Sequence"}})],O.prototype,"sequence",void 0),(0,d._)([(0,v.MZ)({type:N.mt.apiValues,json:{read:{source:"attributes.SideOfEdge",reader:N.mt.read}}})],O.prototype,"sideOfEdge",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.SnapX"}}})],O.prototype,"snapX",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.SnapY"}}})],O.prototype,"snapY",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.SnapZ"}}})],O.prototype,"snapZ",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.SourceID"}}})],O.prototype,"sourceId",void 0),(0,d._)([(0,v.MZ)({json:{read:{source:"attributes.SourceOID"}}})],O.prototype,"sourceOid",void 0),(0,d._)([(0,v.MZ)({type:N.$r.apiValues,json:{read:{source:"attributes.Status",reader:N.$r.read}}})],O.prototype,"status",void 0),(0,d._)([(0,v.MZ)({types:b.Es})],O.prototype,"symbol",void 0),(0,d._)([(0,v.MZ)({type:Date,json:{name:"attributes.TimeWindowEnd"}})],O.prototype,"timeWindowEnd",void 0),(0,d._)([(0,f.K)("timeWindowEnd")],O.prototype,"writeTimeWindowEnd",null),(0,d._)([(0,v.MZ)()],O.prototype,"timeWindowEndOffset",void 0),(0,d._)([(0,v.MZ)({type:Date,json:{name:"attributes.TimeWindowStart"}})],O.prototype,"timeWindowStart",void 0),(0,d._)([(0,f.K)("timeWindowStart")],O.prototype,"writeTimeWindowStart",null),(0,d._)([(0,v.MZ)()],O.prototype,"timeWindowStartOffset",void 0),(0,d._)([(0,v.MZ)({readOnly:!0,json:{read:!1}})],O.prototype,"type",void 0),(0,d._)([(0,v.MZ)()],O.prototype,"violations",void 0),(0,d._)([(0,T.w)("violations",["attributes"])],O.prototype,"readViolations",null),(0,d._)([(0,v.MZ)()],O.prototype,"waitDuration",void 0),(0,d._)([(0,v.MZ)()],O.prototype,"wait",void 0),(0,d._)([(0,T.w)("wait",["attributes"])],O.prototype,"readWait",null),O=u=(0,d._)([(0,h.$)("esri.rest.support.Stop")],O);const A=O},59160:(t,a,l)=>{l.d(a,{A:()=>f});var u=l(80671),d=l(88706),p=l(83375),m=l(57453),b=(l(50886),l(89412),l(76761),l(99825)),c=l(59299),y=l(68682),v=l(51715),T=l(62599);let h=class extends((0,d.O)(p.oY)){constructor(t){super(t),this.attributeParameterValues=null,this.description=null,this.distanceAttributeName=null,this.id=null,this.impedanceAttributeName=null,this.name=null,this.restrictionAttributeNames=null,this.simplificationTolerance=null,this.simplificationToleranceUnits=null,this.timeAttributeName=null,this.type=null,this.useHierarchy=null,this.uturnAtJunctions=null}readId(t,a){var l,u;return null!==(l=null!==(u=a.id)&&void 0!==u?u:a.itemId)&&void 0!==l?l:null}readRestrictionAttributes(t,a){const{restrictionAttributeNames:l}=a;return null==l?null:l.map((t=>T.OC.fromJSON(t)))}writeRestrictionAttributes(t,a,l){null!=t&&(a[l]=t.map((t=>T.OC.toJSON(t))))}};(0,u._)([(0,m.MZ)({type:[Object],json:{write:!0}})],h.prototype,"attributeParameterValues",void 0),(0,u._)([(0,m.MZ)({type:String,json:{write:!0}})],h.prototype,"description",void 0),(0,u._)([(0,b.e)(T.dd,{ignoreUnknown:!1})],h.prototype,"distanceAttributeName",void 0),(0,u._)([(0,m.MZ)({type:String,json:{write:!0}})],h.prototype,"id",void 0),(0,u._)([(0,c.w)("id",["id","itemId"])],h.prototype,"readId",null),(0,u._)([(0,b.e)(T.et,{ignoreUnknown:!1})],h.prototype,"impedanceAttributeName",void 0),(0,u._)([(0,m.MZ)({type:String,json:{write:!0}})],h.prototype,"name",void 0),(0,u._)([(0,m.MZ)({type:[String],json:{write:!0}})],h.prototype,"restrictionAttributeNames",void 0),(0,u._)([(0,c.w)("restrictionAttributeNames")],h.prototype,"readRestrictionAttributes",null),(0,u._)([(0,v.K)("restrictionAttributeNames")],h.prototype,"writeRestrictionAttributes",null),(0,u._)([(0,m.MZ)({type:Number,json:{write:{allowNull:!0}}})],h.prototype,"simplificationTolerance",void 0),(0,u._)([(0,b.e)(T.hY)],h.prototype,"simplificationToleranceUnits",void 0),(0,u._)([(0,b.e)(T.Mm,{ignoreUnknown:!1})],h.prototype,"timeAttributeName",void 0),(0,u._)([(0,b.e)(T.ow)],h.prototype,"type",void 0),(0,u._)([(0,m.MZ)({type:Boolean,json:{write:!0}})],h.prototype,"useHierarchy",void 0),(0,u._)([(0,b.e)(T.hE)],h.prototype,"uturnAtJunctions",void 0),h=(0,u._)([(0,y.$)("esri.rest.support.TravelMode")],h);const f=h},62599:(t,a,l)=>{l.d(a,{$n:()=>M,$r:()=>f,EM:()=>h,Ec:()=>x,JJ:()=>T,Mm:()=>C,OC:()=>_,Sr:()=>c,Vj:()=>F,WU:()=>E,Z7:()=>p,_6:()=>O,aJ:()=>b,dd:()=>D,dn:()=>m,et:()=>w,fe:()=>N,gD:()=>A,hE:()=>y,hY:()=>d,iM:()=>S,mt:()=>g,ow:()=>v,vS:()=>I});var u=l(40530);const d=(0,u.O)()({esriCentimeters:"centimeters",esriDecimalDegrees:"decimal-degrees",esriDecimeters:"decimeters",esriFeet:"feet",esriInches:"inches",esriKilometers:"kilometers",esriMeters:"meters",esriMiles:"miles",esriMillimeters:"millimeters",esriNauticalMiles:"nautical-miles",esriPoints:"points",esriUnknownUnits:"unknown",esriYards:"yards"}),p=(0,u.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards"}),m=((0,u.O)()({esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds"}),(0,u.O)()({esriNAUCentimeters:"centimeters",esriNAUDecimalDegrees:"decimal-degrees",esriNAUDecimeters:"decimeters",esriNAUFeet:"feet",esriNAUInches:"inches",esriNAUKilometers:"kilometers",esriNAUMeters:"meters",esriNAUMiles:"miles",esriNAUMillimeters:"millimeters",esriNAUNauticalMiles:"nautical-miles",esriNAUPoints:"points",esriNAUYards:"yards",esriNAUDays:"days",esriNAUHours:"hours",esriNAUMinutes:"minutes",esriNAUSeconds:"seconds",esriNAUKilometersPerHour:"kilometers-per-hour",esriNAUMilesPerHour:"miles-per-hour",esriNAUUnknown:"unknown"})),b=(0,u.O)()({esriDOTComplete:"complete",esriDOTCompleteNoEvents:"complete-no-events",esriDOTFeatureSets:"featuresets",esriDOTInstructionsOnly:"instructions-only",esriDOTStandard:"standard",esriDOTSummaryOnly:"summary-only"}),c=(0,u.O)()({esriNAOutputLineNone:"none",esriNAOutputLineStraight:"straight",esriNAOutputLineTrueShape:"true-shape",esriNAOutputLineTrueShapeWithMeasure:"true-shape-with-measure"}),y=((0,u.O)()({esriNAOutputPolygonNone:"none",esriNAOutputPolygonSimplified:"simplified",esriNAOutputPolygonDetailed:"detailed"}),(0,u.O)()({esriNFSBAllowBacktrack:"allow-backtrack",esriNFSBAtDeadEndsOnly:"at-dead-ends-only",esriNFSBNoBacktrack:"no-backtrack",esriNFSBAtDeadEndsAndIntersections:"at-dead-ends-and-intersections"})),v=((0,u.O)()({esriNATravelDirectionFromFacility:"from-facility",esriNATravelDirectionToFacility:"to-facility"}),(0,u.O)()({esriNATimeOfDayNotUsed:"not-used",esriNATimeOfDayUseAsStartTime:"start",esriNATimeOfDayUseAsEndTime:"end"}),(0,u.O)()({AUTOMOBILE:"automobile",TRUCK:"truck",WALK:"walk",OTHER:"other"})),T=(0,u.O)()({0:"either-side-of-vehicle",1:"right-side-of-vehicle",2:"left-side-of-vehicle",3:"no-u-turn"},{useNumericKeys:!0}),h=(0,u.O)()({0:"stop",1:"waypoint",2:"break"},{useNumericKeys:!0}),f=(0,u.O)()({0:"ok",1:"not-located",2:"network-element-not-located",3:"element-not-traversable",4:"invalid-field-values",5:"not-reached",6:"time-window-violation",7:"not-located-on-closest"},{useNumericKeys:!0}),g=(0,u.O)()({1:"right",2:"left"},{useNumericKeys:!0}),S=(0,u.O)()({0:"restriction",1:"scaled-cost",2:"added-cost"},{useNumericKeys:!0}),N=(0,u.O)()({0:"permit",1:"restrict"},{useNumericKeys:!0}),O=(0,u.O)()({1:"header",50:"arrive",51:"depart",52:"straight",100:"on-ferry",101:"off-ferry",102:"central-fork",103:"roundabout",104:"u-turn",150:"door",151:"stairs",152:"elevator",153:"escalator",154:"pedestrian-ramp",200:"left-fork",201:"left-ramp",202:"clockwise-roundabout",203:"left-handed-u-turn",204:"bear-left",205:"left-turn",206:"sharp-left",207:"left-turn-and-immediate-left-turn",208:"left-turn-and-immediate-right-turn",300:"right-fork",301:"right-ramp",302:"counter-clockwise-roundabout",303:"right-handed-u-turn",304:"bear-right",305:"right-turn",306:"sharp-right",307:"right-turn-and-immediate-left-turn",308:"right-turn-and-immediate-right-turn",400:"up-elevator",401:"up-escalator",402:"up-stairs",500:"down-elevator",501:"down-escalator",502:"down-stairs",1e3:"general-event",1001:"landmark",1002:"time-zone-change",1003:"traffic-event",1004:"scaled-cost-barrier-event",1005:"boundary-crossing",1006:"restriction-violation",1007:"lane"},{useNumericKeys:!0}),A=(0,u.O)()({0:"unknown",1:"segment",2:"maneuver-segment",3:"restriction-violation",4:"scaled-cost-barrier",5:"heavy-traffic",6:"slow-traffic",7:"moderate-traffic"},{useNumericKeys:!0}),M=(0,u.O)()({"NA Campus":"campus","NA Desktop":"desktop","NA Navigation":"navigation"}),D=(0,u.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters"},{ignoreUnknown:!1}),C=(0,u.O)()({Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),w=(0,u.O)()({Kilometers:"kilometers",Miles:"miles",Meters:"meters",Minutes:"minutes",TimeAt1KPH:"time-at-1-kph",TravelTime:"travel-time",TruckMinutes:"truck-minutes",TruckTravelTime:"truck-travel-time",WalkTime:"walk-time"},{ignoreUnknown:!1}),_=(0,u.O)()({"Any Hazmat Prohibited":"any-hazmat-prohibited","Avoid Carpool Roads":"avoid-carpool-roads","Avoid Express Lanes":"avoid-express-lanes","Avoid Ferries":"avoid-ferries","Avoid Gates":"avoid-gates","Avoid Limited Access Roads":"avoid-limited-access-roads","Avoid Private Roads":"avoid-private-roads","Avoid Roads Unsuitable for Pedestrians":"avoid-roads-unsuitable-for-pedestrians","Avoid Stairways":"avoid-stairways","Avoid Toll Roads":"avoid-toll-roads","Avoid Toll Roads for Trucks":"avoid-toll-roads-for-trucks","Avoid Truck Restricted Roads":"avoid-truck-restricted-roads","Avoid Unpaved Roads":"avoid-unpaved-roads","Axle Count Restriction":"axle-count-restriction","Driving a Bus":"driving-a-bus","Driving a Taxi":"driving-a-taxi","Driving a Truck":"driving-a-truck","Driving an Automobile":"driving-an-automobile","Driving an Emergency Vehicle":"driving-an-emergency-vehicle","Height Restriction":"height-restriction","Kingpin to Rear Axle Length Restriction":"kingpin-to-rear-axle-length-restriction","Length Restriction":"length-restriction","Preferred for Pedestrians":"preferred-for-pedestrians","Riding a Motorcycle":"riding-a-motorcycle","Roads Under Construction Prohibited":"roads-under-construction-prohibited","Semi or Tractor with One or More Trailers Prohibited":"semi-or-tractor-with-one-or-more-trailers-prohibited","Single Axle Vehicles Prohibited":"single-axle-vehicles-prohibited","Tandem Axle Vehicles Prohibited":"tandem-axle-vehicles-prohibited","Through Traffic Prohibited":"through-traffic-prohibited","Truck with Trailers Restriction":"truck-with-trailers-restriction","Use Preferred Hazmat Routes":"use-preferred-hazmat-routes","Use Preferred Truck Routes":"use-preferred-truck-routes",Walking:"walking","Weight Restriction":"weight-restriction"},{ignoreUnknown:!1}),I=(0,u.O)()({esriSpatialRelIntersects:"intersects",esriSpatialRelContains:"contains",esriSpatialRelCrosses:"crosses",esriSpatialRelEnvelopeIntersects:"envelope-intersects",esriSpatialRelIndexIntersects:"index-intersects",esriSpatialRelOverlaps:"overlaps",esriSpatialRelTouches:"touches",esriSpatialRelWithin:"within",esriSpatialRelRelation:"relation"}),F=(0,u.O)()({esriGeometryPoint:"point",esriGeometryPolyline:"polyline",esriGeometryPolygon:"polygon",esriGeometryEnvelope:"envelope",esriGeometryMultipoint:"multipoint"}),E=(0,u.O)()({esriNAUTCost:"cost",esriNAUTDescriptor:"descriptor",esriNAUTRestriction:"restriction",esriNAUTHierarchy:"hierarchy"}),x=(0,u.O)()({esriDSTAltName:"alt-name",esriDSTArrive:"arrive",esriDSTBranch:"branch",esriDSTCrossStreet:"cross-street",esriDSTCumulativeLength:"cumulative-length",esriDSTDepart:"depart",esriDSTEstimatedArrivalTime:"estimated-arrival-time",esriDSTExit:"exit",esriDSTGeneral:"general",esriDSTLength:"length",esriDSTServiceTime:"service-time",esriDSTStreetName:"street-name",esriDSTSummary:"summary",esriDSTTime:"time",esriDSTTimeWindow:"time-window",esriDSTToward:"toward",esriDSTViolationTime:"violation-time",esriDSTWaitTime:"wait-time"})}}]);
//# sourceMappingURL=727.ce04d81f.chunk.js.map