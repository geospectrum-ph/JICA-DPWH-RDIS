{"version":3,"file":"static/js/231.b915354f.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/core/libs/gl-matrix-2/factories/vec4f32.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushClip.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushOverlay.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLBackground.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLCircle.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLFill.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLLine.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushVTLSymbol.js","../node_modules/@arcgis/core/views/2d/engine/brushes.js","../node_modules/@arcgis/core/views/2d/engine/vectorTiles/decluttering/config.js","../node_modules/@arcgis/core/views/2d/engine/webgl/DefaultVertexAttributeLayouts.js","../node_modules/@arcgis/core/views/2d/engine/webgl/AFeatureTile.js","../node_modules/@arcgis/core/views/2d/engine/webgl/FeatureDisplayList.js","../node_modules/@arcgis/core/views/2d/engine/webgl/ReshufflePlan.js","../node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/Buffer.js","../node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/MappedMesh.js","../node_modules/@arcgis/core/views/2d/engine/webgl/util/Reader.js","../node_modules/@arcgis/core/views/2d/engine/webgl/mesh/meshDebugUtils.js","../node_modules/@arcgis/core/views/2d/engine/webgl/FeatureTile.js","../node_modules/@arcgis/core/views/2d/engine/webgl/GeometryUtils.js","../node_modules/@arcgis/core/views/2d/engine/webgl/PooledUint32Array.js","../node_modules/@arcgis/core/views/2d/engine/webgl/TiledDisplayObject.js","../node_modules/@arcgis/core/views/2d/engine/webgl/VertexStream.js","../node_modules/@arcgis/core/views/2d/engine/webgl/Mesh2D.js","../node_modules/@arcgis/core/views/2d/engine/webgl/ClippingInfo.js","../node_modules/@arcgis/core/views/2d/engine/webgl/WGLContainer.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/BrushBitmap.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrush.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushStencil.js","../node_modules/@arcgis/core/views/2d/engine/webgl/brushes/WGLBrushTileDebugInfo.js","../node_modules/@arcgis/core/views/2d/engine/webgl/cpuMapped/FreeList.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/BackgroundPrograms.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/TileInfoPrograms.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/resolver.js","../node_modules/@arcgis/core/views/2d/engine/webgl/shaders/sources/shaderRepository.js","../node_modules/@arcgis/core/views/webgl/ProgramTemplate.js","../node_modules/@arcgis/core/views/webgl/ShaderCompiler.js","../node_modules/@arcgis/core/views/webgl/VertexArrayObject.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nfunction n(){return new Float32Array(4)}function t(n){const t=new Float32Array(4);return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t}function r(n,t,r,e){const o=new Float32Array(4);return o[0]=n,o[1]=t,o[2]=r,o[3]=e,o}function e(n,t){return new Float32Array(n,t,4)}function o(){return n()}function u(){return r(1,1,1,1)}function c(){return r(1,0,0,0)}function i(){return r(0,1,0,0)}function a(){return r(0,0,1,0)}function f(){return r(0,0,0,1)}const l=o(),_=u(),s=c(),y=i(),w=a(),N=f(),T=Object.freeze(Object.defineProperty({__proto__:null,ONES:_,UNIT_W:N,UNIT_X:s,UNIT_Y:y,UNIT_Z:w,ZEROS:l,clone:t,create:n,createView:e,fromValues:r,ones:u,unitW:f,unitX:c,unitY:i,unitZ:a,zeros:o},Symbol.toStringTag,{value:\"Module\"}));export{_ as ONES,N as UNIT_W,s as UNIT_X,y as UNIT_Y,w as UNIT_Z,l as ZEROS,t as clone,n as create,e as createView,r as fromValues,u as ones,f as unitW,c as unitX,i as unitY,a as unitZ,T as v,o as zeros};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{fromValues as r}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import{createProgramDescriptor as e}from\"../Utils.js\";import t from\"./WGLBrush.js\";import{background as s}from\"../shaders/BackgroundPrograms.js\";import{StencilOperation as o,CompareFunction as i,PrimitiveType as a,DataType as n}from\"../../../../webgl/enums.js\";import{createProgram as l}from\"../../../../webgl/ProgramTemplate.js\";const m=()=>e(\"clip\",{geometry:[{location:0,name:\"a_pos\",count:2,type:n.SHORT}]});class p extends t{constructor(){super(...arguments),this._color=r(0,1,0,1)}dispose(){this._program&&this._program.dispose()}prepareState({context:r}){r.setStencilTestEnabled(!0),r.setBlendingEnabled(!1),r.setFaceCullingEnabled(!1),r.setColorMask(!1,!1,!1,!1),r.setStencilOp(o.KEEP,o.KEEP,o.REPLACE),r.setStencilWriteMask(255),r.setStencilFunction(i.ALWAYS,0,255)}draw(r,e){const{context:t,state:o,requestRender:i,allowDelayedRender:p}=r,c=m(),d=e.getVAO(t,o,c.attributes,c.bufferLayouts);null!=d.indexBuffer&&(this._program||(this._program=l(t,s)),!p||null==i||this._program.compiled?(t.useProgram(this._program),this._program.setUniform2fv(\"u_coord_range\",[1,1]),this._program.setUniform4fv(\"u_color\",this._color),this._program.setUniformMatrix3fv(\"u_dvsMat3\",o.displayMat3),t.bindVAO(d),t.drawElements(a.TRIANGLES,d.indexBuffer.size,n.UNSIGNED_INT,0),t.bindVAO()):i())}}export{p as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{textureBindingBitmap as e}from\"../definitions.js\";import{createProgramDescriptor as t}from\"../Utils.js\";import r from\"./WGLBrush.js\";import{BlendFactor as s,CompareFunction as n,PrimitiveType as o,DataType as a}from\"../../../../webgl/enums.js\";const i=()=>t(\"overlay\",{geometry:[{location:0,name:\"a_pos\",count:2,type:a.FLOAT}],tex:[{location:1,name:\"a_uv\",count:2,type:a.UNSIGNED_SHORT}]});class u extends r{constructor(){super(...arguments),this._desc={vsPath:\"overlay/overlay\",fsPath:\"overlay/overlay\",attributes:new Map([[\"a_pos\",0],[\"a_uv\",1]])}}dispose(){}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setBlendFunctionSeparate(s.ONE,s.ONE_MINUS_SRC_ALPHA,s.ONE,s.ONE_MINUS_SRC_ALPHA),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0),e.setStencilFunction(n.GREATER,255,255)}draw(t,r){const{context:s,painter:n,requestRender:a,allowDelayedRender:u}=t;if(!r.isReady)return;const{computedOpacity:c,dvsMat3:l,isWrapAround:d,perspectiveTransform:m,texture:p}=r;t.timeline.begin(this.name);const f=n.materialManager.getProgram(this._desc);if(u&&null!=a&&!f.compiled)return void a();const _=i(),v=r.getVAO(s,_.bufferLayouts,_.attributes);if(!v)return;s.bindVAO(v),s.useProgram(f),s.bindTexture(p,e),f.setUniformMatrix3fv(\"u_dvsMat3\",l),f.setUniform1i(\"u_texture\",e),f.setUniform1f(\"u_opacity\",c),f.setUniform2fv(\"u_perspective\",m);const y=d?10:4;s.drawArrays(o.TRIANGLE_STRIP,0,y),s.bindVAO(),t.timeline.end(this.name)}}export{u as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{nextPowerOfTwo as t}from\"../../../../../core/mathUtils.js\";import{create as e}from\"../../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";import{fromValues as r}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import{vtlTextureBindingUnitSprites as o,vtlHighResCutoff as i}from\"../definitions.js\";import s from\"./WGLBrush.js\";import{BufferObject as a}from\"../../../../webgl/BufferObject.js\";import{TextureSamplingMode as n,CompareFunction as c,PrimitiveType as l,Usage as f}from\"../../../../webgl/enums.js\";import{VertexArrayObject as m}from\"../../../../webgl/VertexArrayObject.js\";class u extends s{constructor(){super(...arguments),this._color=r(1,0,0,1),this._patternMatrix=e(),this._programOptions={id:!1,pattern:!1}}dispose(){this._vao&&(this._vao.dispose(),this._vao=null)}drawMany(e,r){const{context:s,painter:a,requestRender:f,allowDelayedRender:m}=e;this._loadWGLResources(e);const u=e.displayLevel,p=e.styleLayer,_=p.backgroundMaterial,d=a.vectorTilesMaterialManager,g=p.getPaintValue(\"background-color\",u),h=p.getPaintValue(\"background-opacity\",u),x=p.getPaintValue(\"background-pattern\",u),b=void 0!==x,M=1|window.devicePixelRatio,v=e.spriteMosaic;let y,w;const j=M>i?2:1,A=this._programOptions;A.pattern=b;const L=d.getMaterialProgram(s,_,A);if(!m||null==f||L.compiled){if(s.bindVAO(this._vao),s.useProgram(L),b){const t=v.getMosaicItemPosition(x,!0);if(null!=t){const{tl:e,br:r,page:i}=t;y=r[0]-e[0],w=r[1]-e[1];const a=v.getPageSize(i);null!=a&&(v.bind(s,n.LINEAR,i,o),L.setUniform4f(\"u_tlbr\",e[0],e[1],r[0],r[1]),L.setUniform2fv(\"u_mosaicSize\",a),L.setUniform1i(\"u_texture\",o))}L.setUniform1f(\"u_opacity\",h)}else{const t=g[3]*h;this._color[0]=t*g[0],this._color[1]=t*g[1],this._color[2]=t*g[2],this._color[3]=t,L.setUniform4fv(\"u_color\",this._color)}L.setUniform1f(\"u_depth\",p.z||0);for(const e of r){if(L.setUniform1f(\"u_coord_range\",e.rangeX),L.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),b){const r=Math.max(2**(Math.round(u)-e.key.level),1),o=j*e.width*r,i=o/t(y),s=o/t(w);this._patternMatrix[0]=i,this._patternMatrix[4]=s,L.setUniformMatrix3fv(\"u_pattern_matrix\",this._patternMatrix)}s.setStencilFunction(c.EQUAL,0,255),s.drawArrays(l.TRIANGLE_STRIP,0,4)}}else f()}_loadWGLResources(t){if(this._vao)return;const{context:e,styleLayer:r}=t,o=r.backgroundMaterial,i=new Int8Array([0,0,1,0,0,1,1,1]),s=a.createVertex(e,f.STATIC_DRAW,i),n=new m(e,o.getAttributeLocations(),o.getLayoutInfo(),{geometry:s});this._vao=n}}export{u as WGLBrushVTLBackground};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{TranslateAnchor as e}from\"../../vectorTiles/style/StyleDefinition.js\";import t from\"./WGLBrush.js\";import{CompareFunction as r,PrimitiveType as i,DataType as a}from\"../../../../webgl/enums.js\";class n extends t{constructor(){super(...arguments),this._programOptions={id:!1}}dispose(){}drawMany(t,n){const{context:l,displayLevel:s,requiredLevel:o,state:c,painter:u,spriteMosaic:d,styleLayerUID:f,requestRender:m,allowDelayedRender:p}=t;if(!n.some((e=>e.layerData.get(f)?.circleIndexCount??!1)))return;const y=t.styleLayer,g=y.circleMaterial,M=u.vectorTilesMaterialManager,v=1.2,E=y.getPaintValue(\"circle-translate\",s),x=y.getPaintValue(\"circle-translate-anchor\",s),I=this._programOptions,U=M.getMaterialProgram(l,g,I);if(p&&null!=m&&!U.compiled)return void m();l.useProgram(U),U.setUniformMatrix3fv(\"u_displayMat3\",x===e.VIEWPORT?c.displayMat3:c.displayViewMat3),U.setUniform2fv(\"u_circleTranslation\",E),U.setUniform1f(\"u_depth\",y.z),U.setUniform1f(\"u_antialiasingWidth\",v);let _=-1;for(const e of n){if(!e.layerData.has(f))continue;e.key.level!==_&&(_=e.key.level,g.setDataUniforms(U,s,y,_,d));const t=e.layerData.get(f);if(!t.circleIndexCount)continue;t.prepareForRendering(l);const n=t.vao;null!=n&&(l.bindVAO(n),U.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),o!==e.key.level?l.setStencilFunction(r.EQUAL,e.stencilRef,255):l.setStencilFunction(r.GREATER,255,255),l.drawElements(i.TRIANGLES,t.circleIndexCount,a.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t.circleIndexStart),e.triangleCount+=t.circleIndexCount/3)}}}export{n as WGLBrushVTLCircle};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{TranslateAnchor as t}from\"../../vectorTiles/style/StyleDefinition.js\";import{vtlTextureBindingUnitSprites as e,vtlHighResCutoff as i}from\"../definitions.js\";import n from\"./WGLBrush.js\";import{TextureSamplingMode as a,CompareFunction as l,PrimitiveType as r,DataType as o}from\"../../../../webgl/enums.js\";const s=1/65536;class f extends n{constructor(){super(...arguments),this._fillProgramOptions={id:!1,pattern:!1},this._outlineProgramOptions={id:!1}}dispose(){}drawMany(t,e){const{displayLevel:i,renderPass:n,spriteMosaic:a,styleLayerUID:l}=t;let r=!1;for(const _ of e)if(_.layerData.has(l)){const t=_.layerData.get(l);if(t.fillIndexCount>0||t.outlineIndexCount>0){r=!0;break}}if(!r)return;const o=t.styleLayer,s=o.getPaintProperty(\"fill-pattern\"),f=void 0!==s,u=f&&s.isDataDriven;let c;if(f&&!u){const t=s.getValue(i);c=a.getMosaicItemPosition(t,!0)}const d=!f&&o.getPaintValue(\"fill-antialias\",i);let p=!0,m=1;if(!f){const t=o.getPaintProperty(\"fill-color\"),e=o.getPaintProperty(\"fill-opacity\");if(!t?.isDataDriven&&!e?.isDataDriven){const t=o.getPaintValue(\"fill-color\",i);m=o.getPaintValue(\"fill-opacity\",i)*t[3],m>=1&&(p=!1)}}if(p&&\"opaque\"===n)return;const y=o.getPaintValue(\"fill-translate\",i),g=o.getPaintValue(\"fill-translate-anchor\",i);(p||\"translucent\"!==n)&&this._drawFill(t,l,o,e,y,g,f,c,u);const M=!o.hasDataDrivenOutlineColor&&o.outlineUsesFillColor&&m<1;d&&\"opaque\"!==n&&!M&&this._drawOutline(t,l,o,e,y,g)}_drawFill(n,f,u,c,d,p,m,y,g){if(m&&!g&&null==y)return;const{context:M,displayLevel:_,state:E,painter:v,pixelRatio:P,spriteMosaic:U,requestRender:I,allowDelayedRender:x}=n,D=u.fillMaterial,R=v.vectorTilesMaterialManager,S=P>i?2:1,T=this._fillProgramOptions;T.pattern=m;const h=R.getMaterialProgram(M,D,T);if(x&&null!=I&&!h.compiled)return void I();if(M.useProgram(h),null!=y){const{page:t}=y,i=U.getPageSize(t);null!=i&&(U.bind(M,a.LINEAR,t,e),h.setUniform2fv(\"u_mosaicSize\",i),h.setUniform1i(\"u_texture\",e))}h.setUniformMatrix3fv(\"u_displayMat3\",p===t.VIEWPORT?E.displayMat3:E.displayViewMat3),h.setUniform2fv(\"u_fillTranslation\",d),h.setUniform1f(\"u_depth\",u.z+s);let w=-1;for(const t of c){if(!t.layerData.has(f))continue;t.key.level!==w&&(w=t.key.level,D.setDataUniforms(h,_,u,w,U));const i=t.layerData.get(f);if(!i.fillIndexCount)continue;i.prepareForRendering(M);const n=i.fillVAO;if(null!=n){if(M.bindVAO(n),h.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),M.setStencilFunction(l.EQUAL,t.stencilRef,255),m){const e=Math.max(2**(Math.round(_)-t.key.level),1),i=t.rangeX/(S*t.width*e);h.setUniform1f(\"u_patternFactor\",i)}if(g){const t=i.patternMap;if(!t)continue;for(const[i,n]of t){const t=U.getPageSize(i);null!=t&&(U.bind(M,a.LINEAR,i,e),h.setUniform2fv(\"u_mosaicSize\",t),h.setUniform1i(\"u_texture\",e),M.drawElements(r.TRIANGLES,n[1],o.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*n[0]))}}else M.drawElements(r.TRIANGLES,i.fillIndexCount,o.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i.fillIndexStart);t.triangleCount+=i.fillIndexCount/3}}}_drawOutline(e,i,n,a,f,u){const{context:c,displayLevel:d,state:p,painter:m,pixelRatio:y,spriteMosaic:g,requestRender:M,allowDelayedRender:_}=e,E=n.outlineMaterial,v=m.vectorTilesMaterialManager,P=.75/y,U=this._outlineProgramOptions,I=v.getMaterialProgram(c,E,U);if(_&&null!=M&&!I.compiled)return void M();c.useProgram(I),I.setUniformMatrix3fv(\"u_displayMat3\",u===t.VIEWPORT?p.displayMat3:p.displayViewMat3),I.setUniform2fv(\"u_fillTranslation\",f),I.setUniform1f(\"u_depth\",n.z+s),I.setUniform1f(\"u_outline_width\",P);let x=-1;for(const t of a){if(!t.layerData.has(i))continue;t.key.level!==x&&(x=t.key.level,E.setDataUniforms(I,d,n,x,g));const e=t.layerData.get(i);if(e.prepareForRendering(c),!e.outlineIndexCount)continue;const a=e.outlineVAO;null!=a&&(c.bindVAO(a),I.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),c.setStencilFunction(l.EQUAL,t.stencilRef,255),c.drawElements(r.TRIANGLES,e.outlineIndexCount,o.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*e.outlineIndexStart),t.triangleCount+=e.outlineIndexCount/3)}}}export{f as WGLBrushVTLFill};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{TranslateAnchor as e}from\"../../vectorTiles/style/StyleDefinition.js\";import{vtlTextureBindingUnitSprites as t}from\"../definitions.js\";import i from\"./WGLBrush.js\";import{TextureSamplingMode as n,CompareFunction as a,PrimitiveType as r,DataType as o}from\"../../../../webgl/enums.js\";class s extends i{constructor(){super(...arguments),this._programOptions={id:!1,pattern:!1,sdf:!1}}dispose(){}drawMany(i,s){const{context:l,displayLevel:f,state:u,painter:c,pixelRatio:d,spriteMosaic:m,styleLayerUID:p,requestRender:g,allowDelayedRender:y}=i;if(!s.some((e=>e.layerData.get(p)?.lineIndexCount??!1)))return;const M=i.styleLayer,E=M.lineMaterial,_=c.vectorTilesMaterialManager,v=M.getPaintValue(\"line-translate\",f),U=M.getPaintValue(\"line-translate-anchor\",f),I=M.getPaintProperty(\"line-pattern\"),P=void 0!==I,x=P&&I.isDataDriven;let D,S;if(P&&!x){const e=I.getValue(f);D=m.getMosaicItemPosition(e)}let L=!1;if(!P){const e=M.getPaintProperty(\"line-dasharray\");if(S=void 0!==e,L=S&&e.isDataDriven,S&&!L){const t=e.getValue(f),i=M.getDashKey(t,M.getLayoutValue(\"line-cap\",f));D=m.getMosaicItemPosition(i)}}const N=1/d,R=this._programOptions;R.pattern=P,R.sdf=S;const T=_.getMaterialProgram(l,E,R);if(y&&null!=g&&!T.compiled)return void g();if(l.useProgram(T),T.setUniformMatrix3fv(\"u_displayViewMat3\",u.displayViewMat3),T.setUniformMatrix3fv(\"u_displayMat3\",U===e.VIEWPORT?u.displayMat3:u.displayViewMat3),T.setUniform2fv(\"u_lineTranslation\",v),T.setUniform1f(\"u_depth\",M.z),T.setUniform1f(\"u_antialiasing\",N),D&&null!=D){const{page:e}=D,i=m.getPageSize(e);null!=i&&(m.bind(l,n.LINEAR,e,t),T.setUniform2fv(\"u_mosaicSize\",i),T.setUniform1i(\"u_texture\",t))}let V=-1;for(const e of s){if(!e.layerData.has(p))continue;e.key.level!==V&&(V=e.key.level,E.setDataUniforms(T,f,M,V,m));const i=2**(f-V)/d;T.setUniform1f(\"u_zoomFactor\",i);const s=e.layerData.get(p);if(!s.lineIndexCount)continue;s.prepareForRendering(l);const u=s.vao;if(null!=u){if(l.bindVAO(u),T.setUniformMatrix3fv(\"u_dvsMat3\",e.transforms.displayViewScreenMat3),l.setStencilFunction(a.EQUAL,e.stencilRef,255),x||L){const e=s.patternMap;if(!e)continue;for(const[i,a]of e){const e=m.getPageSize(i);null!=e&&(m.bind(l,n.LINEAR,i,t),T.setUniform2fv(\"u_mosaicSize\",e),T.setUniform1i(\"u_texture\",t),l.drawElements(r.TRIANGLES,a[1],o.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*a[0]))}}else l.drawElements(r.TRIANGLES,s.lineIndexCount,o.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*s.lineIndexStart);e.triangleCount+=s.lineIndexCount/3}}}}export{s as WGLBrushVTLLine};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{create as e,fromValues as t}from\"../../../../../core/libs/gl-matrix-2/factories/vec2f32.js\";import{fadeDuration as i}from\"../../vectorTiles/decluttering/config.js\";import{RotationAlignment as a,SymbolPlacement as r,TranslateAnchor as n}from\"../../vectorTiles/style/StyleDefinition.js\";import{vtlTextureBindingUnitSprites as s,vtlTextureBindingUnitGlyphs as o}from\"../definitions.js\";import{degToByte as l}from\"../GeometryUtils.js\";import f from\"./WGLBrush.js\";import{TextureSamplingMode as c,PrimitiveType as u,DataType as p,CompareFunction as m}from\"../../../../webgl/enums.js\";const g=1/65536;class d extends f{constructor(){super(...arguments),this._iconProgramOptions={id:!1,sdf:!1},this._sdfProgramOptions={id:!1},this._spritesTextureSize=e()}dispose(){}drawMany(e,t){const i=e.styleLayer;this._drawIcons(e,i,t),this._drawText(e,i,t)}_drawIcons(e,t,o){const{context:f,displayLevel:c,painter:u,spriteMosaic:p,state:m,styleLayerUID:g,requestRender:d,allowDelayedRender:y}=e,_=t.iconMaterial,M=u.vectorTilesMaterialManager;let h,P=!1;for(const i of o)if(i.layerData.has(g)&&(h=i.layerData.get(g),h.iconPerPageElementsMap.size>0)){P=!0;break}if(!P)return;const U=t.getPaintValue(\"icon-translate\",c),E=t.getPaintValue(\"icon-translate-anchor\",c);let T=t.getLayoutValue(\"icon-rotation-alignment\",c);T===a.AUTO&&(T=t.getLayoutValue(\"symbol-placement\",c)===r.POINT?a.VIEWPORT:a.MAP);const x=T===a.MAP,S=t.getLayoutValue(\"icon-keep-upright\",c)&&x,v=h.isIconSDF,D=this._iconProgramOptions;D.sdf=v;const V=M.getMaterialProgram(f,_,D);if(y&&null!=d&&!V.compiled)return void d();f.useProgram(V),V.setUniformMatrix3fv(\"u_displayViewMat3\",T===a.MAP?m.displayViewMat3:m.displayMat3),V.setUniformMatrix3fv(\"u_displayMat3\",E===n.VIEWPORT?m.displayMat3:m.displayViewMat3),V.setUniform2fv(\"u_iconTranslation\",U),V.setUniform1f(\"u_depth\",t.z),V.setUniform1f(\"u_mapRotation\",l(m.rotation)),V.setUniform1f(\"u_keepUpright\",S?1:0),V.setUniform1f(\"u_level\",10*c),V.setUniform1i(\"u_texture\",s),V.setUniform1f(\"u_fadeDuration\",i/1e3);let R=-1;for(const i of o){if(!i.layerData.has(g))continue;if(i.key.level!==R&&(R=i.key.level,_.setDataUniforms(V,c,t,R,p)),h=i.layerData.get(g),0===h.iconPerPageElementsMap.size)continue;h.prepareForRendering(f),h.updateOpacityInfo();const a=h.iconVAO;if(null!=a){f.bindVAO(a),V.setUniformMatrix3fv(\"u_dvsMat3\",i.transforms.displayViewScreenMat3),V.setUniform1f(\"u_time\",(performance.now()-h.lastOpacityUpdate)/1e3);for(const[t,a]of h.iconPerPageElementsMap)this._renderIconRange(e,V,a,t,i)}}}_renderIconRange(e,t,i,a,r){const{context:n,spriteMosaic:o}=e;this._spritesTextureSize[0]=o.getWidth(a)/4,this._spritesTextureSize[1]=o.getHeight(a)/4,t.setUniform2fv(\"u_mosaicSize\",this._spritesTextureSize),o.bind(n,c.LINEAR,a,s),this._setStencilState(e,r),n.drawElements(u.TRIANGLES,i[1],p.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*i[0]),r.triangleCount+=i[1]/3}_drawText(e,s,f){const{context:c,displayLevel:u,glyphMosaic:p,painter:m,pixelRatio:d,spriteMosaic:y,state:_,styleLayerUID:M,requestRender:h,allowDelayedRender:P}=e,U=s.textMaterial,E=m.vectorTilesMaterialManager;let T,x=!1;for(const t of f)if(t.layerData.has(M)&&(T=t.layerData.get(M),T.glyphPerPageElementsMap.size>0)){x=!0;break}if(!x)return;const S=s.getPaintProperty(\"text-opacity\");if(S&&!S.isDataDriven&&0===S.getValue(u))return;const v=s.getPaintProperty(\"text-color\"),D=!v||v.isDataDriven||v.getValue(u)[3]>0,V=s.getPaintProperty(\"text-halo-width\"),R=s.getPaintProperty(\"text-halo-color\"),I=(!V||V.isDataDriven||V.getValue(u)>0)&&(!R||R.isDataDriven||R.getValue(u)[3]>0);if(!D&&!I)return;const A=24/8;let w=s.getLayoutValue(\"text-rotation-alignment\",u);w===a.AUTO&&(w=s.getLayoutValue(\"symbol-placement\",u)===r.POINT?a.VIEWPORT:a.MAP);const L=w===a.MAP,O=s.getLayoutValue(\"text-keep-upright\",u)&&L,N=.8*A/d;this._glyphTextureSize||(this._glyphTextureSize=t(p.width/4,p.height/4));const z=s.getPaintValue(\"text-translate\",u),b=s.getPaintValue(\"text-translate-anchor\",u),k=this._sdfProgramOptions,G=E.getMaterialProgram(c,U,k);if(P&&null!=h&&!G.compiled)return void h();c.useProgram(G),G.setUniformMatrix3fv(\"u_displayViewMat3\",w===a.MAP?_.displayViewMat3:_.displayMat3),G.setUniformMatrix3fv(\"u_displayMat3\",b===n.VIEWPORT?_.displayMat3:_.displayViewMat3),G.setUniform2fv(\"u_textTranslation\",z),G.setUniform1f(\"u_depth\",s.z+g),G.setUniform2fv(\"u_mosaicSize\",this._glyphTextureSize),G.setUniform1f(\"u_mapRotation\",l(_.rotation)),G.setUniform1f(\"u_keepUpright\",O?1:0),G.setUniform1f(\"u_level\",10*u),G.setUniform1i(\"u_texture\",o),G.setUniform1f(\"u_antialiasingWidth\",N),G.setUniform1f(\"u_fadeDuration\",i/1e3);let W=-1;for(const t of f){if(!t.layerData.has(M))continue;if(t.key.level!==W&&(W=t.key.level,U.setDataUniforms(G,u,s,W,y)),T=t.layerData.get(M),0===T.glyphPerPageElementsMap.size)continue;T.prepareForRendering(c),T.updateOpacityInfo();const i=T.textVAO;if(null==i)continue;c.bindVAO(i),G.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),this._setStencilState(e,t);const a=(performance.now()-T.lastOpacityUpdate)/1e3;G.setUniform1f(\"u_time\",a),T.glyphPerPageElementsMap.forEach(((e,i)=>{this._renderGlyphRange(c,e,i,p,G,I,D,t)}))}}_renderGlyphRange(e,t,i,a,r,n,s,l){a.bind(e,c.LINEAR,i,o),n&&(r.setUniform1f(\"u_halo\",1),e.drawElements(u.TRIANGLES,t[1],p.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3),s&&(r.setUniform1f(\"u_halo\",0),e.drawElements(u.TRIANGLES,t[1],p.UNSIGNED_INT,Uint32Array.BYTES_PER_ELEMENT*t[0]),l.triangleCount+=t[1]/3)}_setStencilState(e,t){const{context:i,is3D:a,stencilSymbols:r}=e;if(i.setStencilTestEnabled(!0),r)return i.setStencilWriteMask(255),void i.setStencilFunction(m.ALWAYS,t.stencilRef,255);i.setStencilWriteMask(0),a?i.setStencilFunction(m.EQUAL,t.stencilRef,255):i.setStencilFunction(m.GREATER,255,255)}}export{d as WGLBrushVTLSymbol};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport r from\"./webgl/brushes/BrushBitmap.js\";import s from\"./webgl/brushes/BrushClip.js\";import e from\"./webgl/brushes/BrushOverlay.js\";import l from\"./webgl/brushes/WGLBrushStencil.js\";import o from\"./webgl/brushes/WGLBrushTileDebugInfo.js\";import{WGLBrushVTLBackground as b}from\"./webgl/brushes/WGLBrushVTLBackground.js\";import{WGLBrushVTLCircle as i}from\"./webgl/brushes/WGLBrushVTLCircle.js\";import{WGLBrushVTLFill as m}from\"./webgl/brushes/WGLBrushVTLFill.js\";import{WGLBrushVTLLine as u}from\"./webgl/brushes/WGLBrushVTLLine.js\";import{WGLBrushVTLSymbol as t}from\"./webgl/brushes/WGLBrushVTLSymbol.js\";const h={clip:s,stencil:l,bitmap:r,overlay:e,tileDebugInfo:o,vtlBackground:b,vtlFill:m,vtlLine:u,vtlCircle:i,vtlSymbol:t};export{h as brushes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nconst o=!0,t=32,c=1.5,e=200;export{t as collisionGridCellSize,c as declutterBudget,o as declutterTiles,e as fadeDuration};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{DataType as e}from\"../../../webgl/enums.js\";import{VertexElementDescriptor as o}from\"../../../webgl/VertexElementDescriptor.js\";const r={geometry:[new o(\"a_pos\",2,e.BYTE,0,2)]},t={geometry:[new o(\"a_pos\",2,e.BYTE,0,4),new o(\"a_tex\",2,e.BYTE,2,4)]},m={geometry:[new o(\"a_pos\",2,e.UNSIGNED_SHORT,0,4)]};export{r as Pos2b,m as Pos2us,t as PosTex2b};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{set as t,multiply as s}from\"../../../../core/libs/gl-matrix-2/math/mat2d.js\";import{create as i}from\"../../../../core/libs/gl-matrix-2/factories/mat2df32.js\";import{set as r,multiply as e}from\"../../../../core/libs/gl-matrix-2/math/mat3.js\";import{create as a}from\"../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";import{tileSize as o}from\"./definitions.js\";import{TiledDisplayObject as m}from\"./TiledDisplayObject.js\";class l extends m{constructor(t,s,i,r){super(t,s,i,r,o,o)}destroy(){super.destroy()}setTransform(a){const o=this.resolution/a.resolution,m=this.transforms.tileMat3,[l,n]=a.toScreenNoRotation([0,0],[this.x,this.y]),c=this.width/this.rangeX*o,d=this.height/this.rangeY*o;r(m,c,0,0,0,d,0,l,n,1),e(this.transforms.displayViewScreenMat3,a.displayViewMat3,m);const f=this.transforms.labelMat2d,h=window.devicePixelRatio,p=t(i(),c*h,0,0,d*h,l*h,n*h);s(f,a.viewMat2d,p)}_createTransforms(){return{labelMat2d:i(),tileMat3:a(),displayViewScreenMat3:a()}}}export{l as AFeatureTile};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport\"../../../../core/has.js\";import{FeatureBatchingStrategy as t,FeatureSymbologyDrawOrder as e}from\"./enums.js\";import{List as n}from\"./cpuMapped/FreeList.js\";function a(t,e){return t<<16|255&e}function i(t){return 255&t}class s{constructor(t,e,n,a,i){this.instance=t,this.materialKey=e,this.target=n,this.start=a,this.count=i}get textureKey(){return i(this.materialKey)}get indexEnd(){return this.start+this.count}extend(t){this.count+=t}render(t){this.instance.techniqueRef.render(t,this)}}class r{constructor(){this._length=0,this._minOrderedLength=0,this._materialKeys=new Set}static fromDisplayEntities(t,e,n,i){const s=new r;for(const r of t.values())for(const t of r.records){const r=n.getInstance(t.instanceId),d=a(r.instanceId,t.textureKey);s.addRecord(r,d,t.indexStart,t.indexCount,t.vertexStart,t.vertexCount,e,i)}return s}get length(){return this._length}get minOrderedLength(){return this._minOrderedLength}get minUnorderedLength(){return this._materialKeys.size}render(t){const{drawPhase:e}=t;for(const n of this.infos())n.instance.techniqueRef.drawPhase&e&&n.render(t)}addRecord(a,i,r,d,h,l,o,c){let u=r,_=d;if(_||(u=h,_=l),!_)return;if(null==this._head){const t=new s(a,i,o,u,_);return this._head=new n(t),this._tail=this._head,this._length++,void this._minOrderedLength++}if(c===t.STRICT_ORDER)return this._insert(a,i,o,u,_,this._tail,null);let f=null,g=this._head;const m=a.instanceId,y=a.techniqueRef.symbologyPlane;if(c===t.STRICT_MARKERS_AND_TEXT&&(y===e.MARKER||y===e.TEXT))return this._insert(a,i,o,u,_,this._tail,null);for(;g;){const t=g.data.instance,e=t.instanceId,n=t.techniqueRef.symbologyPlane,s=f?.data.instance.instanceId;if(y<n||m===s&&m!==e)return this._insert(a,i,o,u,_,f,g);f=g,g=g.next}this._insert(a,i,o,u,_,f,null)}*infos(){if(null!=this._head)for(const t of this._head.values())yield t}_insert(t,e,a,i,r,d,h){if(null==d&&null==h){const d=new s(t,e,a,i,r);return this._head=new n(d),this._tail=this._head,this._length++,void this._minOrderedLength++}return e!==this._tail.data.materialKey&&this._minOrderedLength++,this._materialKeys.add(e),null==d&&null!=h?this._insertAtHead(t,e,a,i,r,h):null!=d&&null==h?this._insertAtEnd(t,e,a,i,r,d):null!=d&&null!=h?this._insertAtMiddle(t,e,a,i,r,d,h):void 0}_insertAtHead(t,e,a,i,r,d){const h=i+r;if(e===d.data.materialKey&&a===d.data.target&&h===d.data.start)d.data.start=i,d.data.count+=r;else{const h=new s(t,e,a,i,r);this._head=new n(h),this._head.next=d,this._length++}}_insertAtEnd(t,e,a,i,r,d){if(d.data.materialKey===e&&d.data.indexEnd===i)d.data.count+=r;else{const h=new s(t,e,a,i,r);this._tail=new n(h),d.next=this._tail,this._length++}}_insertAtMiddle(t,e,a,i,r,d,h){const l=i+r;if(d.data.materialKey===e&&d.data.target===a&&d.data.indexEnd===i)d.data.count+=r,d.data.materialKey===h.data.materialKey&&d.data.target===h.data.target&&d.data.indexEnd===h.data.start&&(d.data.count+=h.data.count,d.next=h.next,this._length--);else if(e===h.data.materialKey&&a===h.data.target&&l===h.data.start)h.data.start=i,h.data.count+=r;else{const l=new s(t,e,a,i,r),o=new n(l);d.next=o,o.next=h,this._length++}}}export{r as DisplayList,s as DisplayListInfo};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nclass t{constructor(t){this._indexOnly=t,this.vertex={count:0,operations:[]},this.index={count:0,operations:[]}}copyRecord(t){let e=0;this._indexOnly||(e=this.vertex.count-t.vertexStart,this.vertex.operations.push({srcFrom:t.vertexStart,dstFrom:this.vertex.count,count:t.vertexCount,mutate:0}),t.vertexStart=this.vertex.count,this.vertex.count+=t.vertexCount),this.index.operations.push({srcFrom:t.indexStart,dstFrom:this.index.count,count:t.indexCount,mutate:e}),t.indexStart=this.index.count,this.index.count+=t.indexCount}}export{t as ReshufflePlan};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport\"../../../../../core/has.js\";import{assertIsSome as t}from\"../../../../../core/maybe.js\";import{PooledUint32Array as i}from\"../PooledUint32Array.js\";import{FreeList as e}from\"./FreeList.js\";import{BufferObject as r}from\"../../../../webgl/BufferObject.js\";import{Usage as s}from\"../../../../webgl/enums.js\";const n=1.25,h=32767,a=h<<16|h;class d{constructor(t,e,r,s){this._pool=s;const n=i.create(e*r*Uint32Array.BYTES_PER_ELEMENT,this._pool);this.size=e,this.strideInt=r,this.bufferType=t,this.dirty={start:1/0,end:0},this.memoryStats={bytesUsed:0,bytesReserved:e*r*Uint32Array.BYTES_PER_ELEMENT},this._gpu=null,this._cpu=n,this.clear()}get elementSize(){return this._cpu.length/this.strideInt}get intSize(){return this.fillPointer*this.strideInt}get byteSize(){return this.intSize*Uint32Array.BYTES_PER_ELEMENT}get invalidated(){return this.bufferSize>0&&!this._gpu}get invalidatedComputeBuffer(){return this.bufferSize>0&&!this._gpuComputeTriangles}invalidate(){this._invalidateTriangleBuffer(),this._gpu?.dispose(),this._gpu=null}_invalidateTriangleBuffer(){this._gpuComputeTriangles?.dispose(),this._gpuComputeTriangles=null}destroy(){this._gpu?.dispose(),this._gpuComputeTriangles?.dispose(),this._cpu?.destroy()}clear(){this.dirty.start=1/0,this.dirty.end=0,this.freeList=new e({start:0,end:this._cpu.length/this.strideInt}),this.fillPointer=0}ensure(t){if(this.maxAvailableSpace()>=t)return;if(t*this.strideInt>this._cpu.length-this.fillPointer){this.invalidate();const i=this._cpu.length/this.strideInt,e=Math.round((i+t)*n),r=e*this.strideInt;this._cpu.expand(r*Uint32Array.BYTES_PER_ELEMENT),this.freeList.free(i,e-i),this.memoryStats.bytesReserved+=(e-i)*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}}set(t,i){this._cpu.array[t]!==i&&(this._cpu.array[t]=i,this.dirty.start=Math.min(t,this.dirty.start),this.dirty.end=Math.max(t+1,this.dirty.end))}getGPUBuffer(t,i=!1){if(!this.bufferSize)return null;if(i){if(\"index\"!==this.bufferType)throw new Error(\"Tired to get triangle buffer, but target is not an index buffer\");return null==this._gpuComputeTriangles&&(this._gpuComputeTriangles=this._createComputeBuffer(t)),this._gpuComputeTriangles}return null==this._gpu&&(this._gpu=this._createBuffer(t)),this._gpu}getView(t,i){return this._cpu.getUint32View(t,i/Uint32Array.BYTES_PER_ELEMENT)}get bufferSize(){return this._cpu.length/this.strideInt}maxAvailableSpace(){return this.freeList.maxAvailableSpace()}insert(i,e,r,s){const n=r*this.strideInt;if(!n)return 0;const h=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,a=new Uint32Array(i,h,n),d=this.freeList.firstFit(r);t(d,\"First fit region must be defined\");const u=d*this.strideInt,o=n;if(this._cpu.array.set(a,u),0!==s)for(let t=0;t<a.length;t++)this._cpu.array[t+u]+=s;return this.dirty.start=Math.min(this.dirty.start,u),this.dirty.end=Math.max(this.dirty.end,u+o),this.fillPointer=Math.max(this.fillPointer,u+o),this.memoryStats.bytesUsed+=r*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,d}copyFrom(i,e,r,s,n){const h=r*this.strideInt;if(!h)return 0;const a=e*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,d=i._cpu.getUint32View(a,h),u=this.freeList.firstFit(r);t(u,\"First fit region must be defined\");const o=u*this.strideInt,f=h;if(this._cpu.array.set(d,o),0!==s)for(let t=0;t<h;t++)this._cpu.array[o+t*this.strideInt+n]+=s;return this.dirty.start=Math.min(this.dirty.start,o),this.dirty.end=Math.max(this.dirty.end,o+f),this.fillPointer=Math.max(this.fillPointer,o+f),this.memoryStats.bytesUsed+=r*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,u}free(t,i,e){const r=t*this.strideInt,s=(t+i)*this.strideInt;if(!0===e)for(let n=t;n!==t+i;n++)this._cpu.array[n*this.strideInt]=a;this.dirty.start=Math.min(this.dirty.start,r),this.dirty.end=Math.max(this.dirty.end,s),this.freeList.free(t,i),this.memoryStats.bytesUsed-=i*this.strideInt*Uint32Array.BYTES_PER_ELEMENT}upload(){if(this.dirty.end){if(this._invalidateTriangleBuffer(),null==this._gpu)return this.dirty.start=1/0,void(this.dirty.end=0);this._gpu.setSubData(this._cpu.array,this.dirty.start,this.dirty.start,this.dirty.end),this.dirty.start=1/0,this.dirty.end=0}}reshuffle(t,e){if(0===e.length)return;const r=t*this.strideInt*Uint32Array.BYTES_PER_ELEMENT,s=this._cpu,n=i.create(r,this._pool);for(const i of e)for(let t=0;t<i.count;t++){const e=(i.dstFrom+t)*this.strideInt,r=(i.srcFrom+t)*this.strideInt;for(let t=0;t<this.strideInt;t++)n.array[e+t]=s.array[r+t]+i.mutate}this._cpu.destroy(),this._cpu=n,this.invalidate(),this.dirty.start=0,this.dirty.end=t,this.freeList.clear(),this.memoryStats.bytesUsed=this.memoryStats.bytesReserved=r}_createBuffer(t){const i=s.DYNAMIC_DRAW;return\"index\"===this.bufferType?r.createIndex(t,i,this._cpu.array):r.createVertex(t,i,this._cpu.array)}_createComputeBuffer(t){const i=s.DYNAMIC_DRAW,e=new Uint32Array(this.fillPointer/3);for(let r=0;r<this.fillPointer;r+=3)e[r/3]=this._cpu.array[r];return r.createIndex(t,i,e)}}export{d as MappedBuffer};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{destroyMaybe as e}from\"../../../../../core/maybe.js\";import{i1616to32 as t}from\"../number.js\";import{MappedBuffer as r}from\"./Buffer.js\";import{unpackDataView as s}from\"../shaderGraph/techniques/mesh/dataViewUtils.js\";import{vertexLayoutHash as i}from\"../shaderGraph/techniques/mesh/utils.js\";import{PrimitiveType as o}from\"../../../../webgl/enums.js\";import{VertexArrayObject as f}from\"../../../../webgl/VertexArrayObject.js\";const n=0,u=1,a=1e3;class h{constructor(e){this._bufferPool=e,this._computeLayouts=new Map,this._vaos=new Map}destroy(){for(const[e,t]of this._vaos)t?.disposeVAOOnly();this._indexBuffer=e(this._indexBuffer),this._vertexBuffer=e(this._vertexBuffer)}_getVertexAttributeLayout(e){if(!e)return null;const t=[];for(const r of e.attributes)t.push({name:r.name,type:r.type,count:r.count,divisor:0,normalized:r.normalized??!1,offset:r.offset,stride:e.stride});return{geometry:t}}getLayout(e){if(!this._layout)return null;const{locationInfo:t,useComputeBuffer:r,computeAttributeMap:s}=e,o=this._layout.attributes.filter((e=>t.locations.has(e.name)));if(!r)return{attributes:o,hash:this._layout.hash,stride:this._layout.stride};const f=Object.values(s).flat().join(\"-\");if(this._computeLayouts.has(f))return this._computeLayouts.get(f);const n=this._layout.stride;for(const{name:i,count:a,type:h,normalized:c,offset:l,packPrecisionFactor:_}of this._layout.attributes){const e=s[i];null!=e&&2===e.length&&(o.push({name:e[0],count:a,type:h,normalized:c,offset:l+n,packPrecisionFactor:_}),o.push({name:e[1],count:a,type:h,normalized:c,offset:l+2*n,packPrecisionFactor:_}))}const u={attributes:o,stride:n,hash:i(o)};return this._computeLayouts.set(f,u),u}getDrawArgs(e,t,r,s){return s?{primitive:o.POINTS,count:t/3,offset:r/3}:{primitive:e,count:t,offset:r}}getDebugVertexInfo(e){if(!this._vertexBuffer)return null;const t=this.getLayout(e);if(null==t)return null;const r=t.stride,i=this._vertexBuffer.getView(0,this._vertexBuffer.byteSize),o=new DataView(i.slice().buffer);let f=i.byteLength/r;e.useComputeBuffer&&(f=this._indexBuffer.fillPointer/3);const n=this._indexBuffer.getView(0,this._indexBuffer.byteSize);let u=0;const a=[];for(let h=0;h<f;h++){if(e.useComputeBuffer){u=n[3*h]*r}const i={};for(const e of t.attributes){let t=`${e.offset} ${e.name}`,r=s(o,e,u);if(e.packPrecisionFactor)if(t+=` (precision: ${e.packPrecisionFactor})`,\"number\"==typeof r)r/=e.packPrecisionFactor;else for(let s=0;s<r.length;s++)r[s]/=e.packPrecisionFactor;i[t]=r}u+=r,a.push(i)}return{vertices:a,layout:t}}_ensure(e,t,s){if(this._vertexBuffer&&this._indexBuffer){if(this._layout?.hash!==e.hash)throw new Error(\"InternalError: Expected vertex layouts to match\");this._indexBuffer.ensure(Math.max(t,1e3)),this._vertexBuffer.ensure(Math.max(s,1e3))}else{const i=e.stride/Uint32Array.BYTES_PER_ELEMENT;if(this._layout=e,this._position=e.attributes.find((e=>\"pos\"===e.name||\"position\"===e.name)),!this._position)throw new Error(\"InternalError: Unable to find position attribute\");this._indexBuffer=new r(\"index\",Math.max(t,a),1,this._bufferPool),this._vertexBuffer=new r(\"vertex\",Math.max(s,a),i,this._bufferPool)}}append(e){const t=e.layout.stride,r=e.indices.byteLength/Uint32Array.BYTES_PER_ELEMENT,s=e.vertices.byteLength/t;this._ensure(e.layout,r,s);const{vertices:i,indices:o}=e,f=this._vertexBuffer.insert(i,0,i.byteLength/t,0);return{vertexFrom:f,indexFrom:this._indexBuffer.insert(o,0,o.byteLength/4,f)}}copyRecordFrom(e,r,s,i){const{indexStart:o,indexCount:f,vertexStart:n,vertexCount:u}=r;this._ensure(e._layout,f,u);const a=e._position,h=s*(a.packPrecisionFactor??1),c=i*(a.packPrecisionFactor??1),l=a.offset,_=t(h,c),m=this._vertexBuffer.copyFrom(e._vertexBuffer,n,u,_,l),d=this._indexBuffer.copyFrom(e._indexBuffer,o,f,m-n,0),x=r.clone();return x.vertexStart=m,x.indexStart=d,x.overlaps=0,x}remove(e,t,r,s){this._indexBuffer.free(e,t),this._vertexBuffer.free(r,s)}getVAO(e,t,r){if(!this._vertexBuffer||!this._indexBuffer||!this._vertexBuffer.bufferSize)return null;const s=r?.useComputeBuffer?u:n;let i=this._vaos.get(s);(this._vertexBuffer.invalidated||this._indexBuffer.invalidated||r?.useComputeBuffer&&this._indexBuffer.invalidatedComputeBuffer)&&(i?.disposeVAOOnly(),i=null),this._vertexBuffer.upload(),this._indexBuffer.upload();const o=this._indexBuffer.getGPUBuffer(e,1===s),a=this._vertexBuffer.getGPUBuffer(e);return i||(i=new f(e,t.locations,this._getVertexAttributeLayout(this.getLayout(r)),{geometry:a},o),this._vaos.set(s,i)),i}get memoryStats(){return{bytesUsed:this._vertexBuffer.memoryStats.bytesUsed+this._indexBuffer.memoryStats.bytesUsed,bytesReserved:this._vertexBuffer.memoryStats.bytesReserved+this._indexBuffer.memoryStats.bytesReserved,vertex:this._vertexBuffer.memoryStats,index:this._indexBuffer.memoryStats}}reshuffle(e){this._vertexBuffer&&this._vertexBuffer.reshuffle(e.vertex.count,e.vertex.operations),this._indexBuffer&&this._indexBuffer.reshuffle(e.index.count,e.index.operations)}}export{h as MappedMesh};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nclass t{constructor(t){this._pos=0,this._buffer=t,this._i32View=new Int32Array(this._buffer),this._f32View=new Float32Array(this._buffer)}readInt32(){return this._i32View[this._pos++]}readF32(){return this._f32View[this._pos++]}}export{t as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport t from\"../DisplayEntity.js\";import{unpackDataView as e}from\"../shaderGraph/techniques/mesh/dataViewUtils.js\";import i from\"../util/Reader.js\";import{deserializeList as r}from\"../util/serializationUtils.js\";function o(e){if(!e)return null;return{entities:r(new i(e.entities),t),vertexData:e.data.map(a)}}function a(t){const i=t.layout.stride,r=new DataView(t.vertices),o=[],a=t.vertices.byteLength/i;let s=0;for(let n=0;n<a;n++){const a={};for(const i of t.layout.attributes){let t=`${i.offset} ${i.name}`,o=e(r,i,s);if(i.packPrecisionFactor)if(t+=` (precision: ${i.packPrecisionFactor})`,\"number\"==typeof o)o/=i.packPrecisionFactor;else for(let e=0;e<o.length;e++)o[e]/=i.packPrecisionFactor;a[t]=o}s+=i,o.push(a)}return{vertices:o,layout:t.layout}}export{o as debugMeshDataInfo};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport has from\"../../../../core/has.js\";import e from\"../../../../core/Logger.js\";import{create as t}from\"../../../../core/libs/gl-matrix-2/factories/mat2df32.js\";import{AFeatureTile as s}from\"./AFeatureTile.js\";import{RESHUFFLING_EXEMPT_MEMORY_BYTES as i,RESHUFFLING_TARGET_MEMORY_EFFICIENCY as r,RESHUFFLING_EXEMPT_DRAW_CALLS as o,RESHUFFLING_TARGET_DRAW_EFFICIENCY as n,tileSize as d}from\"./definitions.js\";import h from\"./DisplayEntity.js\";import{FeatureBatchingStrategy as a}from\"./enums.js\";import{DisplayList as f}from\"./FeatureDisplayList.js\";import{ReshufflePlan as u}from\"./ReshufflePlan.js\";import{LabelMetric as m}from\"./collisions/LabelMetric.js\";import{MappedMesh as l}from\"./cpuMapped/MappedMesh.js\";import{debugMeshDataInfo as p}from\"./mesh/meshDebugUtils.js\";import c from\"./util/Reader.js\";import{deserializeList as y}from\"./util/serializationUtils.js\";const _=()=>e.getLogger(\"esri.views.2d.engine.webgl.FeatureTile\");let g=0;class b extends s{constructor(e,s,i,r){super(e,s,i,r),this._meshes=new Map,this._entities=[],this.tileAge=g++,this._metrics=[],this._entityIds=new Set,this._entityIdsFromBuffer=new Set,this._attributeEpoch=0,this._encounteredEnd=!1,this.visible=!0,this.transforms.labelMat2d=t()}destroy(){super.destroy(),this.clear()}clear(){for(const e of this._meshes.values())e.destroy();this._meshes.clear(),this._entities=[],this._metrics=[],this._displayList=null,this._entityIds.clear()}beforeRender(e){super.beforeRender(e),this._needsReshuffle&&e.reshuffleManager.schedule(this)}tryReady(e){return!!(!this._isReady&&this._encounteredEnd&&e>=this._attributeEpoch)&&(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.ready [epoch=${e}]`),this.ready(),this.requestRender(),!0)}get labelMetrics(){return this._metrics}get hasData(){return!!this._meshes.size}getDisplayList(e,t,s=a.BATCHING){return this._displayList||(this._entities.sort(((e,t)=>{const s=t.sortKey,i=e.sortKey;return i===s?e.id-t.id:i-s})),s===a.BATCHING&&this.reshuffle(!0),this._displayList=f.fromDisplayEntities(this._entities,this,t,s),this.debugInfo.display.length=this._displayList.length,this.debugInfo.display.minOrderedLength=this._displayList.minOrderedLength,this.debugInfo.display.minUnorderedLength=this._displayList.minUnorderedLength,this.requestRender()),this._displayList}getMesh(e){if(!this._meshes.has(e))throw new Error(`InternalError: Unable to find VAO for instance: ${e}`);return this._meshes.get(e)}getSortKeys(e){const t=new Map;for(const{id:s,sortKey:i}of this._entities)if(e.has(s)&&t.set(s,i),t.size===e.size)break;return t}onMessage(e){switch(e.type){case\"append\":this._onAppendMessage(e);break;case\"update\":this._onUpdateMessage(e)}if(this._aggregateMemoryStats(),this.requestRender(),e.end){if(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.end [epoch=${e.attributeEpoch}]`),!e.attributeEpoch)throw new Error(\"InternalError: Attribute epoch not defined.\");this._attributeEpoch=e.attributeEpoch,this._encounteredEnd=!0}}_onAppendMessage(e){if(has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.append`,{append:p(e?.append)}),e.clear&&this.clear(),!e.append)return;const t=y(new c(e.append.entities),h);this._insert(t,e.append.data,!1)}_onUpdateMessage(e){has(\"esri-2d-update-debug\")&&console.debug(`Tile[${this.key.id}] FeatureTile.update`,{isPixelBuffer:e.isPixelBuffer,modify:p(e.modify),remove:e.remove});const t=y(new c(e.modify.entities),h),s=t.map((e=>e.id)),i=e.isPixelBuffer??!1,r=[...e.remove,...s];i?this._removeByIdsFromBuffer(r):this._removeByIds(r),this._insert(t,e.modify.data,i)}reshuffle(e=!1){if(this.destroyed)return;const t=new Map;for(const s of this._entities)for(const i of s.records){const s=this._meshes.get(i.instanceId);let r=t.get(s);r||(r=new u(e),t.set(s,r)),r.copyRecord(i)}for(const[s,i]of t)s.reshuffle(i);this._displayList=null,this._aggregateMemoryStats(),has(\"esri-2d-update-debug\")&&_().info(`Tile ${this.key.id} was reshuffled.`)}copyPixelBufferedEntitesFrom(e,t,s,i){const r=s*d,o=i*d;for(const n of e._entities){let s=null;for(const i of n.records)if(i.overlaps&t){const t=this._ensureMesh(i.instanceId),d=e.getMesh(i.instanceId),a=t.copyRecordFrom(d,i,r,o);s||(s=new h(n.id,n.sortKey),this._entityIdsFromBuffer.add(n.id),this._entities.push(s)),s.records.push(a)}}this._displayList=null}_ensureMesh(e){return this._meshes.has(e)||this._meshes.set(e,new l(this._stage.bufferPool)),this._meshes.get(e)}_insert(e,t,s){if(!e.length)return;this._removeDuplicatedBufferedEntites(e);const i=this._insertVertexData(t);for(const r of e){for(const e of r.records)e.updateBaseOffsets(i.get(e.instanceId));s?this._tryInsertBufferedEntity(r):this._insertEntity(r)}this._displayList=null}_insertVertexData(e){const t=new Map;for(const s of e){const{instanceId:e}=s,i=this._ensureMesh(e).append(s);if(s.metrics){const e=y(new c(s.metrics),m)??[];this._metrics.push(...e)}t.set(e,i)}return t}_insertEntity(e){has(\"esri-2d-update-debug\")&&this._entityIds.has(e.id)&&console.error(`Tile ${this.key.id} insertEnitty: Already have entityId ${e.id}`),this._entityIds.add(e.id),this._entities.push(e)}_tryInsertBufferedEntity(e){this._entityIds.has(e.id)?this._removeRecordsFromMesh(e.records):(this._entityIdsFromBuffer.add(e.id),this._entities.push(e))}_removeDuplicatedBufferedEntites(e){if(!this._entityIdsFromBuffer.size)return;const t=[];for(const s of e)this._entityIdsFromBuffer.has(s.id)&&t.push(s.id);this._removeByIds(t)}_removeByIdsFromBuffer(e){this._removeByIds(e.filter((e=>this._entityIdsFromBuffer.has(e))))}_removeByIds(e){if(0===e.length)return;const t=new Set(e),s=[];for(const i of this._entities)t.has(i.id)?this._remove(i):s.push(i);this._entities=s,this._displayList=null}_remove(e){this._removeRecordsFromMesh(e.records),this._entityIds.delete(e.id),this._entityIdsFromBuffer.delete(e.id)}_removeRecordsFromMesh(e){for(const t of e){const{instanceId:e,indexStart:s,indexCount:i,vertexStart:r,vertexCount:o}=t;this._meshes.get(e)?.remove(s,i,r,o)}}_aggregateMemoryStats(){this.debugInfo.memory.bytesUsed=0,this.debugInfo.memory.bytesReserved=0;for(const[e,t]of this._meshes)this.debugInfo.memory.bytesUsed+=t.memoryStats.bytesUsed,this.debugInfo.memory.bytesReserved+=t.memoryStats.bytesReserved}get _needsReshuffle(){if(this.destroyed)return!1;const{bytesUsed:e,bytesReserved:t}=this.debugInfo.memory,s=e/t,{minOrderedLength:d,length:h}=this.debugInfo.display;return t>i&&s<r||h>o&&d/h<n}}export{b as FeatureTile};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nconst n=128/Math.PI,t=256/360,r=1/Math.LN2;function u(n,t){return(n%=t)>=0?n:n+t}function o(t){return u(t*n,256)}function c(n){return u(n*t,256)}function e(n){return Math.log(n)*r}function f(n,t,r){return n*(1-r)+t*r}function i(n,t,r){return n>=t&&n<=r||n>=r&&n<=t}export{i as between,c as degToByte,f as interpolate,e as log2,u as positiveMod,o as radToByte};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport has from\"../../../../core/has.js\";import{assertIsSome as t}from\"../../../../core/maybe.js\";import{FreeList as e}from\"./cpuMapped/FreeList.js\";const r=has(\"esri-2d-log-allocations\");class s{static create(t,e){const r=e.acquireUint32Array(t);return new s(r,e)}constructor(t,e){this._array=t,this._pool=e}get array(){return this._array}get length(){return this._array.length}getUint32View(t,e){return new Uint32Array(this._array.buffer,t+this._array.byteOffset,e)}expand(t){if(t<=this._array.byteLength)return;const e=this._pool.acquireUint32Array(t);e.set(this._array),this._pool.releaseUint32Array(this._array),this._array=e}destroy(){this._pool.releaseUint32Array(this._array)}}class a{constructor(){this._data=new ArrayBuffer(a.BYTE_LENGTH),this._freeList=new e({start:0,end:this._data.byteLength})}static get BYTE_LENGTH(){return 16e6}get buffer(){return this._data}acquireUint32Array(t){const e=this._freeList.firstFit(t);return null==e?null:new Uint32Array(this._data,e,t/Uint32Array.BYTES_PER_ELEMENT)}releaseUint32Array(t){this._freeList.free(t.byteOffset,t.byteLength)}}class i{constructor(){this._pages=[],this._pagesByBuffer=new Map,this._bytesAllocated=0}destroy(){this._pages=[],this._pagesByBuffer=null}get _bytesTotal(){return this._pages.length*a.BYTE_LENGTH}acquireUint32Array(e){if(this._bytesAllocated+=e,r&&console.log(`Allocating ${e}, (${this._bytesAllocated} / ${this._bytesTotal})`),e>=a.BYTE_LENGTH)return new Uint32Array(e/Uint32Array.BYTES_PER_ELEMENT);for(const t of this._pages){const r=t.acquireUint32Array(e);if(null!=r)return r}const s=this._addPage().acquireUint32Array(e);return t(s,\"Expected to allocate page\"),s}releaseUint32Array(t){this._bytesAllocated-=t.byteLength,r&&console.log(`Freeing ${t.byteLength}, (${this._bytesAllocated} / ${this._bytesTotal})`);const e=this._pagesByBuffer.get(t.buffer);e&&e.releaseUint32Array(t)}_addPage(){const t=new a;return this._pages.push(t),this._pagesByBuffer.set(t.buffer,t),t}}export{i as ArrayBufferPool,s as PooledUint32Array};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{set as t,multiply as e}from\"../../../../core/libs/gl-matrix-2/math/mat3.js\";import{DisplayObject as i}from\"../DisplayObject.js\";import s from\"../../tiling/TileKey.js\";class r extends i{constructor(t,e,i,r,n,o,h=n,l=o){super(),this.tileDebugInfoTexture=null,this.debugInfo={display:{length:0,minOrderedLength:0,minUnorderedLength:0,triangleCount:0},memory:{bytesUsed:0,bytesReserved:0}},this._destroyed=!1,this.key=new s(t),this.resolution=e,this.x=i,this.y=r,this.width=n,this.height=o,this.rangeX=h,this.rangeY=l}destroy(){this.tileDebugInfoTexture&&(this.tileDebugInfoTexture.dispose(),this.tileDebugInfoTexture=null),this._destroyed=!0}get debugSlot(){let t=this;for(;t.parent!==this._stage;){if(!t.parent)return 0;t=t.parent}return this._stage.children.indexOf(t)}setTransform(i){const s=this.resolution/(i.resolution*i.pixelRatio),r=this.transforms.tileMat3,[n,o]=i.toScreenNoRotation([0,0],[this.x,this.y]),h=this.width/this.rangeX*s,l=this.height/this.rangeY*s;t(r,h,0,0,0,l,0,n,o,1),e(this.transforms.displayViewScreenMat3,i.displayViewMat3,r)}get destroyed(){return this._destroyed}}export{r as TiledDisplayObject};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{vertexLayoutHash as t}from\"./shaderGraph/techniques/mesh/utils.js\";import{BufferObject as e}from\"../../../webgl/BufferObject.js\";import{DataType as r,Usage as s,PrimitiveType as i}from\"../../../webgl/enums.js\";import{VertexArrayObject as o}from\"../../../webgl/VertexArrayObject.js\";import{VertexElementDescriptor as a}from\"../../../webgl/VertexElementDescriptor.js\";class h{constructor(i,h){this._rctx=i,this._attributes=[{name:\"position\",offset:0,type:r.SHORT,count:2}],this.layout={hash:t(this._attributes),attributes:this._attributes,stride:4},this._vertexBuffer=e.createVertex(i,s.STATIC_DRAW,new Uint16Array(h)),this._vao=new o(i,new Map([[\"a_position\",0]]),{geometry:[new a(\"a_position\",2,r.SHORT,0,4)]},{geometry:this._vertexBuffer}),this._count=h.length/2}bind(){this._rctx.bindVAO(this._vao)}unbind(){this._rctx.bindVAO(null)}dispose(){this._vao.dispose()}draw(){this._rctx.bindVAO(this._vao),this._rctx.drawArrays(i.TRIANGLE_STRIP,0,this._count)}}export{h as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import t from\"../../../../core/Logger.js\";import{e as r}from\"../../../../chunks/earcut.js\";import{set as o}from\"../../../../core/libs/gl-matrix-2/math/vec2.js\";import{create as n}from\"../../../../core/libs/gl-matrix-2/factories/vec2f64.js\";import{convertFromNestedArray as s,convertFromPolygon as i}from\"../../../../layers/graphics/featureConversionUtils.js\";import c from\"../../../../layers/graphics/OptimizedGeometry.js\";import{i1616to32 as a}from\"./number.js\";import{BufferObject as f}from\"../../../webgl/BufferObject.js\";import{PrimitiveType as h,Usage as m,DataType as u}from\"../../../webgl/enums.js\";const l=t=>{switch(t.BYTES_PER_ELEMENT){case 1:return u.UNSIGNED_BYTE;case 2:return u.UNSIGNED_SHORT;case 4:return u.UNSIGNED_INT;default:throw new e(\"Cannot get DataType of array\")}},y=(e,t,r,o)=>{let n=0;for(let s=1;s<r;s++){const r=e[2*(t+s-1)],o=e[2*(t+s-1)+1];n+=(e[2*(t+s)]-r)*(e[2*(t+s)+1]+o)}return o?n>0:n<0},x=({coords:e,lengths:t},o)=>{const n=[];for(let s=0,i=0;s<t.length;i+=t[s],s+=1){const c=i,a=[];for(;s<t.length-1&&y(e,i+t[s],t[s+1],o);s+=1,i+=t[s])a.push(i+t[s]-c);const f=e.slice(2*c,2*(i+t[s])),h=r(f,a,2);for(const e of h)n.push(e+c)}return n};class g{constructor(e,t,r,o=!1){this._cache={},this.vertices=e,this.indices=t,this.primitiveType=r,this.isMapSpace=o}static fromRect({x:e,y:t,width:r,height:o}){const n=e,s=t,i=n+r,c=s+o;return g.fromScreenExtent({xmin:n,ymin:s,xmax:i,ymax:c})}static fromPath(e){const t=s(new c,e.path,!1,!1),r=t.coords,o=new Uint32Array(x(t,!0)),n=new Uint32Array(r.length/2);for(let s=0;s<n.length;s++)n[s]=a(Math.floor(r[2*s]),Math.floor(r[2*s+1]));return new g({geometry:n},o,h.TRIANGLES)}static fromGeometry(r,o){const n=o.geometry?.type;switch(n){case\"polygon\":return g.fromPolygon(r,o.geometry);case\"extent\":return g.fromMapExtent(r,o.geometry);default:return t.getLogger(\"esri.views.2d.engine.webgl.Mesh2D\").error(new e(\"mapview-bad-type\",`Unable to create a mesh from type ${n}`,o)),g.fromRect({x:0,y:0,width:1,height:1})}}static fromPolygon(e,t){const r=i(new c,t,!1,!1),s=r.coords,f=new Uint32Array(x(r,!1)),m=new Uint32Array(s.length/2),u=n(),l=n();for(let n=0;n<m.length;n++)o(u,s[2*n],s[2*n+1]),e.toScreen(l,u),m[n]=a(Math.floor(l[0]),Math.floor(l[1]));return new g({geometry:m},f,h.TRIANGLES,!0)}static fromScreenExtent({xmin:e,xmax:t,ymin:r,ymax:o}){const n={geometry:new Uint32Array([a(e,r),a(t,r),a(e,o),a(e,o),a(t,r),a(t,o)])},s=new Uint32Array([0,1,2,3,4,5]);return new g(n,s,h.TRIANGLES)}static fromMapExtent(e,t){const[r,o]=e.toScreen([0,0],[t.xmin,t.ymin]),[n,s]=e.toScreen([0,0],[t.xmax,t.ymax]),i={geometry:new Uint32Array([a(r,o),a(n,o),a(r,s),a(r,s),a(n,o),a(n,s)])},c=new Uint32Array([0,1,2,3,4,5]);return new g(i,c,h.TRIANGLES)}destroy(){null!=this._cache.indexBuffer&&this._cache.indexBuffer.dispose();for(const e in this._cache.vertexBuffers)null!=this._cache.vertexBuffers[e]&&this._cache.vertexBuffers[e].dispose()}get elementType(){return l(this.indices)}getIndexBuffer(e,t=m.STATIC_DRAW){return this._cache.indexBuffer||(this._cache.indexBuffer=f.createIndex(e,t,this.indices)),this._cache.indexBuffer}getVertexBuffers(e,t=m.STATIC_DRAW){return this._cache.vertexBuffers||(this._cache.vertexBuffers=Object.keys(this.vertices).reduce(((r,o)=>({...r,[o]:f.createVertex(e,t,this.vertices[o])})),{})),this._cache.vertexBuffers}}export{g as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport e from\"../../../../core/Error.js\";import t from\"../../../../core/Logger.js\";import{watch as r}from\"../../../../core/reactiveUtils.js\";import{create as s}from\"../../../../core/libs/gl-matrix-2/factories/mat3f32.js\";import{DisplayObject as i}from\"../DisplayObject.js\";import o from\"./Mesh2D.js\";import{VertexArrayObject as h}from\"../../../webgl/VertexArrayObject.js\";const a=e=>parseFloat(e)/100;class c extends i{constructor(e,t){super(),this._clip=t,this._cache={},this.stage=e,this._handle=r((()=>t.version),(()=>this._invalidate())),this.ready()}static fromClipArea(e,t){return new c(e,t)}_destroyGL(){null!=this._cache.mesh&&(this._cache.mesh.destroy(),this._cache.mesh=null),null!=this._cache.vao&&(this._cache.vao.dispose(),this._cache.vao=null)}destroy(){this._destroyGL(),this._handle.remove()}getVAO(e,t,r,s){const[i,o]=t.size;if(\"geometry\"!==this._clip.type&&this._lastWidth===i&&this._lastHeight===o||(this._lastWidth=i,this._lastHeight=o,this._destroyGL()),null==this._cache.vao){const i=this._createMesh(t,this._clip),o=i.getIndexBuffer(e),a=i.getVertexBuffers(e);this._cache.mesh=i,this._cache.vao=new h(e,r,s,a,o)}return this._cache.vao}_createTransforms(){return{displayViewScreenMat3:s()}}_invalidate(){this._destroyGL(),this.requestRender()}_createScreenRect(e,t){const[r,s]=e.size,i=\"string\"==typeof t.left?a(t.left)*r:t.left,o=\"string\"==typeof t.right?a(t.right)*r:t.right,h=\"string\"==typeof t.top?a(t.top)*s:t.top,c=\"string\"==typeof t.bottom?a(t.bottom)*s:t.bottom,n=i,l=h;return{x:n,y:l,width:Math.max(r-o-n,0),height:Math.max(s-c-l,0)}}_createMesh(r,s){switch(s.type){case\"rect\":return o.fromRect(this._createScreenRect(r,s));case\"path\":return o.fromPath(s);case\"geometry\":return o.fromGeometry(r,s);default:return t.getLogger(\"esri.views.2d.engine.webgl.ClippingInfo\").error(new e(\"mapview-bad-type\",\"Unable to create ClippingInfo mesh from clip of type: ${clip.type}\")),o.fromRect({x:0,y:0,width:1,height:1})}}}export{c as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport\"../../../../core/has.js\";import{brushes as s}from\"../brushes.js\";import{Container as e}from\"../Container.js\";import r from\"./ClippingInfo.js\";import{WGLDrawPhase as i}from\"./enums.js\";class n extends e{set clips(s){super.clips=s,this._updateClippingInfo(s)}renderChildren(s){s.painter.setPipelineState(null),null==this._renderPasses&&(this._renderPasses=this.prepareRenderPasses(s.painter));for(const r of this._renderPasses)try{r.render(s)}catch(e){}}prepareRenderPasses(e){return[e.registerRenderPass({name:\"clip\",brushes:[s.clip],target:()=>this._clippingInfos,drawPhase:i.MAP|i.LABEL|i.LABEL_ALPHA|i.DEBUG|i.HIGHLIGHT})]}_updateClippingInfo(s){null!=this._clippingInfos&&(this._clippingInfos.forEach((s=>s.destroy())),this._clippingInfos=null),null!=s&&s.length&&(this._clippingInfos=s.items.map((s=>r.fromClipArea(this.stage,s)))),this.requestRender()}}export{n as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{textureBindingBitmap as e}from\"../definitions.js\";import t from\"../VertexStream.js\";import i from\"./WGLBrush.js\";import{TextureSamplingMode as s,BlendFactor as n,CompareFunction as a}from\"../../../../webgl/enums.js\";const r={nearest:{defines:[],samplingMode:s.NEAREST,mips:!1},bilinear:{defines:[],samplingMode:s.LINEAR,mips:!1},bicubic:{defines:[\"bicubic\"],samplingMode:s.LINEAR,mips:!1},trilinear:{defines:[],samplingMode:s.LINEAR_MIPMAP_LINEAR,mips:!0}},o=(e,t,i)=>{if(\"dynamic\"===i.samplingMode){const{state:i}=e,s=t.resolution/t.pixelRatio/i.resolution,n=Math.round(e.pixelRatio)!==e.pixelRatio,a=s>1.05||s<.95;return i.rotation||a||n||t.isSourceScaled||t.rotation?r.bilinear:r.nearest}return r[i.samplingMode]};class d extends i{constructor(){super(...arguments),this._desc={vsPath:\"raster/bitmap\",fsPath:\"raster/bitmap\",attributes:new Map([[\"a_pos\",0]])}}dispose(){this._quad&&this._quad.dispose()}prepareState({context:e}){e.setBlendingEnabled(!0),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!0)}draw(i,s){const{context:r,renderingOptions:d,painter:l,requestRender:c,allowDelayedRender:m}=i;if(!s.source||!s.isReady)return;const p=o(i,s,d),u=l.materialManager.getProgram(this._desc,p.defines);if(m&&null!=c&&!u.compiled)return void c();i.timeline.begin(this.name),\"additive\"===s.blendFunction?r.setBlendFunctionSeparate(n.ONE,n.ONE,n.ONE,n.ONE):r.setBlendFunctionSeparate(n.ONE,n.ONE_MINUS_SRC_ALPHA,n.ONE,n.ONE_MINUS_SRC_ALPHA),r.setStencilFunction(a.EQUAL,s.stencilRef,255),this._quad||(this._quad=new t(r,[0,0,1,0,0,1,1,1]));const{coordScale:f,computedOpacity:_,transforms:M}=s;s.setSamplingProfile(p),s.bind(i.context,e),r.useProgram(u),u.setUniformMatrix3fv(\"u_dvsMat3\",M.displayViewScreenMat3),u.setUniform1i(\"u_texture\",e),u.setUniform2fv(\"u_coordScale\",f),u.setUniform1f(\"u_opacity\",_),this._quad.draw(),i.timeline.end(this.name)}}export{d as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nclass t{constructor(){this.name=this.constructor.name||\"UnnamedBrush\",this.brushEffect=null}prepareState(t,r){}draw(t,r,s){}drawMany(t,r,s){for(const a of r)a.visible&&this.draw(t,a,s)}}export{t as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{fromValues as e}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import{Pos2b as r}from\"../DefaultVertexAttributeLayouts.js\";import t from\"./WGLBrush.js\";import{background as i}from\"../shaders/BackgroundPrograms.js\";import{BufferObject as s}from\"../../../../webgl/BufferObject.js\";import{StencilOperation as o,Face as a,CompareFunction as l,PrimitiveType as n,Usage as d}from\"../../../../webgl/enums.js\";import{createProgram as m}from\"../../../../webgl/ProgramTemplate.js\";import{VertexArrayObject as c}from\"../../../../webgl/VertexArrayObject.js\";class _ extends t{constructor(){super(...arguments),this._color=e(1,0,0,1),this._initialized=!1}dispose(){this._solidProgram&&(this._solidProgram.dispose(),this._solidProgram=null),this._solidVertexArrayObject&&(this._solidVertexArrayObject.dispose(),this._solidVertexArrayObject=null)}prepareState({context:e}){e.setDepthWriteEnabled(!1),e.setDepthTestEnabled(!1),e.setStencilTestEnabled(!0),e.setBlendingEnabled(!1),e.setColorMask(!1,!1,!1,!1),e.setStencilOp(o.KEEP,o.KEEP,o.REPLACE),e.setStencilWriteMask(255)}draw(e,r){const{context:t,requestRender:i,allowDelayedRender:s}=e;this._initialized||this._initialize(t),!s||null==i||this._solidProgram.compiled?(t.setStencilFunctionSeparate(a.FRONT_AND_BACK,l.GREATER,r.stencilRef,255),t.bindVAO(this._solidVertexArrayObject),t.useProgram(this._solidProgram),this._solidProgram.setUniformMatrix3fv(\"u_dvsMat3\",r.transforms.displayViewScreenMat3),this._solidProgram.setUniform2fv(\"u_coord_range\",[r.rangeX,r.rangeY]),this._solidProgram.setUniform1f(\"u_depth\",0),this._solidProgram.setUniform4fv(\"u_color\",this._color),t.drawArrays(n.TRIANGLE_STRIP,0,4),t.bindVAO()):i()}_initialize(e){if(this._initialized)return!0;const t=m(e,i);if(!t)return!1;const o=new Int8Array([0,0,1,0,0,1,1,1]),a=s.createVertex(e,d.STATIC_DRAW,o),l=new c(e,i.attributes,r,{geometry:a});return this._solidProgram=t,this._solidVertexArrayObject=l,this._initialized=!0,!0}}export{_ as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{fromValues as e}from\"../../../../../core/libs/gl-matrix-2/factories/vec4f32.js\";import{Pos2b as t}from\"../DefaultVertexAttributeLayouts.js\";import{FeatureTile as r}from\"../FeatureTile.js\";import o from\"./WGLBrush.js\";import{background as i}from\"../shaders/BackgroundPrograms.js\";import{tileInfo as s}from\"../shaders/TileInfoPrograms.js\";import{BufferObject as n}from\"../../../../webgl/BufferObject.js\";import{BlendFactor as l,PrimitiveType as a,Usage as f,TextureWrapMode as m,TextureSamplingMode as u}from\"../../../../webgl/enums.js\";import{createProgram as c}from\"../../../../webgl/ProgramTemplate.js\";import{Texture as d}from\"../../../../webgl/Texture.js\";import{TextureDescriptor as h}from\"../../../../webgl/TextureDescriptor.js\";import{VertexArrayObject as g}from\"../../../../webgl/VertexArrayObject.js\";const _=512,x=512,b=16,p=8,T=(x-2*p)/5;class y extends o{constructor(){super(...arguments),this._color=e(1,0,0,1)}dispose(){this._outlineProgram?.dispose(),this._outlineProgram=null,this._tileInfoProgram?.dispose(),this._tileInfoProgram=null,this._outlineVertexArrayObject?.dispose(),this._outlineVertexArrayObject=null,this._tileInfoVertexArrayObject?.dispose(),this._tileInfoVertexArrayObject=null,this._ctx=null}prepareState({context:e}){e.setBlendingEnabled(!0),e.setBlendFunctionSeparate(l.ONE,l.ONE_MINUS_SRC_ALPHA,l.ONE,l.ONE_MINUS_SRC_ALPHA),e.setColorMask(!0,!0,!0,!0),e.setStencilWriteMask(0),e.setStencilTestEnabled(!1)}draw(e,t){const{context:o,requestRender:i,allowDelayedRender:s}=e;if(!t.isReady&&t instanceof r&&t.hasData)return;if(this._loadWGLResources(o),s&&null!=i&&(!this._outlineProgram.compiled||!this._tileInfoProgram.compiled))return void i();o.bindVAO(this._outlineVertexArrayObject),o.useProgram(this._outlineProgram),this._outlineProgram.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),this._outlineProgram.setUniform2f(\"u_coord_range\",t.rangeX,t.rangeY),this._outlineProgram.setUniform1f(\"u_depth\",0),this._outlineProgram.setUniform4fv(\"u_color\",this._color),o.drawArrays(a.LINE_STRIP,0,4);const n=this._getTexture(o,t);n?(o.bindVAO(this._tileInfoVertexArrayObject),o.useProgram(this._tileInfoProgram),o.bindTexture(n,0),this._tileInfoProgram.setUniformMatrix3fv(\"u_dvsMat3\",t.transforms.displayViewScreenMat3),this._tileInfoProgram.setUniform1f(\"u_depth\",0),this._tileInfoProgram.setUniform2f(\"u_coord_ratio\",t.rangeX/t.width,t.rangeY/t.height),this._tileInfoProgram.setUniform2f(\"u_delta\",0,0),this._tileInfoProgram.setUniform2f(\"u_dimensions\",n.descriptor.width,n.descriptor.height),o.drawArrays(a.TRIANGLE_STRIP,0,4),o.bindVAO()):o.bindVAO()}_loadWGLResources(e){if(this._outlineProgram&&this._tileInfoProgram)return;const r=c(e,i),o=c(e,s),l=new Int8Array([0,0,1,0,1,1,0,1]),a=n.createVertex(e,f.STATIC_DRAW,l),m=new g(e,i.attributes,t,{geometry:a}),u=new Int8Array([0,0,1,0,0,1,1,1]),d=n.createVertex(e,f.STATIC_DRAW,u),h=new g(e,s.attributes,t,{geometry:d});this._outlineProgram=r,this._tileInfoProgram=o,this._outlineVertexArrayObject=m,this._tileInfoVertexArrayObject=h}_getTexture(e,t){if(!this._ctx){const e=document.createElement(\"canvas\");e.width=_,e.height=x,this._ctx=e.getContext(\"2d\")}if(!t.tileDebugInfoTexture){const r=new h;r.wrapMode=m.CLAMP_TO_EDGE,r.samplingMode=u.LINEAR,r.isImmutable=!0,r.width=_,r.height=x,t.tileDebugInfoTexture=new d(e,r)}const r=this._ctx;r.clearRect(0,0,r.canvas.width,r.canvas.height),r.textAlign=\"left\",r.textBaseline=\"top\",r.font=b-2+\"px sans-serif\",r.lineWidth=2,r.fillStyle=\"white\",r.strokeStyle=\"black\";const{debugSlot:o}=t;let i=p+T*o;const s=`${o}) ${t.key.id} (${t.constructor.name})`;r.strokeText(s,p,i),r.fillText(s,p,i),i+=b;const{debugInfo:n}=t;if(n){const{length:e,minOrderedLength:t,minUnorderedLength:o,triangleCount:s}=n.display;if(e>0){const t=`Length: ${e}`;r.strokeText(t,p,i),r.fillText(t,p,i),i+=b}if(t){const e=`Min ordered length: ${t}`;r.strokeText(e,p,i),r.fillText(e,p,i),i+=b}if(o){const e=`Min unordered length: ${o}`;r.strokeText(e,p,i),r.fillText(e,p,i),i+=b}if(s>0){s>1e5&&(r.fillStyle=\"red\",r.strokeStyle=\"white\");const e=`Triangle count: ${s}`;r.strokeText(e,p,i),r.fillText(e,p,i),i+=b}const{bytesUsed:l,bytesReserved:a}=n.memory;if(r.fillStyle=\"white\",r.strokeStyle=\"black\",l>0||a>0){const e=`Memory usage: ${l} of ${a} bytes`;r.strokeText(e,p,i),r.fillText(e,p,i),i+=b}}return t.tileDebugInfoTexture.setData(r.canvas),t.tileDebugInfoTexture}}export{y as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nclass t{constructor(a){if(this.next=null,!Array.isArray(a))return void(this.data=a);this.data=a[0];let e=this;for(let n=1;n<a.length;n++)e.next=new t([a[n]]),e=e.next}*values(){let t=this;for(;t;)yield t.data,t=t.next}forEach(t){let a=this;for(;a;)t(a.data),a=a.next}find(t){return t(this.data)?this:this.next?.find(t)}max(t,a=this){const e=t(this.data)>t(a.data)?this:a;return this.next?this.next.max(t,e):e}remove(t,a=null){return this===t?a?(a.next=this.next,a):this.next:this.next?.remove(t,this)??null}get last(){return this.next?this.next.last:this}}class a{constructor(a){this._head=null,null!=a&&(this._head=new t(a))}get head(){return this._head}maxAvailableSpace(){if(null==this._head)return 0;const t=this._head.max((t=>t.end-t.start));return t.data.end-t.data.start}firstFit(t){if(null==this._head)return null;let a=null,e=this._head;for(;e;){const n=e.data.end-e.data.start;if(n===t)return a?a.next=e.next:this._head=e.next,e.data.start;if(n>t){const a=e.data.start;return e.data.start+=t,a}a=e,e=e.next}return null}free(a,e){const n=a+e;if(null==this._head){const e=new t({start:a,end:n});return void(this._head=e)}if(n<=this._head.data.start){if(n===this._head.data.start)return void(this._head.data.start-=e);const r=new t({start:a,end:n});return r.next=this._head,void(this._head=r)}let r=this._head,s=r.next;for(;s;){if(s.data.start>=n){if(r.data.end===a){if(r.data.end+=e,r.data.end===s.data.start){const t=s.data.end-s.data.start;return r.data.end+=t,void(r.next=s.next)}return}if(s.data.start===n)return void(s.data.start-=e);const d=new t({start:a,end:n});return d.next=r.next,void(r.next=d)}r=s,s=s.next}if(a===r.data.end)return void(r.data.end+=e);const d=new t({start:a,end:n});r.next=d}clear(){this._head=null}}export{a as FreeList,t as List};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as r}from\"./sources/resolver.js\";const e={shaders:{vertexShader:r(\"background/background.vert\"),fragmentShader:r(\"background/background.frag\")},attributes:new Map([[\"a_pos\",0]])};export{e as background};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{resolveIncludes as e}from\"./sources/resolver.js\";const r={shaders:{vertexShader:e(\"tileInfo/tileInfo.vert\"),fragmentShader:e(\"tileInfo/tileInfo.frag\")},attributes:new Map([[\"a_pos\",0]])};export{r as tileInfo};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport r from\"./shaderRepository.js\";import{ShaderCompiler as e}from\"../../../../../webgl/ShaderCompiler.js\";function o(r){return function(e){let o=r;return e.split(\"/\").forEach((r=>{o&&(o=o[r])})),o}}const t=new e(o(r));function n(r){return t.resolveIncludes(r)}export{n as resolveIncludes};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nconst e={background:{\"background.frag\":\"uniform lowp vec4 u_color;\\nvoid main() {\\ngl_FragColor = u_color;\\n}\",\"background.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_coord_range;\\nuniform mediump float u_depth;\\nvoid main() {\\nvec3 v_pos = u_dvsMat3 * vec3(u_coord_range * a_pos, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\n}\"},bitBlit:{\"bitBlit.frag\":\"uniform lowp sampler2D u_tex;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nlowp vec4 color = texture2D(u_tex, v_uv);\\ngl_FragColor = color * u_opacity;\\n}\",\"bitBlit.vert\":\"attribute vec2 a_pos;\\nattribute vec2 a_tex;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_pos , 0.0, 1.0);\\nv_uv = a_tex;\\n}\"},blend:{\"blend.frag\":\"precision mediump float;\\nuniform sampler2D u_layerTexture;\\nuniform lowp float u_opacity;\\nuniform lowp float u_inFadeOpacity;\\n#ifndef NORMAL\\nuniform sampler2D u_backbufferTexture;\\n#endif\\nvarying mediump vec2 v_uv;\\nfloat rgb2v(in vec3 c) {\\nreturn max(c.x, max(c.y, c.z));\\n}\\nvec3 rgb2hsv(in vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(in vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec3 tint(in vec3 Cb, in vec3 Cs) {\\nfloat vIn = rgb2v(Cb);\\nvec3 hsvTint = rgb2hsv(Cs);\\nvec3 hsvOut = vec3(hsvTint.x, hsvTint.y, vIn * hsvTint.z);\\nreturn hsv2rgb(hsvOut);\\n}\\nfloat overlay(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (1.0 - 2.0 * (1.0 - Cs ) * (1.0 - Cb)) + step(0.5, Cs) * (2.0 * Cs * Cb);\\n}\\nfloat colorDodge(in float Cb, in float Cs) {\\nreturn (Cb == 0.0) ? 0.0 : (Cs == 1.0) ? 1.0 : min(1.0, Cb / (1.0 - Cs));\\n}\\nfloat colorBurn(in float Cb, in float Cs) {\\nreturn (Cb == 1.0) ? 1.0 : (Cs == 0.0) ? 0.0 : 1.0 - min(1.0, (1.0 - Cb) / Cs);\\n}\\nfloat hardLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * (2.0 * Cs * Cb) + step(0.5, Cs) * (1.0 - 2.0 * (1.0 - Cs) * (1.0 - Cb));\\n}\\nfloat reflectBlend(in float Cb, in float Cs) {\\nreturn (Cs == 1.0) ? Cs : min(Cb * Cb / (1.0 - Cs), 1.0);\\n}\\nfloat softLight(in float Cb, in float Cs) {\\nif (Cs <= 0.5) {\\nreturn Cb - (1.0 - 2.0 * Cs) * Cb * (1.0 - Cb);\\n}\\nif (Cb <= 0.25) {\\nreturn Cb + (2.0 * Cs - 1.0) * Cb * ((16.0 * Cb - 12.0) * Cb + 3.0);\\n}\\nreturn Cb + (2.0 * Cs - 1.0) * (sqrt(Cb) - Cb);\\n}\\nfloat vividLight(in float Cb, in float Cs) {\\nreturn (1.0 - step(0.5, Cs)) * colorBurn(Cb, 2.0 * Cs) + step(0.5, Cs) * colorDodge(Cb, (2.0 * (Cs - 0.5)));\\n}\\nfloat minv3(in vec3 c) {\\nreturn min(min(c.r, c.g), c.b);\\n}\\nfloat maxv3(in vec3 c) {\\nreturn max(max(c.r, c.g), c.b);\\n}\\nfloat lumv3(in vec3 c) {\\nreturn dot(c, vec3(0.3, 0.59, 0.11));\\n}\\nfloat satv3(vec3 c) {\\nreturn maxv3(c) - minv3(c);\\n}\\nvec3 clipColor(vec3 color) {\\nfloat lum = lumv3(color);\\nfloat mincol = minv3(color);\\nfloat maxcol = maxv3(color);\\nif (mincol < 0.0) {\\ncolor = lum + ((color - lum) * lum) / (lum - mincol);\\n}\\nif (maxcol > 1.0) {\\ncolor = lum + ((color - lum) * (1.0 - lum)) / (maxcol - lum);\\n}\\nreturn color;\\n}\\nvec3 setLum(vec3 cbase, vec3 clum) {\\nfloat lbase = lumv3(cbase);\\nfloat llum = lumv3(clum);\\nfloat ldiff = llum - lbase;\\nvec3 color = cbase + vec3(ldiff);\\nreturn clipColor(color);\\n}\\nvec3 setLumSat(vec3 cbase, vec3 csat, vec3 clum)\\n{\\nfloat minbase = minv3(cbase);\\nfloat sbase = satv3(cbase);\\nfloat ssat = satv3(csat);\\nvec3 color;\\nif (sbase > 0.0) {\\ncolor = (cbase - minbase) * ssat / sbase;\\n} else {\\ncolor = vec3(0.0);\\n}\\nreturn setLum(color, clum);\\n}\\nvoid main() {\\nvec4 src = texture2D(u_layerTexture, v_uv);\\n#ifdef NORMAL\\ngl_FragColor = src *  u_opacity;\\n#else\\nvec4 dst = texture2D(u_backbufferTexture, v_uv);\\nvec3 Cs = src.a == 0.0 ? src.rgb : vec3(src.rgb / src.a);\\nvec3 Cb = dst.a == 0.0 ? dst.rgb : vec3(dst.rgb / dst.a);\\nfloat as = u_opacity * src.a;\\nfloat ab = dst.a;\\n#ifdef DESTINATION_OVER\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb, as + ab - as * ab);\\n#endif\\n#ifdef SOURCE_IN\\nvec4 color = vec4(as * Cs * ab, as * ab);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef DESTINATION_IN\\nvec4 color = vec4(ab * Cb * as, ab * as);\\nvec4 fadeColor = (1.0 - u_opacity) * u_inFadeOpacity * vec4(ab * Cb, ab);\\ngl_FragColor = color + fadeColor;\\n#endif\\n#ifdef SOURCE_OUT\\ngl_FragColor = vec4(as * Cs * (1.0 - ab), as * (1.0 - ab));\\n#endif\\n#ifdef DESTINATION_OUT\\ngl_FragColor = vec4(ab * Cb * (1.0 - as), ab * (1.0 - as));\\n#endif\\n#ifdef SOURCE_ATOP\\ngl_FragColor = vec4(as * Cs * ab + ab * Cb * (1.0 - as), ab);\\n#endif\\n#ifdef DESTINATION_ATOP\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * as, as);\\n#endif\\n#ifdef XOR\\ngl_FragColor = vec4(as * Cs * (1.0 - ab) + ab * Cb * (1.0 - as),\\nas * (1.0 - ab) + ab * (1.0 - as));\\n#endif\\n#ifdef MULTIPLY\\ngl_FragColor = vec4(as * Cs * ab * Cb + (1.0 - ab) * as * Cs + (1.0 - as) * ab * Cb,\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SCREEN\\ngl_FragColor = vec4((Cs + Cb - Cs * Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef OVERLAY\\nvec3 f = vec3(overlay(Cb.r, Cs.r), overlay(Cb.g, Cs.g), overlay(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DARKEN\\ngl_FragColor = vec4(min(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LIGHTER\\ngl_FragColor = vec4(as * Cs + ab * Cb, as + ab);\\n#endif\\n#ifdef LIGHTEN\\ngl_FragColor = vec4(max(Cs, Cb) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_DODGE\\nvec3 f = clamp(vec3(colorDodge(Cb.r, Cs.r), colorDodge(Cb.g, Cs.g), colorDodge(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR_BURN\\nvec3 f = vec3(colorBurn(Cb.r, Cs.r), colorBurn(Cb.g, Cs.g), colorBurn(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HARD_LIGHT\\nvec3 f = vec3(hardLight(Cb.r, Cs.r), hardLight(Cb.g, Cs.g), hardLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SOFT_LIGHT\\nvec3 f = vec3(softLight(Cb.r, Cs.r), softLight(Cb.g, Cs.g), softLight(Cb.b, Cs.b));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef DIFFERENCE\\ngl_FragColor = vec4(abs(Cb - Cs) * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef EXCLUSION\\nvec3 f = Cs + Cb - 2.0 * Cs * Cb;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef INVERT\\ngl_FragColor = vec4((1.0 - Cb) * as * ab + Cb * ab * (1.0 - as), ab);\\n#endif\\n#ifdef VIVID_LIGHT\\nvec3 f = vec3(clamp(vividLight(Cb.r, Cs.r), 0.0, 1.0),\\nclamp(vividLight(Cb.g, Cs.g), 0.0, 1.0),\\nclamp(vividLight(Cb.b, Cs.b), 0.0, 1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef HUE\\nvec3 f = setLumSat(Cs,Cb,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef SATURATION\\nvec3 f = setLumSat(Cb,Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef COLOR\\nvec3 f = setLum(Cs,Cb);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef LUMINOSITY\\nvec3 f = setLum(Cb,Cs);\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef PLUS\\ngl_FragColor = clamp(vec4(src.r + Cb.r, src.g + Cb.g, src.b + Cb.b, as + ab), 0.0, 1.0);\\n#endif\\n#ifdef MINUS\\ngl_FragColor = vec4(clamp(vec3(Cb.r - src.r, Cb.g - src.g, Cb.b - src.b), 0.0, 1.0), ab * as);\\n#endif\\n#ifdef AVERAGE\\nvec3 f = (Cb + Cs) / 2.0;\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#ifdef REFLECT\\nvec3 f = clamp(vec3(reflectBlend(Cb.r, Cs.r),\\nreflectBlend(Cb.g, Cs.g),\\nreflectBlend(Cb.b, Cs.b)), vec3(0.0), vec3(1.0));\\ngl_FragColor = vec4(f * as * ab + Cs * as * (1.0 - ab) + Cb * ab *(1.0 - as),\\nas + ab * (1.0 - as));\\n#endif\\n#endif\\n}\",\"blend.vert\":\"attribute vec2 a_position;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\ngl_Position = vec4(a_position , 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"},debug:{overlay:{\"overlay.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvoid main(void) {\\ngl_FragColor = v_color;\\n}\",\"overlay.vert\":\"attribute vec3 a_PositionAndFlags;\\nuniform mat3 u_dvsMat3;\\nuniform vec4 u_colors[4];\\nuniform float u_opacities[4];\\nvarying vec4 v_color;\\nvoid main(void) {\\nvec2 position = a_PositionAndFlags.xy;\\nfloat flags = a_PositionAndFlags.z;\\nint colorIndex = int(mod(flags, 4.0));\\nvec4 color;\\nfor (int i = 0; i < 4; i++) {\\ncolor = u_colors[i];\\nif (i == colorIndex) {\\nbreak;\\n}\\n}\\nint opacityIndex = int(mod(floor(flags / 4.0), 4.0));\\nfloat opacity;\\nfor (int i = 0; i < 4; i++) {\\nopacity = u_opacities[i];\\nif (i == opacityIndex) {\\nbreak;\\n}\\n}\\nv_color = color * opacity;\\ngl_Position = vec4((u_dvsMat3 * vec3(position, 1.0)).xy, 0.0, 1.0);\\n}\"}},dot:{dot:{\"dot.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nuniform highp float u_tileZoomFactor;\\nvoid main()\\n{\\nfloat dist = length(gl_PointCoord - vec2(.5, .5)) * 2.;\\nfloat alpha = smoothstep(0., 1., v_invEdgeRatio * (dist - v_dotRatio) + 1.);\\ngl_FragColor = v_color * alpha;\\n}\",\"dot.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nuniform sampler2D u_texture;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp float u_tileZoomFactor;\\nuniform highp float u_dotSize;\\nuniform highp float u_pixelRatio;\\nvarying vec2 v_pos;\\nvarying vec4 v_color;\\nvarying float v_dotRatio;\\nvarying float v_invEdgeRatio;\\nconst float EPSILON = 0.000001;\\nvoid main()\\n{\\nmat3 tileToTileTexture = mat3(  1., 0., 0.,\\n0., -1., 0.,\\n0., 1., 1.  );\\nvec3 texCoords = tileToTileTexture * vec3(a_pos.xy / 512., 1.);\\nv_color = texture2D(u_texture, texCoords.xy);\\nfloat smoothEdgeWidth = max(u_dotSize / 2., 1.) ;\\nfloat z = 0.;\\nz += 2.0 * step(v_color.a, EPSILON);\\ngl_PointSize = (smoothEdgeWidth + u_dotSize);\\ngl_Position = vec4((u_dvsMat3 * vec3(a_pos + .5, 1.)).xy, z, 1.);\\nv_dotRatio = u_dotSize / gl_PointSize;\\nv_invEdgeRatio = -1. / ( smoothEdgeWidth / gl_PointSize );\\ngl_PointSize  *= (u_pixelRatio * u_tileZoomFactor);\\n}\"}},filtering:{\"bicubic.glsl\":\"vec4 computeWeights(float v) {\\nfloat b = 1.0 / 6.0;\\nfloat v2 = v * v;\\nfloat v3 = v2 * v;\\nfloat w0 = b * (-v3 + 3.0 * v2 - 3.0 * v + 1.0);\\nfloat w1 = b * (3.0 * v3  - 6.0 * v2 + 4.0);\\nfloat w2 = b * (-3.0 * v3 + 3.0 * v2 + 3.0 * v + 1.0);\\nfloat w3 = b * v3;\\nreturn vec4(w0, w1, w2, w3);\\n}\\nvec4 bicubicOffsetsAndWeights(float v) {\\nvec4 w = computeWeights(v);\\nfloat g0 = w.x + w.y;\\nfloat g1 = w.z + w.w;\\nfloat h0 = 1.0 - (w.y / g0) + v;\\nfloat h1 = 1.0 + (w.w / g1) - v;\\nreturn vec4(h0, h1, g0, g1);\\n}\\nvec4 sampleBicubicBSpline(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 eX = vec2(1.0 / texSize.x, 0.0);\\nvec2 eY = vec2(0.0, 1.0 / texSize.y);\\nvec2 texel = coords * texSize - 0.5;\\nvec3 hgX = bicubicOffsetsAndWeights(fract(texel).x).xyz;\\nvec3 hgY = bicubicOffsetsAndWeights(fract(texel).y).xyz;\\nvec2 coords10 = coords + hgX.x * eX;\\nvec2 coords00 = coords - hgX.y * eX;\\nvec2 coords11 = coords10 + hgY.x * eY;\\nvec2 coords01 = coords00 + hgY.x * eY;\\ncoords10 = coords10 - hgY.y * eY;\\ncoords00 = coords00 - hgY.y * eY;\\nvec4 color00 = texture2D(sampler, coords00);\\nvec4 color10 = texture2D(sampler, coords10);\\nvec4 color01 = texture2D(sampler, coords01);\\nvec4 color11 = texture2D(sampler, coords11);\\ncolor00 = mix(color00, color01, hgY.z);\\ncolor10 = mix(color10, color11, hgY.z);\\ncolor00 = mix(color00, color10, hgX.z);\\nreturn color00;\\n}\",\"bilinear.glsl\":\"vec4 sampleBilinear(sampler2D sampler, vec2 coords, vec2 texSize) {\\nvec2 texelStart = floor(coords * texSize);\\nvec2 coord0 = texelStart / texSize;\\nvec2 coord1 = (texelStart +  vec2(1.0, 0.0)) / texSize;\\nvec2 coord2 = (texelStart +  vec2(0.0, 1.0)) / texSize;\\nvec2 coord3 = (texelStart +  vec2(1.0, 1.0)) / texSize;\\nvec4 color0 = texture2D(sampler, coord0);\\nvec4 color1 = texture2D(sampler, coord1);\\nvec4 color2 = texture2D(sampler, coord2);\\nvec4 color3 = texture2D(sampler, coord3);\\nvec2 blend = fract(coords * texSize);\\nvec4 color01 = mix(color0, color1, blend.x);\\nvec4 color23 = mix(color2, color3, blend.x);\\nvec4 color = mix(color01, color23, blend.y);\\n#ifdef NNEDGE\\nfloat alpha = floor(color0.a * color1.a * color2.a * color3.a + 0.5);\\ncolor = color * alpha + (1.0 - alpha) * texture2D(sampler, coords);\\n#endif\\nreturn color;\\n}\",\"epx.glsl\":\"vec4 sampleEPX(sampler2D sampler, float size, vec2 coords, vec2 texSize) {\\nvec2 invSize = 1.0 / texSize;\\nvec2 texel = coords * texSize;\\nvec2 texel_i = floor(texel);\\nvec2 texel_frac = fract(texel);\\nvec4 colorP = texture2D(sampler, texel_i * invSize);\\nvec4 colorP1 = vec4(colorP);\\nvec4 colorP2 = vec4(colorP);\\nvec4 colorP3 = vec4(colorP);\\nvec4 colorP4 = vec4(colorP);\\nvec4 colorA = texture2D(sampler, (texel_i - vec2(0.0, 1.0)) * invSize);\\nvec4 colorB = texture2D(sampler, (texel_i + vec2(1.0, 0.0)) * invSize);\\nvec4 colorC = texture2D(sampler, (texel_i - vec2(1.0, 0.0)) * invSize);\\nvec4 colorD = texture2D(sampler, (texel_i + vec2(0.0, 1.0)) * invSize);\\nif (colorC == colorA && colorC != colorD && colorA != colorB) {\\ncolorP1 = colorA;\\n}\\nif (colorA == colorB && colorA != colorC && colorB != colorD) {\\ncolorP2 = colorB;\\n}\\nif (colorD == colorC && colorD != colorB && colorC != colorA) {\\ncolorP3 = colorC;\\n}\\nif (colorB == colorD && colorB != colorA && colorD != colorC) {\\ncolorP4 = colorD;\\n}\\nvec4 colorP12 = mix(colorP1, colorP2, texel_frac.x);\\nvec4 colorP34 = mix(colorP1, colorP2, texel_frac.x);\\nreturn mix(colorP12, colorP34, texel_frac.y);\\n}\"},fx:{integrate:{\"integrate.frag\":\"precision mediump float;\\nuniform lowp sampler2D u_sourceTexture;\\nuniform lowp sampler2D u_maskTexture;\\nuniform mediump float u_zoomLevel;\\nuniform highp float u_timeDelta;\\nuniform highp float u_animationTime;\\nvarying highp vec2 v_texcoord;\\n#include <materials/utils.glsl>\\nvoid main()\\n{\\n#ifdef DELTA\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\nvec4 data0 = texture2D(u_maskTexture, v_texcoord);\\nfloat flags = data0.r * 255.0;\\nfloat groupMinZoom = data0.g * 255.0;\\nfloat wouldClip = float(groupMinZoom == 0.);\\nfloat direction = wouldClip * 1.0 + (1.0 - wouldClip) * -1.0;\\nfloat dt = u_timeDelta / max(u_animationTime, 0.0001);\\nvec4 nextState = vec4(texel + direction * dt);\\ngl_FragColor =  vec4(nextState);\\n#elif defined(UPDATE)\\nvec4 texel = texture2D(u_sourceTexture, v_texcoord);\\ngl_FragColor = texel;\\n#endif\\n}\",\"integrate.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 0.0, 1.0);\\n}\"}},heatmap:{heatmapResolve:{\"heatmapResolve.frag\":\"precision highp float;\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 4.0\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform sampler2D u_texture;\\nuniform sampler2D u_gradient;\\nuniform vec2 u_densityMinAndInvRange;\\nuniform float u_densityNormalization;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 data = texture2D(u_texture, v_uv);\\nfloat density = data.r * COMPRESSION_FACTOR;\\ndensity *= u_densityNormalization;\\ndensity = (density - u_densityMinAndInvRange.x) * u_densityMinAndInvRange.y;\\nvec4 color = texture2D(u_gradient, vec2(density, 0.5));\\ngl_FragColor = vec4(color.rgb * color.a, color.a);\\n}\",\"heatmapResolve.vert\":\"precision highp float;\\nattribute vec2 a_pos;\\nvarying vec2 v_uv;\\nvoid main() {\\nv_uv = a_pos;\\ngl_Position = vec4(a_pos * 2.0 - 1.0, 1., 1.);\\n}\"}},highlight:{\"blur.frag\":\"varying mediump vec2 v_texcoord;\\nuniform mediump vec4 u_direction;\\nuniform mediump mat4 u_channelSelector;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_texture;\\nmediump float gauss1(mediump vec2 dir) {\\nreturn exp(-dot(dir, dir) / (2.0 * u_sigma * u_sigma));\\n}\\nmediump vec4 selectChannel(mediump vec4 sample) {\\nreturn u_channelSelector * sample;\\n}\\nvoid accumGauss1(mediump float i, inout mediump float tot, inout mediump float weight) {\\nmediump float w = gauss1(i * u_direction.xy);\\ntot += selectChannel(texture2D(u_texture, v_texcoord + i * u_direction.zw))[3] * w;\\nweight += w;\\n}\\nvoid main(void) {\\nmediump float tot = 0.0;\\nmediump float weight = 0.0;\\naccumGauss1(-5.0, tot, weight);\\naccumGauss1(-4.0, tot, weight);\\naccumGauss1(-3.0, tot, weight);\\naccumGauss1(-2.0, tot, weight);\\naccumGauss1(-1.0, tot, weight);\\naccumGauss1(0.0, tot, weight);\\naccumGauss1(1.0, tot, weight);\\naccumGauss1(2.0, tot, weight);\\naccumGauss1(3.0, tot, weight);\\naccumGauss1(4.0, tot, weight);\\naccumGauss1(5.0, tot, weight);\\ngl_FragColor = vec4(0.0, 0.0, 0.0, tot / weight);\\n}\",\"highlight.frag\":\"varying mediump vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform mediump float u_sigma;\\nuniform sampler2D u_shade;\\nuniform mediump vec2 u_minMaxDistance;\\nmediump float estimateDistance() {\\nmediump float y = texture2D(u_texture, v_texcoord)[3];\\nconst mediump float y0 = 0.5;\\nmediump float m0 = 1.0 / (sqrt(2.0 * 3.1415) * u_sigma);\\nmediump float d = (y - y0) / m0;\\nreturn d;\\n}\\nmediump vec4 shade(mediump float d) {\\nmediump float mappedDistance = (d - u_minMaxDistance.x) / (u_minMaxDistance.y - u_minMaxDistance.x);\\nmappedDistance = clamp(mappedDistance, 0.0, 1.0);\\nreturn texture2D(u_shade, vec2(mappedDistance, 0.5));\\n}\\nvoid main(void) {\\nmediump float d = estimateDistance();\\ngl_FragColor = shade(d);\\n}\",\"textured.vert\":\"attribute mediump vec2 a_position;\\nattribute mediump vec2 a_texcoord;\\nvarying mediump vec2 v_texcoord;\\nvoid main(void) {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},magnifier:{\"magnifier.frag\":\"uniform lowp vec4 u_background;\\nuniform mediump sampler2D u_readbackTexture;\\nuniform mediump sampler2D u_maskTexture;\\nuniform mediump sampler2D u_overlayTexture;\\nuniform bool u_maskEnabled;\\nuniform bool u_overlayEnabled;\\nvarying mediump vec2 v_texCoord;\\nconst lowp float barrelFactor = 1.1;\\nlowp vec2 barrel(lowp vec2 uv) {\\nlowp vec2 uvn = uv * 2.0 - 1.0;\\nif (uvn.x == 0.0 && uvn.y == 0.0) {\\nreturn vec2(0.5, 0.5);\\n}\\nlowp float theta = atan(uvn.y, uvn.x);\\nlowp float r = pow(length(uvn), barrelFactor);\\nreturn r * vec2(cos(theta), sin(theta)) * 0.5 + 0.5;\\n}\\nvoid main(void)\\n{\\nlowp vec4 color = texture2D(u_readbackTexture, barrel(v_texCoord));\\ncolor = (color + (1.0 - color.a) * u_background);\\nlowp float mask = u_maskEnabled ? texture2D(u_maskTexture, v_texCoord).a : 1.0;\\ncolor *= mask;\\nlowp vec4 overlayColor = u_overlayEnabled ? texture2D(u_overlayTexture, v_texCoord) : vec4(0);\\ngl_FragColor = overlayColor + (1.0 - overlayColor.a) * color;\\n}\",\"magnifier.vert\":\"precision mediump float;\\nattribute mediump vec2 a_pos;\\nuniform mediump vec4 u_drawPos;\\nvarying mediump vec2 v_texCoord;\\nvoid main(void)\\n{\\nv_texCoord = a_pos;\\ngl_Position = vec4(u_drawPos.xy + vec2(a_pos - 0.5) * u_drawPos.zw, 0.0, 1.0);\\n}\"},materials:{\"attributeData.glsl\":\"uniform highp sampler2D filterFlags;\\nuniform highp sampler2D animation;\\nuniform highp sampler2D gpgpu;\\nuniform highp sampler2D visualVariableData;\\nuniform highp sampler2D dataDriven0;\\nuniform highp sampler2D dataDriven1;\\nuniform highp sampler2D dataDriven2;\\nuniform float size;\\nhighp vec2 getAttributeDataCoords(in highp vec3 id) {\\nhighp vec3  texel = unpackDisplayIdTexel(id);\\nhighp float u32 = float(int(texel.r) + int(texel.g) * 256 + int(texel.b) * 256 * 256);\\nhighp float col = mod(u32, size);\\nhighp float row = (u32 - col) / size;\\nhighp float u = col / size;\\nhighp float v = row / size;\\nreturn vec2(u, v);\\n}\\nhighp vec2 getAttributeDataTextureCoords(in highp vec3 id) {\\nreturn (getAttributeDataCoords(id) * 2.0) - 1.0 + (.5 / vec2(size));\\n}\\nhighp vec4 getFilterData(in highp vec3 id) {\\nvec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(filterFlags, coords);\\n}\\nhighp vec4 getAnimation(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(animation, coords);\\n}\\nhighp vec4 getVisualVariableData(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(visualVariableData, coords);\\n}\\nhighp vec4 getDataDriven0(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(dataDriven0, coords);\\n}\\nhighp vec4 getDataDriven1(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(dataDriven1, coords);\\n}\\nhighp vec4 getGPGPU(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(gpgpu, coords);\\n}\\nhighp vec4 getDataDriven2(in highp vec3 id) {\\nhighp vec2 coords = getAttributeDataCoords(id);\\nreturn texture2D(dataDriven2, coords);\\n}\\nfloat u88VVToFloat(in vec2 v) {\\nbool isMagic = v.x == 255.0 && v.y == 255.0;\\nif (isMagic) {\\nreturn NAN_MAGIC_NUMBER;\\n}\\nreturn (v.x + v.y * float(0x100)) - 32768.0;\\n}\",\"barycentric.glsl\":\"float inTriangle(vec3 bary) {\\nvec3 absBary = abs(bary);\\nreturn step((absBary.x + absBary.y + absBary.z), 1.05);\\n}\\nvec3 xyToBarycentric(in vec2 pos, in vec2 v0,  in vec2 v1, in vec2 v2) {\\nmat3 xyToBarycentricMat3 = mat3(\\nv1.x * v2.y - v2.x * v1.y, v2.x * v0.y - v0.x * v2.y, v0.x * v1.y - v1.x * v0.y,\\nv1.y - v2.y, v2.y - v0.y, v0.y - v1.y,\\nv2.x - v1.x, v0.x - v2.x, v1.x - v0.x\\n);\\nfloat A2 = v0.x * (v1.y - v2.y) + v1.x * (v2.y - v0.y) + v2.x * (v0.y - v1.y);\\nreturn (1. / A2) * xyToBarycentricMat3 * vec3(1., pos);\\n}\",\"constants.glsl\":\"const float C_DEG_TO_RAD = 3.14159265359 / 180.0;\\nconst float C_256_TO_RAD = 3.14159265359 / 128.0;\\nconst float C_RAD_TO_DEG = 180.0 / 3.141592654;\\nconst float POSITION_PRECISION = 1.0 / 8.0;\\nconst float FILL_POSITION_PRECISION = 1.0 / 1.0;\\nconst float SOFT_EDGE_RATIO = 1.0;\\nconst float THIN_LINE_WIDTH_FACTOR = 1.1;\\nconst float THIN_LINE_HALF_WIDTH = 1.0;\\nconst float EXTRUDE_SCALE_PLACEMENT_PADDING = 1.0 / 4.0;\\nconst float OFFSET_PRECISION = 1.0 / 8.0;\\nconst float OUTLINE_SCALE = 1.0 / 5.0;\\nconst float SDF_FONT_SIZE = 24.0;\\nconst float MAX_SDF_DISTANCE = 8.0;\\nconst float PLACEMENT_PADDING = 8.0;\\nconst float EPSILON = 0.00001;\\nconst float EPSILON_HITTEST = 0.05;\\nconst int MAX_FILTER_COUNT = 2;\\nconst int ATTR_VV_SIZE = 0;\\nconst int ATTR_VV_COLOR = 1;\\nconst int ATTR_VV_OPACITY = 2;\\nconst int ATTR_VV_ROTATION = 3;\\nconst highp float NAN_MAGIC_NUMBER = 1e-30;\\nconst int BITSET_GENERIC_LOCK_COLOR = 1;\\nconst int BITSET_GENERIC_CONSIDER_ALPHA_ONLY = 4;\\nconst int BITSET_MARKER_ALIGNMENT_MAP = 0;\\nconst int BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE = 2;\\nconst int BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY = 3;\\nconst int BITSET_TYPE_FILL_OUTLINE = 0;\\nconst int BITSET_FILL_RANDOM_PATTERN_OFFSET = 2;\\nconst int BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR = 3;\\nconst int BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR = 5;\\nconst int BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR = 6;\\nconst int BITSET_LINE_SCALE_DASH = 2;\",fill:{\"common.glsl\":\"#include <materials/symbologyTypeUtils.glsl>\\n#ifdef PATTERN\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform lowp vec4 u_isActive[ 2 ];\\nuniform highp float u_dotValue;\\nuniform highp float u_tileDotsOverArea;\\nuniform highp float u_dotTextureDotCount;\\nuniform mediump float u_tileZoomFactor;\\n#endif\\nvarying highp vec3 v_id;\\nvarying lowp vec4 v_color;\\nvarying lowp float v_opacity;\\nvarying mediump vec4 v_aux1;\\n#ifdef PATTERN\\nvarying mediump vec2 v_tileTextureCoord;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvarying lowp float v_isOutline;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvarying highp vec2 v_dotTextureCoords;\\nvarying highp vec4 v_dotThresholds[ 2 ];\\n#endif\",\"fill.frag\":\"precision highp float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/fill/common.glsl>\\n#ifdef PATTERN\\nuniform lowp sampler2D u_texture;\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nuniform mediump mat4 u_dotColors[ 2 ];\\nuniform sampler2D u_dotTextures[ 2 ];\\nuniform vec4 u_dotBackgroundColor;\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\nlowp vec4 drawLine() {\\nfloat v_lineWidth = v_aux1.x;\\nvec2  v_normal    = v_aux1.yz;\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineWidth,\\nv_opacity,\\nv_id\\n);\\nreturn shadeLine(inputs);\\n}\\n#endif\\nlowp vec4 drawFill() {\\nlowp vec4 out_color = vec4(0.);\\n#ifdef HITTEST\\nout_color = v_color;\\n#elif defined(PATTERN)\\nmediump vec4 v_tlbr = v_aux1;\\nmediump vec2 normalizedTextureCoord = mod(v_tileTextureCoord, 1.0);\\nmediump vec2 samplePos = mix(v_tlbr.xy, v_tlbr.zw, normalizedTextureCoord);\\nlowp vec4 color = texture2D(u_texture, samplePos);\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\nout_color = v_opacity * v_color * color;\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY && !defined(HIGHLIGHT)\\nvec4 textureThresholds0 = texture2D(u_dotTextures[0], v_dotTextureCoords);\\nvec4 textureThresholds1 = texture2D(u_dotTextures[1], v_dotTextureCoords);\\nvec4 difference0 = v_dotThresholds[0] - textureThresholds0;\\nvec4 difference1 = v_dotThresholds[1] - textureThresholds1;\\n#ifdef DD_DOT_BLENDING\\nvec4 isPositive0 = step(0.0, difference0);\\nvec4 isPositive1 = step(0.0, difference1);\\nfloat weightSum = dot(isPositive0, difference0) + dot(isPositive1, difference1);\\nfloat lessThanEqZero = step(weightSum, 0.0);\\nfloat greaterThanZero = 1.0 - lessThanEqZero ;\\nfloat divisor = (weightSum + lessThanEqZero);\\nvec4 weights0 = difference0 * isPositive0 / divisor;\\nvec4 weights1 = difference1 * isPositive1 / divisor;\\nvec4 dotColor = u_dotColors[0] * weights0 + u_dotColors[1] * weights1;\\nvec4 preEffectColor = greaterThanZero * dotColor + lessThanEqZero * u_dotBackgroundColor;\\n#else\\nfloat diffMax = max(max4(difference0), max4(difference1));\\nfloat lessThanZero = step(diffMax, 0.0);\\nfloat greaterOrEqZero = 1.0 - lessThanZero;\\nvec4 isMax0 = step(diffMax, difference0);\\nvec4 isMax1 = step(diffMax, difference1);\\nvec4 dotColor = u_dotColors[0] * isMax0 + u_dotColors[1] * isMax1;\\nvec4 preEffectColor = greaterOrEqZero * dotColor + lessThanZero * u_dotBackgroundColor;\\n#endif\\nout_color = preEffectColor;\\n#else\\nout_color = v_opacity * v_color;\\n#endif\\n#ifdef HIGHLIGHT\\nout_color.a = 1.0;\\n#endif\\nreturn out_color;\\n}\\nvoid main() {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (v_isOutline > 0.5) {\\ngl_FragColor = drawLine();\\n} else {\\ngl_FragColor = drawFill();\\n}\\n#else\\ngl_FragColor = drawFill();\\n#endif\\n}\",\"fill.vert\":\"#include <materials/symbologyTypeUtils.glsl>\\n#define PACKED_LINE\\nprecision highp float;\\nattribute float a_bitset;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nattribute float a_inverseArea;\\nvec4 a_color = vec4(0.0, 0.0, 0.0, 1.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#else\\nattribute vec4 a_color;\\nattribute vec4 a_aux2;\\nattribute vec4 a_aux3;\\n#ifndef SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\nattribute vec4 a_aux1;\\nattribute vec2 a_zoomRange;\\n#else\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\n#endif\\n#endif\\nuniform vec2 u_tileOffset;\\nuniform vec2 u_maxIntNumOfCrossing;\\n#include <util/encoding.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/fill/common.glsl>\\n#include <materials/fill/hittest.glsl>\\nconst float INV_SCALE_COMPRESSION_FACTOR = 1.0 / 128.0;\\nconst float MAX_REPRESENTABLE_INT = 16777216.0;\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 dotThreshold(vec4 featureAttrOverFeatureArea, float dotValue, float tileDotsOverArea) {\\nreturn featureAttrOverFeatureArea * (1.0 / dotValue)  * (1.0 / tileDotsOverArea);\\n}\\n#endif\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\nvoid drawLine(out lowp vec4 out_color, out highp vec3 out_pos) {\\nLineData outputs = buildLine(\\nout_pos,\\na_id,\\na_pos,\\na_color,\\n(a_aux3.xy - 128.) / 16.,\\n(a_aux3.zw - 128.) / 16.,\\n0.,\\na_aux2.z / 16.,\\na_bitset,\\nvec4(0.),\\nvec2(0.),\\na_aux2.w / 16.\\n);\\nv_id      = outputs.id;\\nv_opacity = outputs.opacity;\\nv_aux1    = vec4(outputs.lineHalfWidth, outputs.normal, 0.);\\nout_color = outputs.color;\\n}\\n#endif\\nvoid drawFill(out lowp vec4 out_color, out highp vec3 out_pos) {\\nfloat a_bitSet = a_bitset;\\nout_color = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nmat3 tileToTileNormalized = mat3(  2. / 512.,  0.,  0.,\\n0., -2. / 512.,  0.,\\n-1.,  1.,  1.  );\\nout_pos   = tileToTileNormalized * vec3((a_pos * FILL_POSITION_PRECISION), 1.);\\n#else\\nout_pos   = u_dvsMat3 * vec3(a_pos * FILL_POSITION_PRECISION, 1.);\\n#endif\\n#ifdef PATTERN\\nvec4  a_tlbr   = a_aux1;\\nfloat a_width  = a_aux2.x;\\nfloat a_height = a_aux2.y;\\nvec2  a_offset = a_aux2.zw;\\nvec2  a_scale  = a_aux3.xy;\\nfloat a_angle  = a_aux3.z;\\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_WIDTH_PRECISION_FACTOR) > 0.5) {\\na_width *= INV_SCALE_COMPRESSION_FACTOR;\\n}\\nif (getBit(a_bitset, BITSET_FILL_HAS_PATTERN_HEIGHT_PRECISION_FACTOR) > 0.5) {\\na_height *= INV_SCALE_COMPRESSION_FACTOR;\\n}\\nvec2 scale = INV_SCALE_COMPRESSION_FACTOR * a_scale;\\nfloat width = u_zoomFactor * a_width * scale.x;\\nfloat height = u_zoomFactor * a_height * scale.y;\\nfloat angle = C_256_TO_RAD * a_angle;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nfloat dx = 0.0;\\nfloat dy = 0.0;\\nif (getBit(a_bitset, BITSET_FILL_RANDOM_PATTERN_OFFSET) > 0.5) {\\nfloat id = rgba2float(vec4(a_id, 0.0));\\ndx = rand(vec2(id, 0.0));\\ndy = rand(vec2(0.0, id));\\n}\\nmat3 patternMatrix = mat3(cosA / width, sinA / height, 0,\\n-sinA / width, cosA / height, 0,\\ndx,            dy,           1);\\nvec2 patternSize = vec2(a_width, a_height);\\nvec2 numPatternsPerMaxInt = vec2(MAX_REPRESENTABLE_INT) / patternSize;\\nvec2 maxIntCrossingOffsetCorrection = patternSize * fract(u_maxIntNumOfCrossing * numPatternsPerMaxInt);\\nvec2 tileOffset = u_tileOffset + maxIntCrossingOffsetCorrection - 0.5 * patternSize;\\ntileOffset = vec2(tileOffset.x * cosA - tileOffset.y * sinA, tileOffset.x * sinA + tileOffset.y * cosA);\\ntileOffset = mod(tileOffset, patternSize);\\nvec2 symbolOffset = u_zoomFactor * scale * vec2(a_offset - tileOffset) / vec2(width, height);\\nv_tileTextureCoord = (patternMatrix * vec3(a_pos * FILL_POSITION_PRECISION, 1.0)).xy - symbolOffset;\\nv_aux1 = a_tlbr / u_mosaicSize.xyxy;\\nv_sampleAlphaOnly = getBit(a_bitset, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\nif (getBit(a_bitSet, BITSET_FILL_HAS_UNRESOLVED_REPLACEMENT_COLOR) > 0.5) {\\n#ifdef VV_COLOR\\nv_sampleAlphaOnly *= (1.0 - float(isNan(VV_ADATA[ATTR_VV_COLOR]))) * (1.0 - getBit(a_bitSet, BITSET_GENERIC_LOCK_COLOR));\\n#else\\nv_sampleAlphaOnly = 0.0;\\n#endif\\n}\\n#elif SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_DOT_DENSITY\\nvec4 ddAttributeData0 = getAttributeData2(a_id) * u_isActive[0] * a_inverseArea;\\nvec4 ddAttributeData1 = getAttributeData3(a_id) * u_isActive[1] * a_inverseArea;\\nfloat size = u_tileZoomFactor * 512.0 * 1.0 / u_pixelRatio;\\nv_dotThresholds[0] = dotThreshold(ddAttributeData0, u_dotValue, u_tileDotsOverArea);\\nv_dotThresholds[1] = dotThreshold(ddAttributeData1, u_dotValue, u_tileDotsOverArea);\\nv_dotTextureCoords = (a_pos * FILL_POSITION_PRECISION + 0.5) / size;\\n#endif\\n}\\n#ifdef HITTEST\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nif (getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE) > 0.5) {\\nout_pos = vec3(0., 0., 2.);\\nreturn;\\n}\\n#endif\\nhittestFill(out_color, out_pos);\\ngl_PointSize = 1.0;\\n}\\n#elif defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nvoid draw(out lowp vec4 out_color, out highp vec3 out_pos) {\\nv_isOutline = getBit(a_bitset, BITSET_TYPE_FILL_OUTLINE);\\nif (v_isOutline > 0.5) {\\ndrawLine(out_color, out_pos);\\n} else {\\ndrawFill(out_color, out_pos);\\n}\\n}\\n#else\\n#define draw drawFill\\n#endif\\nvoid main()\\n{\\nINIT;\\nhighp vec3 pos  = vec3(0.);\\nhighp vec4 color  = vec4(0.);\\ndraw(color, pos);\\nv_color = color;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\",\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestFill(\\nout lowp vec4 out_color,\\nout highp vec3 out_pos\\n) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * FILL_POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * FILL_POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * FILL_POSITION_PRECISION, 1.);\\nfloat hittestDist = u_hittestDist;\\nfloat dist = distPointTriangle(u_hittestPos, pos.xy, pos1.xy, pos2.xy);\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist < 0. || dist >= hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist == 0. ? (1. / 255.) : 0.);\\n}\\n#endif\"},hittest:{\"common.glsl\":\"#ifdef HITTEST\\nuniform float hittestDist;\\nuniform highp vec2 hittestPos;\\nfloat projectScalar(vec2 a, vec2 b) {\\nreturn dot(a, normalize(b));\\n}\\nfloat distPointSegment(vec2 p0, vec2 p1, vec2 p2) {\\nvec2 L = p2 - p1;\\nvec2 A = p0 - p1;\\nfloat projAL = projectScalar(A, L);\\nfloat t = clamp(projAL / length(L), 0., 1.);\\nreturn distance(p0, p1 + t * (p2 - p1));\\n}\\nvoid hittestMarker(out lowp vec4 out_color, out highp vec3 out_pos, in highp vec3 pos, float size) {\\nfloat dist = distance(pos, vec3(hittestPos, 1.));\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif ((dist - size) > hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, (dist - size) < 0. ? (1. / 255.) : 0.);\\n}\\nfloat intersectPointTriangleBary(vec2 p, vec2 a, vec2 b, vec2 c) {\\nreturn inTriangle(xyToBarycentric(p, a, b, c));\\n}\\nfloat distPointTriangle(vec2 p, vec2 a, vec2 b, vec2 c) {\\nvec2 ba = b - a;\\nvec2 ca = c - a;\\nfloat crossProduct = ba.x * ca.y - ca.x * ba.y;\\nbool isParallel = crossProduct < EPSILON_HITTEST && crossProduct > -EPSILON_HITTEST;\\nif (isParallel) {\\nreturn -1.;\\n}\\nif (intersectPointTriangleBary(p.xy, a, b, c) == 1.) {\\nreturn 0.;\\n}\\nfloat distAB = distPointSegment(p, a, b);\\nfloat distBC = distPointSegment(p, b, c);\\nfloat distCA = distPointSegment(p, c, a);\\nreturn min(min(distAB, distBC), distCA);\\n}\\n#endif\"},icon:{\"common.glsl\":\"#include <util/encoding.glsl>\\nuniform lowp vec2 u_mosaicSize;\\nvarying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying highp vec4 v_sizeTex;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nuniform lowp sampler2D u_texture;\\n#ifdef SDF\\nvarying lowp vec4 v_outlineColor;\\nvarying mediump float v_outlineWidth;\\nvarying mediump float v_distRatio;\\nvarying mediump float v_overridingOutlineColor;\\nvarying mediump float v_isThin;\\n#endif\\n#ifdef SDF\\nvec4 getColor(vec2 v_size, vec2 v_tex) {\\n#ifdef HITTEST\\nlowp vec4 fillPixelColor = vec4(1.0);\\n#else\\nlowp vec4 fillPixelColor = v_color;\\n#endif\\nfloat d = 0.5 - rgba2float(texture2D(u_texture, v_tex));\\nfloat size = max(v_size.x, v_size.y);\\nfloat dist = d * size * SOFT_EDGE_RATIO * v_distRatio;\\nfillPixelColor *= clamp(0.5 - dist, 0.0, 1.0);\\nfloat outlineWidth = v_outlineWidth;\\n#ifdef HIGHLIGHT\\noutlineWidth = max(outlineWidth, 4.0 * v_isThin);\\n#endif\\nif (outlineWidth > 0.25) {\\nlowp vec4 outlinePixelColor = v_overridingOutlineColor * v_color + (1.0 - v_overridingOutlineColor) * v_outlineColor;\\nfloat clampedOutlineSize = min(outlineWidth, size);\\noutlinePixelColor *= clamp(0.5 - abs(dist) + clampedOutlineSize * 0.5, 0.0, 1.0);\\nreturn v_opacity * ((1.0 - outlinePixelColor.a) * fillPixelColor + outlinePixelColor);\\n}\\nreturn v_opacity * fillPixelColor;\\n}\\n#else\\nvec4 getColor(vec2 _v_size, vec2 v_tex) {\\nlowp vec4 texColor = texture2D(u_texture, v_tex);\\nreturn v_opacity * texColor * v_color;\\n}\\n#endif\",heatmapAccumulate:{\"common.glsl\":\"varying lowp vec4 v_hittestResult;\\nvarying mediump vec2 v_offsetFromCenter;\\nvarying highp float v_fieldValue;\",\"heatmapAccumulate.frag\":\"precision mediump float;\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\n#ifdef HEATMAP_PRECISION_HALF_FLOAT\\n#define COMPRESSION_FACTOR 0.25\\n#else\\n#define COMPRESSION_FACTOR 1.0\\n#endif\\nuniform lowp sampler2D u_texture;\\nvoid main() {\\n#ifdef HITTEST\\ngl_FragColor = v_hittestResult;\\n#else\\nfloat radius = length(v_offsetFromCenter);\\nfloat shapeWeight = step(radius, 1.0);\\nfloat oneMinusRadiusSquared = 1.0 - radius * radius;\\nfloat kernelWeight = oneMinusRadiusSquared * oneMinusRadiusSquared;\\ngl_FragColor = vec4(shapeWeight * kernelWeight * v_fieldValue * COMPRESSION_FACTOR);\\n#endif\\n}\",\"heatmapAccumulate.vert\":\"precision highp float;\\nattribute vec2 a_vertexOffset;\\nvec4 a_color = vec4(0.0);\\nvec2 a_zoomRange = vec2(0.0, 10000.0);\\nuniform float u_radius;\\nuniform float u_isFieldActive;\\n#include <materials/vcommon.glsl>\\n#include <materials/hittest/common.glsl>\\n#include <materials/icon/heatmapAccumulate/common.glsl>\\nvoid main() {\\nfloat filterFlags = getFilterFlags();\\n#ifdef HITTEST\\nhighp vec4 out_hittestResult = vec4(0.);\\nhighp vec3 out_pos = vec3(0.);\\nvec3 pos = u_viewMat3 * u_tileMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nhittestMarker(out_hittestResult, out_pos, pos, u_radius);\\nv_hittestResult = out_hittestResult;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(a_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\nv_offsetFromCenter = sign(a_vertexOffset);\\nv_fieldValue = getAttributeData2(a_id).x * u_isFieldActive + 1.0 - u_isFieldActive;\\nvec3 centerPos = u_dvsMat3 * vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec3 vertexPos = centerPos + u_displayViewMat3 * vec3(v_offsetFromCenter, 0.0) * u_radius;\\ngl_Position = vec4(clip(a_color, vertexPos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},\"hittest.glsl\":\"#ifdef HITTEST\\n#include <materials/hittest/common.glsl>\\nattribute vec2 a_vertexOffset1;\\nattribute vec2 a_vertexOffset2;\\nattribute vec2 a_texCoords1;\\nattribute vec2 a_texCoords2;\\nvec2 getTextureCoords(in vec3 bary, in vec2 texCoords0, in vec2 texCoords1, in vec2 texCoords2) {\\nreturn texCoords0 * bary.x + texCoords1 * bary.y + texCoords2 * bary.z;\\n}\\nvoid hittestIcon(\\ninout lowp vec4 out_color,\\nout highp vec3 out_pos,\\nin vec3 pos,\\nin vec3 offset,\\nin vec2 size,\\nin float scaleFactor,\\nin float isMapAligned\\n) {\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nvec3 posBase = u_viewMat3 * u_tileMat3  * pos;\\nvec3 offset1 = scaleFactor * vec3(a_vertexOffset1 / 16.0, 0.);\\nvec3 offset2 = scaleFactor * vec3(a_vertexOffset2 / 16.0, 0.);\\nvec2 pos0    = (posBase + getMatrixNoDisplay(isMapAligned) * offset).xy;\\nvec2 pos1    = (posBase + getMatrixNoDisplay(isMapAligned) * offset1).xy;\\nvec2 pos2    = (posBase + getMatrixNoDisplay(isMapAligned) * offset2).xy;\\nvec3 bary0 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary1 = xyToBarycentric(u_hittestPos + vec2(0., -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary2 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, -u_hittestDist), pos0, pos1, pos2);\\nvec3 bary3 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary4 = xyToBarycentric(u_hittestPos, pos0, pos1, pos2);\\nvec3 bary5 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, 0.), pos0, pos1, pos2);\\nvec3 bary6 = xyToBarycentric(u_hittestPos + vec2(-u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec3 bary7 = xyToBarycentric(u_hittestPos + vec2(0., u_hittestDist), pos0, pos1, pos2);\\nvec3 bary8 = xyToBarycentric(u_hittestPos + vec2(u_hittestDist, u_hittestDist), pos0, pos1, pos2);\\nvec2 tex0 = a_texCoords  / u_mosaicSize;\\nvec2 tex1 = a_texCoords1 / u_mosaicSize;\\nvec2 tex2 = a_texCoords2 / u_mosaicSize;\\nfloat alphaSum = 0.;\\nalphaSum += inTriangle(bary0) * getColor(size, getTextureCoords(bary0, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary1) * getColor(size, getTextureCoords(bary1, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary2) * getColor(size, getTextureCoords(bary2, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary3) * getColor(size, getTextureCoords(bary3, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary4) * getColor(size, getTextureCoords(bary4, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary5) * getColor(size, getTextureCoords(bary5, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary6) * getColor(size, getTextureCoords(bary6, tex0, tex1, tex2)).a;\\nalphaSum += inTriangle(bary7) * getColor(size, getTextureCoords(bary7, tex0, tex1, tex2)).a;\\nout_pos.z += step(alphaSum, .05) * 2.0;\\nout_color = vec4(1. / 255., 0., 0., alphaSum / 255.);\\n}\\n#endif\",\"icon.frag\":\"precision mediump float;\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/icon/common.glsl>\\nvoid main()\\n{\\n#ifdef HITTEST\\nvec4 color = v_color;\\n#else\\nvec4 color = getColor(v_sizeTex.xy, v_sizeTex.zw);\\n#endif\\n#ifdef HIGHLIGHT\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"icon.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_outlineColor;\\nattribute vec4 a_sizeAndOutlineWidth;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nattribute vec2 a_bitSetAndDistRatio;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/icon/common.glsl>\\n#include <materials/icon/hittest.glsl>\\nfloat getMarkerScaleFactor(inout vec2 size, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat f = getSize(size.y) / size.y;\\nfloat sizeFactor = size.y / referenceSize;\\nreturn getSize(referenceSize) / referenceSize;\\n#else\\nreturn 1.;\\n#endif\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_bitSet = a_bitSetAndDistRatio.x;\\nvec3  pos           = vec3(a_pos * POSITION_PRECISION, 1.0);\\nvec2  size          = a_sizeAndOutlineWidth.xy * a_sizeAndOutlineWidth.xy / 128.0;\\nvec3  offset        = vec3(a_vertexOffset / 16.0, 0.);\\nfloat outlineSize   = a_sizeAndOutlineWidth.z * a_sizeAndOutlineWidth.z / 128.0;\\nfloat isMapAligned  = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nfloat referenceSize = a_sizeAndOutlineWidth.w * a_sizeAndOutlineWidth.w / 128.0;\\nfloat scaleSymbolProportionally = getBit(a_bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\nfloat scaleFactor               = getMarkerScaleFactor(size, referenceSize);\\nsize.xy     *= scaleFactor;\\noffset.xy   *= scaleFactor;\\noutlineSize *= scaleSymbolProportionally * (scaleFactor - 1.0) + 1.0;\\nvec2 v_tex   = a_texCoords / u_mosaicSize;\\nfloat filterFlags = getFilterFlags();\\nv_color    = getColor(a_color, a_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nv_opacity  = getOpacity();\\nv_id       = norm(a_id);\\nv_pos      = u_dvsMat3 * pos + getMatrix(isMapAligned) * getRotation()  * offset;\\nv_sizeTex  = vec4(size.xy, v_tex.xy);\\n#ifdef SDF\\nv_isThin   = getBit(a_bitSet, BITSET_MARKER_OUTLINE_ALLOW_COLOR_OVERRIDE);\\n#ifdef VV_COLOR\\nv_overridingOutlineColor = v_isThin;\\n#else\\nv_overridingOutlineColor = 0.0;\\n#endif\\nv_outlineWidth = min(outlineSize, max(max(size.x, size.y) - 0.99, 0.0));\\nv_outlineColor = a_outlineColor;\\nv_distRatio = a_bitSetAndDistRatio.y / 128.0;\\n#endif\\n#ifdef HITTEST\\nhighp vec4 out_color = vec4(0.);\\nhighp vec3 out_pos   = vec3(0.);\\nhittestIcon(out_color, out_pos, pos, offset, size, scaleFactor, isMapAligned);\\nv_color = out_color;\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},label:{\"common.glsl\":\"uniform mediump float u_zoomLevel;\\nuniform mediump float u_mapRotation;\\nuniform mediump float u_mapAligned;\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying mediump vec2 v_tex;\\nvarying mediump vec4 v_color;\\nvarying lowp vec4 v_animation;\",\"label.frag\":\"#include <materials/text/text.frag>\",\"label.vert\":\"precision highp float;\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texAndSize;\\nattribute vec4 a_refSymbolAndPlacementOffset;\\nattribute vec4 a_glyphData;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nuniform float u_mapRotation;\\nuniform float u_mapAligned;\\nfloat getZ(in float minZoom, in float maxZoom, in float angle) {\\nfloat glyphAngle = angle * 360.0 / 254.0;\\nfloat mapAngle = u_mapRotation * 360.0 / 254.0;\\nfloat diffAngle = min(360.0 - abs(mapAngle - glyphAngle), abs(mapAngle - glyphAngle));\\nfloat z = 0.0;\\nz += u_mapAligned * (2.0 * (1.0 - step(minZoom, u_currentZoom)));\\nz += u_mapAligned * 2.0 * step(90.0, diffAngle);\\nz += 2.0 * (1.0 - step(u_currentZoom, maxZoom));\\nreturn z;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat groupMinZoom    = getMinZoom();\\nfloat glyphMinZoom    = a_glyphData.x;\\nfloat glyphMaxZoom    = a_glyphData.y;\\nfloat glyphAngle      = a_glyphData.z;\\nfloat a_isBackground  = a_glyphData.w;\\nfloat a_minZoom          = max(groupMinZoom, glyphMinZoom);\\nfloat a_placementPadding = a_refSymbolAndPlacementOffset.x * EXTRUDE_SCALE_PLACEMENT_PADDING;\\nvec2  a_placementDir     = unpack_u8_nf32(a_refSymbolAndPlacementOffset.zw);\\nfloat a_refSymbolSize    = a_refSymbolAndPlacementOffset.y;\\nfloat fontSize           = a_texAndSize.z;\\nfloat haloSize           = a_texAndSize.w * OUTLINE_SCALE;\\nvec2  vertexOffset = a_vertexOffset * OFFSET_PRECISION;\\nvec3  pos          = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat z            = getZ(a_minZoom, glyphMaxZoom, glyphAngle);\\nfloat fontScale    = fontSize / SDF_FONT_SIZE;\\nfloat halfSize     = getSize(a_refSymbolSize) / 2.0;\\nfloat animation    = pow(getAnimationState(), vec4(2.0)).r;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor = (isBackground + isText) * a_color;\\nv_color     = animation * ((1.0 - u_isHaloPass) * nonHaloColor + (u_isHaloPass * a_haloColor));\\nv_opacity   = 1.0;\\nv_tex       = a_texCoords / u_mosaicSize;\\nv_edgeDistanceOffset = u_isHaloPass * haloSize / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\nvec2 placementOffset = a_placementDir * (halfSize + a_placementPadding);\\nvec3 glyphOffset     = u_displayMat3 * vec3(vertexOffset + placementOffset, 0.0);\\nvec3 v_pos           = vec3((u_dvsMat3 * pos + glyphOffset).xy, z);\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\ngl_Position = vec4(v_pos, 1.0);\\n#ifdef DEBUG\\nv_color = vec4(a_color.rgb, z == 0.0 ? 1.0 : 0.645);\\n#endif\\n}\"},line:{\"common.glsl\":\"varying lowp vec4 v_color;\\nvarying highp vec3 v_id;\\nvarying mediump vec2 v_normal;\\nvarying mediump float v_lineHalfWidth;\\nvarying lowp float v_opacity;\\n#ifdef PATTERN\\nvarying mediump vec4 v_tlbr;\\nvarying mediump vec2 v_patternSize;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nvarying highp float v_accumulatedDistance;\\n#endif\\n#ifdef SDF\\nvarying mediump float v_lineWidthRatio;\\n#endif\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\\n#ifdef HITTEST\\nattribute vec2 a_pos1;\\nattribute vec2 a_pos2;\\nvoid hittestLine(out lowp vec4 out_color, out highp vec3 out_pos, float halfWidth) {\\nvec3 pos        = u_viewMat3 * u_tileMat3 * vec3(a_pos  * POSITION_PRECISION, 1.);\\nvec3 pos1       = u_viewMat3 * u_tileMat3 * vec3(a_pos1 * POSITION_PRECISION, 1.);\\nvec3 pos2       = u_viewMat3 * u_tileMat3 * vec3(a_pos2 * POSITION_PRECISION, 1.);\\nvec3 outTextureCoords = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nfloat dist = min(distPointSegment(u_hittestPos, pos.xy, pos1.xy),\\ndistPointSegment(u_hittestPos, pos.xy, pos2.xy)) - halfWidth;\\nout_pos = vec3(getAttributeDataTextureCoords(a_id), 0.0);\\nif (dist >= u_hittestDist) {\\nout_pos.z += 2.0;\\n}\\nout_color = vec4(1. / 255., 0, 0, dist <= 0. ? (1. / 255.) : 0.);\\n}\\n#endif\",\"line.frag\":\"precision lowp float;\\n#include <util/encoding.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.frag>\\n#ifdef HITTEST\\nvoid main() {\\ngl_FragColor = v_color;\\n}\\n#else\\nvoid main() {\\nLineData inputs = LineData(\\nv_color,\\nv_normal,\\nv_lineHalfWidth,\\nv_opacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr,\\nv_patternSize,\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance,\\n#endif\\n#endif\\nv_id\\n);\\ngl_FragColor = shadeLine(inputs);\\n}\\n#endif\",\"line.vert\":\"precision highp float;\\nattribute vec4 a_color;\\nattribute vec4 a_offsetAndNormal;\\nattribute vec2 a_accumulatedDistanceAndHalfWidth;\\nattribute vec4 a_tlbr;\\nattribute vec4 a_segmentDirection;\\nattribute vec2 a_aux;\\nattribute vec2 a_zoomRange;\\n#include <materials/vcommon.glsl>\\n#include <materials/symbologyTypeUtils.glsl>\\n#include <materials/line/common.glsl>\\n#include <materials/line/hittest.glsl>\\n#include <materials/shared/line/common.glsl>\\n#include <materials/shared/line/line.vert>\\n#ifdef HITTEST\\nvoid draw() {\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat a_halfWidth = a_accumulatedDistanceAndHalfWidth.y / 16.;\\nfloat a_cimHalfWidth = a_aux.x / 16. ;\\nvec2  a_offset = a_offsetAndNormal.xy / 16.;\\nfloat baseWidth = getBaseLineHalfWidth(a_halfWidth, a_cimHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nhighp vec3 pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestLine(v_color, pos, halfWidth);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#else\\nvoid draw()\\n{\\nhighp vec3 pos = vec3(0.);\\nLineData outputs = buildLine(\\npos,\\na_id,\\na_pos,\\na_color,\\na_offsetAndNormal.xy / 16.,\\na_offsetAndNormal.zw / 16.,\\na_accumulatedDistanceAndHalfWidth.x,\\na_accumulatedDistanceAndHalfWidth.y / 16.,\\na_segmentDirection.w,\\na_tlbr,\\na_segmentDirection.xy / 16.,\\na_aux.x / 16.\\n);\\nv_id              = outputs.id;\\nv_color           = outputs.color;\\nv_normal          = outputs.normal;\\nv_lineHalfWidth   = outputs.lineHalfWidth;\\nv_opacity         = outputs.opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nv_tlbr          = outputs.tlbr;\\nv_patternSize   = outputs.patternSize;\\n#endif\\n#ifdef SDF\\nv_lineWidthRatio = outputs.lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nv_accumulatedDistance = outputs.accumulatedDistance;\\n#endif\\n#endif\\ngl_Position = vec4(clip(outputs.color, pos, getFilterFlags(), a_zoomRange), 1.0);\\n}\\n#endif\\nvoid main() {\\nINIT;\\ndraw();\\n}\"},pie:{\"pie.common.glsl\":\"uniform float outlineWidth;\\nuniform mediump float sectorThreshold;\\nvarying vec3  v_id;\\nvarying vec3  v_pos;\\nvarying vec2  v_offset;\\nvarying vec4  v_color;\\nvarying float v_size;\\nvarying float v_numOfEntries;\\nvarying float v_maxSectorAngle;\\nvarying vec2  v_filteredSectorToColorId[numberOfFields];\\nvarying vec2  v_texCoords;\\nvarying float v_outlineWidth;\\nvarying float v_opacity;\\nstruct FilteredChartInfo {\\nfloat endSectorAngle;\\nint colorId;\\n};\",\"pie.frag\":\"precision highp float;\\n#include <util/atan2.glsl>\\n#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/pie/pie.common.glsl>\\nuniform lowp vec4 colors[numberOfFields];\\nuniform lowp vec4 defaultColor;\\nuniform lowp vec4 othersColor;\\nuniform lowp vec4 outlineColor;\\nuniform float donutRatio;\\nlowp vec4 getSectorColor(in int index, in vec2 filteredSectorToColorId[numberOfFields]) {\\nmediump int colorIndex = int(filteredSectorToColorId[index].y);\\nreturn colors[colorIndex];\\n}\\nconst int OTHER_SECTOR_ID = 255;\\n#ifdef HITTEST\\nvec4 getColor() {\\nfloat distanceSize = length(v_offset) * v_size;\\nfloat donutSize = donutRatio * v_size;\\nfloat alpha = step(donutSize, distanceSize) * (1.0 - step(v_size, distanceSize));\\nreturn v_color;\\n}\\n#else\\nvec4 getColor() {\\nfloat angle = 90.0 - C_RAD_TO_DEG * atan2(v_offset.y, v_offset.x);\\nif (angle < 0.0) {\\nangle += 360.0;\\n} else if (angle > 360.0) {\\nangle = mod(angle, 360.0);\\n}\\nint numOfEntries = int(v_numOfEntries);\\nfloat maxSectorAngle = v_maxSectorAngle;\\nlowp vec4 fillColor = (maxSectorAngle > 0.0 || sectorThreshold > 0.0) ? othersColor : defaultColor;\\nlowp vec4 prevColor = vec4(0.0);\\nlowp vec4 nextColor = vec4(0.0);\\nfloat startSectorAngle = 0.0;\\nfloat endSectorAngle = 0.0;\\nif (angle < maxSectorAngle) {\\nfor (int index = 0; index < numberOfFields; ++index) {\\nstartSectorAngle = endSectorAngle;\\nendSectorAngle = v_filteredSectorToColorId[index].x;\\nif (endSectorAngle > angle) {\\nfillColor = getSectorColor(index, v_filteredSectorToColorId);\\nprevColor = sectorThreshold != 0.0 && index == 0 && abs(360.0 - maxSectorAngle) < EPSILON ? othersColor :\\ngetSectorColor(index > 0 ? index - 1 : numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = sectorThreshold != 0.0 && abs(endSectorAngle - maxSectorAngle) < EPSILON ? othersColor :\\ngetSectorColor(index < numOfEntries - 1 ? index + 1 : 0, v_filteredSectorToColorId);\\nbreak;\\n}\\nif (index == numOfEntries - 1) {\\nbreak;\\n}\\n}\\n} else {\\nprevColor = getSectorColor(numOfEntries - 1, v_filteredSectorToColorId);\\nnextColor = getSectorColor(0, v_filteredSectorToColorId);\\nstartSectorAngle = maxSectorAngle;\\nendSectorAngle = 360.0;\\n}\\nlowp vec4 outlineColor = outlineColor;\\nfloat offset = length(v_offset);\\nfloat distanceSize = offset * v_size;\\nif (startSectorAngle != 0.0 || endSectorAngle != 360.0) {\\nfloat distanceToStartSector = (angle - startSectorAngle);\\nfloat distanceToEndSector = (endSectorAngle - angle);\\nfloat sectorThreshold = 0.6;\\nfloat beginSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToStartSector * offset);\\nfloat endSectorAlpha = smoothstep(0.0, sectorThreshold, distanceToEndSector * offset);\\nif (endSectorAlpha > 0.0) {\\nfillColor = mix(nextColor, fillColor, endSectorAlpha);\\n} else if (beginSectorAlpha > 0.0) {\\nfillColor = mix(prevColor, fillColor, beginSectorAlpha);\\n}\\n}\\nfloat donutSize = donutRatio * (v_size - v_outlineWidth);\\nfloat endOfDonut = donutSize - v_outlineWidth;\\nfloat aaThreshold = 0.75;\\nfloat innerCircleAlpha = endOfDonut - aaThreshold > 0.0 ? smoothstep(endOfDonut - aaThreshold, endOfDonut + aaThreshold, distanceSize) : 1.0;\\nfloat outerCircleAlpha = 1.0 - smoothstep(v_size - aaThreshold, v_size + aaThreshold , distanceSize);\\nfloat circleAlpha = innerCircleAlpha * outerCircleAlpha;\\nfloat startOfOutline = v_size - v_outlineWidth;\\nif (startOfOutline > 0.0 && v_outlineWidth > 0.25) {\\nfloat outlineFactor = smoothstep(startOfOutline - aaThreshold, startOfOutline + aaThreshold, distanceSize);\\nfloat innerLineFactor = donutSize - aaThreshold > 0.0 ? 1.0 - smoothstep(donutSize - aaThreshold, donutSize + aaThreshold , distanceSize) : 0.0;\\nfillColor = mix(fillColor, outlineColor, innerLineFactor + outlineFactor);\\n}\\nreturn v_opacity * circleAlpha * fillColor;\\n}\\n#endif\\nvoid main()\\n{\\nvec4 color = getColor();\\n#ifdef highlight\\ncolor.a = step(1.0 / 255.0, color.a);\\n#endif\\ngl_FragColor = color;\\n}\",\"pie.vert\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/barycentric.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/vv.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/pie/pie.common.glsl>\\n#include <materials/hittest/common.glsl>\\nattribute float a_bitSet;\\nattribute vec2  a_offset;\\nattribute vec2  a_texCoords;\\nattribute vec2  a_size;\\nattribute float a_referenceSize;\\nattribute vec2  a_zoomRange;\\nint filterValue(in float sectorAngle,\\nin int currentIndex,\\ninout FilteredChartInfo filteredInfo,\\ninout vec2 filteredSectorToColorId[numberOfFields]) {\\nif (sectorAngle > sectorThreshold * 360.0) {\\nfilteredInfo.endSectorAngle += sectorAngle;\\nfilteredSectorToColorId[filteredInfo.colorId] = vec2(filteredInfo.endSectorAngle, currentIndex);\\n++filteredInfo.colorId;\\n}\\nreturn 0;\\n}\\nint filterValues(inout vec2 filteredSectorToColorId[numberOfFields],\\ninout FilteredChartInfo filteredInfo,\\nin float sectorAngles[numberOfFields]) {\\nfor (int index = 0; index < numberOfFields; ++index) {\\nfloat sectorValue = sectorAngles[index];\\nfilterValue(sectorValue, index, filteredInfo, filteredSectorToColorId);\\n}\\nreturn filteredInfo.colorId;\\n}\\nvec2 getMarkerSize(inout vec2 offset, inout vec2 baseSize, inout float outlineSize, in float a_referenceSize, in float bitSet) {\\nvec2 outSize = baseSize;\\n#ifdef VV_SIZE\\nfloat r = getSize(a_referenceSize, currentScale) / a_referenceSize;\\noutSize.xy *= r;\\noffset.xy *= r;\\nfloat scaleSymbolProportionally = getBit(bitSet, BITSET_MARKER_SCALE_SYMBOLS_PROPORTIONALLY);\\noutlineSize *= scaleSymbolProportionally * (r - 1.0) + 1.0;\\n#endif\\nreturn outSize;\\n}\\nvec3 getOffset(in vec2 in_offset, float a_bitSet) {\\nfloat isMapAligned = getBit(a_bitSet, BITSET_MARKER_ALIGNMENT_MAP);\\nvec3  offset       = vec3(in_offset, 0.0);\\nreturn getMatrix(isMapAligned) * offset;\\n}\\nfloat filterNaNValues(in float value) {\\nreturn value != NAN_MAGIC_NUMBER && value > 0.0 ? value : 0.0;\\n}\\nvoid main()\\n{\\nINIT;\\nvec2  a_size   = a_size;\\nvec2  a_offset = a_offset / 16.0;\\nfloat outlineSize = outlineWidth;\\nfloat a_bitSet = a_bitSet;\\nfloat a_referenceSize = a_referenceSize;\\nvec2 a_texCoords = a_texCoords / 4.0;\\nvec2 markerSize = getMarkerSize(a_offset, a_size, outlineSize, a_referenceSize, a_bitSet);\\nfloat filterFlags = getFilterFlags();\\nvec3  pos         = vec3(a_pos / 10.0, 1.0);\\nv_opacity      = getOpacity();\\nv_id           = norm(a_id);\\nv_pos          = displayViewScreenMat3 * pos + getOffset(a_offset, a_bitSet);\\nv_offset       = sign(a_texCoords - 0.5);\\nv_size         = max(markerSize.x, markerSize.y);\\nv_outlineWidth = outlineSize;\\nfloat attributeData[10];\\nvec4 attributeData3 = getDataDriven0(a_id);\\nattributeData[0] = filterNaNValues(attributeData3.x);\\nattributeData[1] = filterNaNValues(attributeData3.y);\\nattributeData[2] = filterNaNValues(attributeData3.z);\\nattributeData[3] = filterNaNValues(attributeData3.w);\\n#if (numberOfFields > 4)\\nvec4 attributeData4 = getDataDriven1(a_id);\\nattributeData[4] = filterNaNValues(attributeData4.x);\\nattributeData[5] = filterNaNValues(attributeData4.y);\\nattributeData[6] = filterNaNValues(attributeData4.z);\\nattributeData[7] = filterNaNValues(attributeData4.w);\\n#endif\\n#if (numberOfFields > 8)\\nvec4 attributeData5 = getDataDriven2(a_id);\\nattributeData[8] = filterNaNValues(attributeData5.x);\\nattributeData[9] = filterNaNValues(attributeData5.y);\\n#endif\\nfloat sum = 0.0;\\nfor (int i = 0; i < numberOfFields; ++i) {\\nsum += attributeData[i];\\n}\\nfloat sectorAngles[numberOfFields];\\nfor (int i = 0; i < numberOfFields; ++i) {\\nsectorAngles[i] = 360.0 * attributeData[i] / sum;\\n}\\nvec2 filteredSectorToColorId[numberOfFields];\\nFilteredChartInfo filteredInfo = FilteredChartInfo(0.0, 0);\\nint numOfEntries = filterValues(filteredSectorToColorId, filteredInfo, sectorAngles);\\nv_numOfEntries = float(numOfEntries);\\nv_maxSectorAngle = filteredInfo.endSectorAngle;\\nv_filteredSectorToColorId = filteredSectorToColorId;\\n#ifdef HITTEST\\nhighp vec3 out_pos = vec3(0.0);\\nv_color            = vec4(0.0);\\nhittestMarker(v_color, out_pos, viewMat3 * tileMat3 *  pos, v_size);\\ngl_PointSize = 1.0;\\ngl_Position = vec4(clip(v_color, out_pos, filterFlags, a_zoomRange), 1.0);\\n#else\\ngl_Position = vec4(clip(v_color, v_pos, filterFlags, a_zoomRange), 1.0);\\n#endif\\n}\"},shared:{line:{\"common.glsl\":\"#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nuniform mediump vec2 u_mosaicSize;\\nvarying mediump float v_sampleAlphaOnly;\\n#endif\\nstruct LineData {\\nlowp vec4 color;\\nmediump vec2 normal;\\nmediump float lineHalfWidth;\\nlowp float opacity;\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nmediump vec4 tlbr;\\nmediump vec2 patternSize;\\n#endif\\n#ifdef SDF\\nmediump float lineWidthRatio;\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nhighp float accumulatedDistance;\\n#endif\\n#endif\\nhighp vec3 id;\\n};\",\"line.frag\":\"uniform lowp float u_blur;\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && !defined(HIGHLIGHT)\\n#if defined(PATTERN) || defined(SDF)\\nuniform sampler2D u_texture;\\nuniform highp float u_pixelRatio;\\n#endif\\n#endif\\n#if defined(SDF) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float adjustedPatternWidth = line.patternSize.x * 2.0 * line.lineWidthRatio;\\nmediump float relativeTexX = fract(line.accumulatedDistance / adjustedPatternWidth);\\nmediump float relativeTexY = 0.5 + 0.25 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nmediump float d = rgba2float(texture2D(u_texture, texCoord)) - 0.5;\\nfloat dist = d * line.lineHalfWidth;\\nreturn line.opacity * clamp(0.5 - dist, 0.0, 1.0) * line.color;\\n}\\n#elif defined(PATTERN) && !defined(HIGHLIGHT) && !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE)\\nlowp vec4 getLineColor(LineData line) {\\nmediump float lineHalfWidth = line.lineHalfWidth;\\nmediump float adjustedPatternHeight = line.patternSize.y * 2.0 * lineHalfWidth / line.patternSize.x;\\nmediump float relativeTexY = fract(line.accumulatedDistance / adjustedPatternHeight);\\nmediump float relativeTexX = 0.5 + 0.5 * line.normal.y;\\nmediump vec2 texCoord = mix(line.tlbr.xy, line.tlbr.zw, vec2(relativeTexX, relativeTexY));\\nlowp vec4 color = texture2D(u_texture, texCoord);\\n#ifdef VV_COLOR\\nif (v_sampleAlphaOnly > 0.5) {\\ncolor.rgb = vec3(color.a);\\n}\\n#endif\\nreturn line.opacity * line.color * color;\\n}\\n#else\\nlowp vec4 getLineColor(LineData line) {\\nreturn line.opacity * line.color;\\n}\\n#endif\\nvec4 shadeLine(LineData line)\\n{\\nmediump float thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(line.lineHalfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nmediump float fragDist = length(line.normal) * line.lineHalfWidth;\\nlowp float alpha = clamp(thinLineFactor * (line.lineHalfWidth - fragDist) / (u_blur + thinLineFactor - 1.0), 0.0, 1.0);\\nlowp vec4 out_color = getLineColor(line) * alpha;\\n#ifdef HIGHLIGHT\\nout_color.a = step(1.0 / 255.0, out_color.a);\\n#endif\\n#ifdef ID\\nif (out_color.a < 1.0 / 255.0) {\\ndiscard;\\n}\\nout_color = vec4(line.id, 0.0);\\n#endif\\nreturn out_color;\\n}\",\"line.vert\":\"float getBaseLineHalfWidth(in float lineHalfWidth, in float referenceHalfWidth) {\\n#ifdef VV_SIZE\\nfloat refLineWidth = 2.0 * referenceHalfWidth;\\nreturn 0.5 * (lineHalfWidth / max(referenceHalfWidth, EPSILON)) * getSize(refLineWidth);\\n#else\\nreturn lineHalfWidth;\\n#endif\\n}\\nfloat getLineHalfWidth(in float baseWidth, in float aa) {\\nfloat halfWidth = max(baseWidth + aa, 0.45) + 0.1 * aa;\\n#ifdef HIGHLIGHT\\nhalfWidth = max(halfWidth, 2.0);\\n#endif\\nreturn halfWidth;\\n}\\nvec2 getDist(in vec2 offset, in float halfWidth) {\\nfloat thinLineFactor = max(THIN_LINE_WIDTH_FACTOR * step(halfWidth, THIN_LINE_HALF_WIDTH), 1.0);\\nreturn thinLineFactor * halfWidth * offset;\\n}\\nLineData buildLine(\\nout vec3 out_pos,\\nin vec3 in_id,\\nin vec2 in_pos,\\nin vec4 in_color,\\nin vec2 in_offset,\\nin vec2 in_normal,\\nin float in_accumulatedDist,\\nin float in_lineHalfWidth,\\nin float in_bitSet,\\nin vec4 in_tlbr,\\nin vec2 in_segmentDirection,\\nin float in_referenceHalfWidth\\n)\\n{\\nfloat aa        = 0.5 * u_antialiasing;\\nfloat baseWidth = getBaseLineHalfWidth(in_lineHalfWidth, in_referenceHalfWidth);\\nfloat halfWidth = getLineHalfWidth(baseWidth, aa);\\nfloat z         = 2.0 * step(baseWidth, 0.0);\\nvec2  dist      = getDist(in_offset, halfWidth);\\nvec3  offset    = u_displayViewMat3 * vec3(dist, 0.0);\\nvec3  pos       = u_dvsMat3 * vec3(in_pos * POSITION_PRECISION, 1.0) + offset;\\n#ifdef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\nvec4  color     = in_color;\\nfloat opacity   = 1.0;\\n#else\\nvec4  color     = getColor(in_color, in_bitSet, BITSET_GENERIC_LOCK_COLOR);\\nfloat opacity   = getOpacity();\\n#ifdef SDF\\nconst float SDF_PATTERN_HALF_WIDTH = 15.5;\\nfloat scaleDash = getBit(in_bitSet, BITSET_LINE_SCALE_DASH);\\nfloat lineWidthRatio = (scaleDash * max(halfWidth - 0.55 * u_antialiasing, 0.25) + (1.0 - scaleDash)) / SDF_PATTERN_HALF_WIDTH;\\n#endif\\n#endif\\n#if !defined(SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE) && defined(PATTERN)\\nv_sampleAlphaOnly = getBit(in_bitSet, BITSET_GENERIC_CONSIDER_ALPHA_ONLY);\\n#endif\\nout_pos = vec3(pos.xy, z);\\nreturn LineData(\\ncolor,\\nin_normal,\\nhalfWidth,\\nopacity,\\n#ifndef SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#ifdef PATTERN\\nin_tlbr / u_mosaicSize.xyxy,\\nvec2(in_tlbr.z - in_tlbr.x, in_tlbr.w - in_tlbr.y),\\n#endif\\n#ifdef SDF\\nlineWidthRatio,\\n#endif\\n#if defined(PATTERN) || defined(SDF)\\nin_accumulatedDist * u_zoomFactor + dot(in_segmentDirection, dist),\\n#endif\\n#endif\\nnorm(in_id)\\n);\\n}\"}},\"symbologyTypeUtils.glsl\":\"#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_OUTLINE_FILL_LIKE\\n#endif\\n#if SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_SIMPLE || SYMBOLOGY_TYPE == SYMBOLOGY_TYPE_OUTLINE_FILL_SIMPLE\\n#define SYMBOLOGY_TYPE_IS_SIMPLE_LIKE\\n#endif\",text:{\"common.glsl\":\"uniform highp vec2 u_mosaicSize;\\nvarying highp vec3 v_id;\\nvarying mediump vec3 v_pos;\\nvarying lowp float v_opacity;\\nvarying lowp vec4 v_color;\\nvarying highp vec2 v_tex;\\nvarying mediump float v_antialiasingWidth;\\nvarying mediump float v_edgeDistanceOffset;\\nvarying lowp float v_transparency;\",\"hittest.glsl\":\"#include <materials/hittest/common.glsl>\",\"text.frag\":\"precision mediump float;\\n#include <materials/text/common.glsl>\\nuniform lowp sampler2D u_texture;\\n#ifdef HITTEST\\nvec4 getColor() {\\nreturn v_color;\\n}\\n#else\\nvec4 getColor()\\n{\\nfloat SDF_CUTOFF = (2.0 / 8.0);\\nfloat SDF_BASE_EDGE_DIST = 1.0 - SDF_CUTOFF;\\nlowp float dist = texture2D(u_texture, v_tex).a;\\nmediump float edge = SDF_BASE_EDGE_DIST - v_edgeDistanceOffset;\\n#ifdef HIGHLIGHT\\nedge /= 2.0;\\n#endif\\nlowp float aa = v_antialiasingWidth;\\nlowp float alpha = smoothstep(edge - aa, edge + aa, dist);\\nreturn alpha * v_color * v_opacity;\\n}\\n#endif\\nvoid main()\\n{\\ngl_FragColor = getColor();\\n}\",\"text.vert\":\"precision highp float;\\n#include <materials/utils.glsl>\\n#include <materials/vcommon.glsl>\\n#include <materials/text/common.glsl>\\n#include <materials/text/hittest.glsl>\\nattribute vec4 a_color;\\nattribute vec4 a_haloColor;\\nattribute vec4 a_texFontSize;\\nattribute vec4 a_aux;\\nattribute vec2 a_zoomRange;\\nattribute vec2 a_vertexOffset;\\nattribute vec2 a_texCoords;\\nuniform float u_isHaloPass;\\nuniform float u_isBackgroundPass;\\nfloat getTextSize(inout vec2 offset, inout float baseSize, in float referenceSize) {\\n#ifdef VV_SIZE\\nfloat r = getSize(referenceSize) / referenceSize;\\nbaseSize *= r;\\noffset.xy *= r;\\nreturn baseSize;\\n#endif\\nreturn baseSize;\\n}\\nvoid main()\\n{\\nINIT;\\nfloat a_isBackground  = a_aux.y;\\nfloat a_referenceSize = a_aux.z * a_aux.z / 256.0;\\nfloat a_bitSet        = a_aux.w;\\nfloat a_fontSize      = a_texFontSize.z;\\nvec2  a_offset        = a_vertexOffset * OFFSET_PRECISION;\\nvec3  in_pos        = vec3(a_pos * POSITION_PRECISION, 1.0);\\nfloat fontSize      = getTextSize(a_offset, a_fontSize, a_referenceSize);\\nfloat fontScale     = fontSize / SDF_FONT_SIZE;\\nvec3  offset        = getRotation() * vec3(a_offset, 0.0);\\nmat3  extrudeMatrix = getBit(a_bitSet, 0) == 1.0 ? u_displayViewMat3 : u_displayMat3;\\nfloat isText = 1.0 - a_isBackground;\\nfloat isBackground = u_isBackgroundPass * a_isBackground;\\nvec4  nonHaloColor  = (isBackground * a_color) + (isText * getColor(a_color, a_bitSet, 1));\\nv_color   = u_isHaloPass * a_haloColor + (1.0 - u_isHaloPass) * nonHaloColor;\\nv_opacity = getOpacity();\\nv_id      = norm(a_id);\\nv_tex     = a_texCoords / u_mosaicSize;\\nv_pos     = u_dvsMat3 * in_pos + extrudeMatrix * offset;\\nfloat isHidden = u_isBackgroundPass * isText + (1.0 - u_isBackgroundPass) * a_isBackground;\\nv_pos.z += 2.0 * isHidden;\\nv_edgeDistanceOffset = u_isHaloPass * OUTLINE_SCALE * a_texFontSize.w / fontScale / MAX_SDF_DISTANCE;\\nv_antialiasingWidth  = 0.105 * SDF_FONT_SIZE / fontSize / u_pixelRatio;\\n#ifdef HITTEST\\nhighp vec3 out_pos  = vec3(0.);\\nv_color = vec4(0.);\\nhittestMarker(v_color, out_pos, u_viewMat3 * u_tileMat3 *  vec3(a_pos * POSITION_PRECISION, 1.0)\\n+ u_tileMat3 * offset, fontSize / 2.);\\ngl_PointSize = 1.;\\ngl_Position = vec4(clip(v_color, out_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#else\\ngl_Position =  vec4(clip(v_color, v_pos, getFilterFlags(), a_zoomRange), 1.0);\\n#endif\\n}\"},\"utils.glsl\":\"float rshift(in float u32, in int amount) {\\nreturn floor(u32 / pow(2.0, float(amount)));\\n}\\nfloat getBit(in float bitset, in int bitIndex) {\\nfloat offset = pow(2.0, float(bitIndex));\\nreturn mod(floor(bitset / offset), 2.0);\\n}\\nconst int highlightReasonsLength = 3;\\nfloat getFilterBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex + highlightReasonsLength);\\n}\\nfloat getHighlightBit(in float bitset, in int bitIndex) {\\nreturn getBit(bitset, bitIndex);\\n}\\nhighp vec3 unpackDisplayIdTexel(in highp vec3 bitset) {\\nfloat isAggregate = getBit(bitset.b, 7);\\nreturn (1.0 - isAggregate) * bitset + isAggregate * (vec3(bitset.rgb) - vec3(0.0, 0.0, float(0x80)));\\n}\\nvec4 unpack(in float u32) {\\nfloat r = mod(rshift(u32, 0), 255.0);\\nfloat g = mod(rshift(u32, 8), 255.0);\\nfloat b = mod(rshift(u32, 16), 255.0);\\nfloat a = mod(rshift(u32, 24), 255.0);\\nreturn vec4(r, g, b, a);\\n}\\nvec3 norm(in vec3 v) {\\nreturn v /= 255.0;\\n}\\nvec4 norm(in vec4 v) {\\nreturn v /= 255.0;\\n}\\nfloat max4(vec4 target) {\\nreturn max(max(max(target.x, target.y), target.z), target.w);\\n}\\nvec2 unpack_u8_nf32(vec2 bytes) {\\nreturn (bytes - 127.0) / 127.0;\\n}\\nhighp float rand(in vec2 co) {\\nhighp float a = 12.9898;\\nhighp float b = 78.233;\\nhighp float c = 43758.5453;\\nhighp float dt = dot(co, vec2(a,b));\\nhighp float sn = mod(dt, 3.14);\\nreturn fract(sin(sn) * c);\\n}\",\"vcommon.glsl\":\"#include <materials/constants.glsl>\\n#include <materials/utils.glsl>\\n#include <materials/attributeData.glsl>\\n#include <materials/vv.glsl>\\n#include <materials/barycentric.glsl>\\nattribute vec2 a_pos;\\nattribute highp vec3 a_id;\\nuniform highp mat3 displayViewScreenMat3;\\nuniform highp mat3 displayViewMat3;\\nuniform highp mat3 displayMat3;\\nuniform highp mat3 tileMat3;\\nuniform highp mat3 viewMat3;\\nuniform highp float pixelRatio;\\nuniform mediump float zoomFactor;\\nuniform mediump float antialiasing;\\nuniform mediump float currentScale;\\nuniform mediump float currentZoom;\\nuniform mediump float metersPerSRUnit;\\nvec4 VV_ADATA = vec4(0.0);\\nvoid loadVisualVariableData(inout vec4 target) {\\ntarget.rgba = getVisualVariableData(a_id);\\n}\\n#ifdef VV\\n#define INIT loadVisualVariableData(VV_ADATA)\\n#else\\n#define INIT\\n#endif\\nvec4 getColor(in vec4 a_color, in float a_bitSet, int index) {\\n#ifdef VV_COLOR\\nfloat isColorLocked   = getBit(a_bitSet, index);\\nreturn getVVColor(VV_ADATA[ATTR_VV_COLOR], a_color, isColorLocked);\\n#else\\nreturn a_color;\\n#endif\\n}\\nfloat getOpacity() {\\n#ifdef VV_OPACITY\\nreturn getVVOpacity(VV_ADATA[ATTR_VV_OPACITY]);\\n#else\\nreturn 1.0;\\n#endif\\n}\\nfloat getSize(in float in_size, in float currentScale) {\\n#ifdef VV_SIZE\\nreturn getVVSize(in_size, VV_ADATA[ATTR_VV_SIZE], currentScale);\\n#else\\nreturn in_size;\\n#endif\\n}\\nmat3 getRotation() {\\n#ifdef VV_ROTATION\\nreturn getVVRotationMat3(mod(VV_ADATA[ATTR_VV_ROTATION], 360.0));\\n#else\\nreturn mat3(1.0);\\n#endif\\n}\\nfloat getFilterFlags() {\\n#ifdef IGNORES_SAMPLER_PRECISION\\nreturn ceil(getFilterData(a_id).x * 255.0);\\n#else\\nreturn getFilterData(a_id).x * 255.0;\\n#endif\\n}\\nvec4 getAnimationState() {\\nreturn getAnimation(a_id);\\n}\\nfloat getMinZoom() {\\nvec4 data0 = getFilterData(a_id) * 255.0;\\nreturn data0.g;\\n}\\nmat3 getMatrixNoDisplay(float isMapAligned) {\\nreturn isMapAligned * viewMat3 * tileMat3 + (1.0 - isMapAligned) * tileMat3;\\n}\\nmat3 getMatrix(float isMapAligned) {\\nreturn isMapAligned * displayViewMat3 + (1.0 - isMapAligned) * displayMat3;\\n}\\nfloat checkHighlightBit(float filterFlags, int index) {\\nreturn getHighlightBit(filterFlags, index);\\n}\\nfloat checkHighlight(float filterFlags) {\\nfloat result = checkHighlightBit(filterFlags, 0);\\nfor (int i = 1; i < highlightReasonsLength; i++) {\\nresult = result + checkHighlightBit(filterFlags, i);\\n}\\nreturn step(0.1, result);\\n}\\nvec3 clip(inout vec4 color, inout vec3 pos, in float filterFlags, in vec2 minMaxZoom) {\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 0));\\n#ifdef inside\\npos.z += 2.0 * (1.0 - getFilterBit(filterFlags, 1));\\n#elif defined(outside)\\npos.z += 2.0 * getFilterBit(filterFlags, 1);\\n#elif defined(highlight)\\n#if !defined(highlight_all)\\npos.z += 2.0 * (1.0 - checkHighlight(filterFlags));\\n#endif\\n#endif\\npos.z += 2.0 * (step(minMaxZoom.y, currentZoom) + (1.0 - step(minMaxZoom.x, currentZoom)));\\nreturn pos;\\n}\",\"vv.glsl\":\"#if defined(VV_SIZE_MIN_MAX_VALUE) || defined(VV_SIZE_SCALE_STOPS) || defined(VV_SIZE_FIELD_STOPS) || defined(VV_SIZE_UNIT_VALUE)\\n#define VV_SIZE\\n#endif\\n#if defined(VV_COLOR) || defined(VV_SIZE) || defined(VV_OPACITY) || defined(VV_ROTATION)\\n#define VV\\n#endif\\n#ifdef VV_COLOR\\nuniform highp float colorValues[8];\\nuniform vec4 colors[8];\\n#endif\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nuniform highp vec4 minMaxValueAndSize;\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nuniform highp float values[8];\\nuniform float sizes[8];\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nuniform highp float values[8];\\nuniform float sizes[8];\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nuniform highp float unitMeterRatio;\\n#endif\\n#ifdef VV_OPACITY\\nuniform highp float opacityValues[8];\\nuniform float opacities[8];\\n#endif\\n#ifdef VV_ROTATION\\nuniform lowp float rotationType;\\n#endif\\nbool isNan(float val) {\\nreturn (val == NAN_MAGIC_NUMBER);\\n}\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nfloat getVVMinMaxSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nfloat interpolationRatio = (sizeValue  - minMaxValueAndSize.x) / (minMaxValueAndSize.y - minMaxValueAndSize.x);\\ninterpolationRatio = clamp(interpolationRatio, 0.0, 1.0);\\nreturn minMaxValueAndSize.z + interpolationRatio * (minMaxValueAndSize.w - minMaxValueAndSize.z);\\n}\\n#endif\\n#ifdef VV_SIZE_SCALE_STOPS\\nfloat getVVScaleStopsSize(float currentScale) {\\nfloat outSize;\\nif (currentScale <= values[0]) {\\noutSize = sizes[0];\\n} else {\\nif (currentScale >= values[7]) {\\noutSize = sizes[7];\\n} else {\\nint index;\\nindex = -1;\\nfor (int i = 0; i < 8; i++) {\\nif (values[i] > currentScale) {\\nindex = i;\\nbreak;\\n}\\n}\\nint prevIndex = index - 1;\\nfloat a = currentScale - values[prevIndex];\\nfloat b = values[index] - values[prevIndex];\\noutSize = mix(sizes[prevIndex], sizes[index], a / b);\\n}\\n}\\nreturn outSize;\\n}\\n#endif\\n#ifdef VV_SIZE_FIELD_STOPS\\nconst int VV_SIZE_N = 8;\\nfloat getVVStopsSize(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nif (sizeValue <= values[0]) {\\nreturn sizes[0];\\n}\\nfor (int i = 1; i < VV_SIZE_N; ++i) {\\nif (values[i] >= sizeValue) {\\nfloat f = (sizeValue - values[i-1]) / (values[i] - values[i-1]);\\nreturn mix(sizes[i-1], sizes[i], f);\\n}\\n}\\nreturn sizes[VV_SIZE_N - 1];\\n}\\n#endif\\n#ifdef VV_SIZE_UNIT_VALUE\\nfloat getVVUnitValue(float sizeValue, float fallback) {\\nif (isNan(sizeValue)) {\\nreturn fallback;\\n}\\nreturn sizeValue * (metersPerSRUnit / unitMeterRatio);\\n}\\n#endif\\n#ifdef VV_OPACITY\\nconst int VV_OPACITY_N = 8;\\nfloat getVVOpacity(float opacityValue) {\\nif (isNan(opacityValue)) {\\nreturn 1.0;\\n}\\nif (opacityValue <= opacityValues[0]) {\\nreturn opacities[0];\\n}\\nfor (int i = 1; i < VV_OPACITY_N; ++i) {\\nif (opacityValues[i] >= opacityValue) {\\nfloat f = (opacityValue - opacityValues[i-1]) / (opacityValues[i] - opacityValues[i-1]);\\nreturn mix(opacities[i-1], opacities[i], f);\\n}\\n}\\nreturn opacities[VV_OPACITY_N - 1];\\n}\\n#endif\\n#ifdef VV_ROTATION\\nmat4 getVVRotation(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat4(1, 0, 0, 0,\\n0, 1, 0, 0,\\n0, 0, 1, 0,\\n0, 0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (rotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat4(cosA, sinA, 0, 0,\\n-sinA,  cosA, 0, 0,\\n0,     0, 1, 0,\\n0,     0, 0, 1);\\n}\\nmat3 getVVRotationMat3(float rotationValue) {\\nif (isNan(rotationValue)) {\\nreturn mat3(1, 0, 0,\\n0, 1, 0,\\n0, 0, 1);\\n}\\nfloat rotation = rotationValue;\\nif (rotationType == 1.0) {\\nrotation = 90.0 - rotation;\\n}\\nfloat angle = C_DEG_TO_RAD * -rotation;\\nfloat sinA = sin(angle);\\nfloat cosA = cos(angle);\\nreturn mat3(cosA, -sinA, 0,\\nsinA, cosA, 0,\\n0,    0,    1);\\n}\\n#endif\\n#ifdef VV_COLOR\\nconst int VV_COLOR_N = 8;\\nvec4 getVVColor(float colorValue, vec4 fallback, float isColorLocked) {\\nif (isNan(colorValue) || isColorLocked == 1.0) {\\nreturn fallback;\\n}\\nif (colorValue <= colorValues[0]) {\\nreturn colors[0];\\n}\\nfor (int i = 1; i < VV_COLOR_N; ++i) {\\nif (colorValues[i] >= colorValue) {\\nfloat f = (colorValue - colorValues[i-1]) / (colorValues[i] - colorValues[i-1]);\\nreturn mix(colors[i-1], colors[i], f);\\n}\\n}\\nreturn colors[VV_COLOR_N - 1];\\n}\\n#endif\\nfloat getVVSize(in float size, in float vvSize, in float currentScale)  {\\n#ifdef VV_SIZE_MIN_MAX_VALUE\\nreturn getVVMinMaxSize(vvSize, size);\\n#elif defined(VV_SIZE_SCALE_STOPS)\\nfloat outSize = getVVScaleStopsSize(currentScale);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_FIELD_STOPS)\\nfloat outSize = getVVStopsSize(vvSize, size);\\nreturn isNan(outSize) ? size : outSize;\\n#elif defined(VV_SIZE_UNIT_VALUE)\\nreturn getVVUnitValue(vvSize, size);\\n#else\\nreturn size;\\n#endif\\n}\"},overlay:{overlay:{\"overlay.frag\":\"precision lowp float;\\nuniform lowp sampler2D u_texture;\\nuniform lowp float u_opacity;\\nvarying mediump vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_texture, v_uv);\\ngl_FragColor = color *  u_opacity;\\n}\",\"overlay.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_uv;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump vec2 u_perspective;\\nvarying mediump vec2 v_uv;\\nvoid main(void) {\\nv_uv = a_uv;\\nfloat w = 1.0 + dot(a_uv, u_perspective);\\nvec3 pos = u_dvsMat3 * vec3(a_pos, 1.0);\\ngl_Position = vec4(w * pos.xy, 0.0, w);\\n}\"}},\"post-processing\":{blit:{\"blit.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_FragColor = texture2D(u_texture, v_uv);\\n}\"},bloom:{composite:{\"composite.frag\":\"precision mediump float;\\nvarying vec2 v_uv;\\nuniform sampler2D u_blurTexture1;\\nuniform sampler2D u_blurTexture2;\\nuniform sampler2D u_blurTexture3;\\nuniform sampler2D u_blurTexture4;\\nuniform sampler2D u_blurTexture5;\\nuniform float u_bloomStrength;\\nuniform float u_bloomRadius;\\nuniform float u_bloomFactors[NUMMIPS];\\nuniform vec3 u_bloomTintColors[NUMMIPS];\\nfloat lerpBloomFactor(const in float factor) {\\nfloat mirrorFactor = 1.2 - factor;\\nreturn mix(factor, mirrorFactor, u_bloomRadius);\\n}\\nvoid main() {\\nvec4 color = u_bloomStrength * (\\nlerpBloomFactor(u_bloomFactors[0]) * vec4(u_bloomTintColors[0], 1.0) * texture2D(u_blurTexture1, v_uv) +\\nlerpBloomFactor(u_bloomFactors[1]) * vec4(u_bloomTintColors[1], 1.0) * texture2D(u_blurTexture2, v_uv) +\\nlerpBloomFactor(u_bloomFactors[2]) * vec4(u_bloomTintColors[2], 1.0) * texture2D(u_blurTexture3, v_uv) +\\nlerpBloomFactor(u_bloomFactors[3]) * vec4(u_bloomTintColors[3], 1.0) * texture2D(u_blurTexture4, v_uv) +\\nlerpBloomFactor(u_bloomFactors[4]) * vec4(u_bloomTintColors[4], 1.0) * texture2D(u_blurTexture5, v_uv)\\n);\\ngl_FragColor = clamp(color, 0.0, 1.0);\\n}\"},gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\n#define SIGMA RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = float(SIGMA);\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},luminosityHighPass:{\"luminosityHighPass.frag\":\"precision mediump float;\\nuniform sampler2D u_texture;\\nuniform vec3 u_defaultColor;\\nuniform float u_defaultOpacity;\\nuniform float u_luminosityThreshold;\\nuniform float u_smoothWidth;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 texel = texture2D(u_texture, v_uv);\\nvec3 luma = vec3(0.299, 0.587, 0.114);\\nfloat v = dot(texel.xyz, luma);\\nvec4 outputColor = vec4(u_defaultColor.rgb, u_defaultOpacity);\\nfloat alpha = smoothstep(u_luminosityThreshold, u_luminosityThreshold + u_smoothWidth, v);\\ngl_FragColor = mix(outputColor, texel, alpha);\\n}\"}},blur:{gaussianBlur:{\"gaussianBlur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nuniform vec2 u_direction;\\nuniform float u_sigma;\\nvarying vec2 v_uv;\\n#define KERNEL_RADIUS RADIUS\\nfloat gaussianPdf(in float x, in float sigma) {\\nreturn 0.39894 * exp(-0.5 * x * x / ( sigma * sigma)) / sigma;\\n}\\nvoid main() {\\nvec2 invSize = 1.0 / u_texSize;\\nfloat fSigma = u_sigma;\\nfloat weightSum = gaussianPdf(0.0, fSigma);\\nvec4 pixelColorSum = texture2D(u_colorTexture, v_uv) * weightSum;\\nfor (int i = 1; i < KERNEL_RADIUS; i ++) {\\nfloat x = float(i);\\nfloat w = gaussianPdf(x, fSigma);\\nvec2 uvOffset = u_direction * invSize * x;\\nvec4 sample1 = texture2D(u_colorTexture, v_uv + uvOffset);\\nvec4 sample2 = texture2D(u_colorTexture, v_uv - uvOffset);\\npixelColorSum += (sample1 + sample2) * w;\\nweightSum += 2.0 * w;\\n}\\ngl_FragColor = pixelColorSum /weightSum;\\n}\"},\"radial-blur\":{\"radial-blur.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nconst float sampleDist = 1.0;\\nconst float sampleStrength = 2.2;\\nvoid main(void) {\\nfloat samples[10];\\nsamples[0] = -0.08;\\nsamples[1] = -0.05;\\nsamples[2] = -0.03;\\nsamples[3] = -0.02;\\nsamples[4] = -0.01;\\nsamples[5] =  0.01;\\nsamples[6] =  0.02;\\nsamples[7] =  0.03;\\nsamples[8] =  0.05;\\nsamples[9] =  0.08;\\nvec2 dir = 0.5 - v_uv;\\nfloat dist = sqrt(dir.x * dir.x + dir.y * dir.y);\\ndir = dir / dist;\\nvec4 color = texture2D(u_colorTexture,v_uv);\\nvec4 sum = color;\\nfor (int i = 0; i < 10; i++) {\\nsum += texture2D(u_colorTexture, v_uv + dir * samples[i] * sampleDist);\\n}\\nsum *= 1.0 / 11.0;\\nfloat t = dist * sampleStrength;\\nt = clamp(t, 0.0, 1.0);\\ngl_FragColor = mix(color, sum, t);\\n}\"}},dra:{\"dra.frag\":\"precision mediump float;\\nuniform sampler2D u_minColor;\\nuniform sampler2D u_maxColor;\\nuniform sampler2D u_texture;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 minColor = texture2D(u_minColor, vec2(0.5));\\nvec4 maxColor = texture2D(u_maxColor, vec2(0.5));\\nvec4 color = texture2D(u_texture, v_uv);\\nvec3 minColorUnpremultiply = minColor.rgb / minColor.a;\\nvec3 maxColorUnpremultiply = maxColor.rgb / maxColor.a;\\nvec3 colorUnpremultiply = color.rgb / color.a;\\nvec3 range = maxColorUnpremultiply - minColorUnpremultiply;\\ngl_FragColor = vec4(color.a * (colorUnpremultiply - minColorUnpremultiply) / range, color.a);\\n}\",\"min-max\":{\"min-max.frag\":\"#extension GL_EXT_draw_buffers : require\\nprecision mediump float;\\n#define CELL_SIZE 2\\nuniform sampler2D u_minTexture;\\nuniform sampler2D u_maxTexture;\\nuniform vec2 u_srcResolution;\\nuniform vec2 u_dstResolution;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec2 srcPixel = floor(gl_FragCoord.xy) * float(CELL_SIZE);\\nvec2 onePixel = vec2(1.0) / u_srcResolution;\\nvec2 uv = (srcPixel + 0.5) / u_srcResolution;\\nvec4 minColor = vec4(1.0);\\nvec4 maxColor = vec4(0.0);\\nfor (int y = 0; y < CELL_SIZE; ++y) {\\nfor (int x = 0; x < CELL_SIZE; ++x) {\\nvec2 offset = uv + vec2(x, y) * onePixel;\\nminColor = min(minColor, texture2D(u_minTexture, offset));\\nmaxColor = max(maxColor, texture2D(u_maxTexture, offset));\\n}\\n}\\ngl_FragData[0] = minColor;\\ngl_FragData[1] = maxColor;\\n}\"}},\"drop-shadow\":{composite:{\"composite.frag\":\"precision mediump float;\\nuniform sampler2D u_layerFBOTexture;\\nuniform sampler2D u_blurTexture;\\nuniform vec4 u_shadowColor;\\nuniform vec2 u_shadowOffset;\\nuniform highp mat3 u_displayViewMat3;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec3 offset = u_displayViewMat3 * vec3(u_shadowOffset, 0.0);\\nvec4 layerColor = texture2D(u_layerFBOTexture, v_uv);\\nvec4 blurColor = texture2D(u_blurTexture, v_uv - offset.xy / 2.0);\\ngl_FragColor = ((1.0 - layerColor.a) * blurColor.a * u_shadowColor + layerColor);\\n}\"}},\"edge-detect\":{\"frei-chen\":{\"frei-chen.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform vec2 u_texSize;\\nvarying vec2 v_uv;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[9];\\nconst mat3 g0 = mat3( 0.3535533845424652, 0, -0.3535533845424652, 0.5, 0, -0.5, 0.3535533845424652, 0, -0.3535533845424652 );\\nconst mat3 g1 = mat3( 0.3535533845424652, 0.5, 0.3535533845424652, 0, 0, 0, -0.3535533845424652, -0.5, -0.3535533845424652 );\\nconst mat3 g2 = mat3( 0, 0.3535533845424652, -0.5, -0.3535533845424652, 0, 0.3535533845424652, 0.5, -0.3535533845424652, 0 );\\nconst mat3 g3 = mat3( 0.5, -0.3535533845424652, 0, -0.3535533845424652, 0, 0.3535533845424652, 0, 0.3535533845424652, -0.5 );\\nconst mat3 g4 = mat3( 0, -0.5, 0, 0.5, 0, 0.5, 0, -0.5, 0 );\\nconst mat3 g5 = mat3( -0.5, 0, 0.5, 0, 0, 0, 0.5, 0, -0.5 );\\nconst mat3 g6 = mat3( 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.6666666865348816, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204 );\\nconst mat3 g7 = mat3( -0.3333333432674408, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, 0.6666666865348816, 0.1666666716337204, -0.3333333432674408, 0.1666666716337204, -0.3333333432674408 );\\nconst mat3 g8 = mat3( 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408, 0.3333333432674408 );\\nvoid main() {\\nG[0] = g0,\\nG[1] = g1,\\nG[2] = g2,\\nG[3] = g3,\\nG[4] = g4,\\nG[5] = g5,\\nG[6] = g6,\\nG[7] = g7,\\nG[8] = g8;\\nmat3 I;\\nfloat cnv[9];\\nvec3 sample;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D(u_colorTexture, v_uv + texel * vec2(i - 1.0,j - 1.0)).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 9; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nfloat M = (cnv[0] + cnv[1]) + (cnv[2] + cnv[3]);\\nfloat S = (cnv[4] + cnv[5]) + (cnv[6] + cnv[7]) + (cnv[8] + M);\\ngl_FragColor = vec4(vec3(sqrt(M / S)), texture2D(u_colorTexture, v_uv).a);\\n}\"},sobel:{\"sobel.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 2.0, 1.0, 0.0, 0.0, 0.0, -1.0, -2.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 0.0, -1.0, 2.0, 0.0, -2.0, 1.0, 0.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\ngl_FragColor = vec4(vec3(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1])), texture2D(u_colorTexture, v_uv).a);\\n}\"}},\"edge-enhance\":{\"edge-enhance.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nvarying vec2 v_uv;\\nuniform vec2 u_texSize;\\nvec2 texel = vec2(1.0 / u_texSize.x, 1.0 / u_texSize.y);\\nmat3 G[2];\\nconst mat3 g0 = mat3( 1.0, 0.0, -1.0, 1.0, 0.0, -1.0, 1.0, 0.0, -1.0 );\\nconst mat3 g1 = mat3( 1.0, 1.0, 1.0, 0.0, 0.0, 0.0, -1.0, -1.0, -1.0 );\\nvoid main() {\\nmat3 I;\\nfloat cnv[2];\\nvec3 sample;\\nG[0] = g0;\\nG[1] = g1;\\nfor (float i = 0.0; i < 3.0; i++) {\\nfor (float j = 0.0; j < 3.0; j++) {\\nsample = texture2D( u_colorTexture, v_uv + texel * vec2(i-1.0,j-1.0) ).rgb;\\nI[int(i)][int(j)] = length(sample);\\n}\\n}\\nfor (int i = 0; i < 2; i++) {\\nfloat dp3 = dot(G[i][0], I[0]) + dot(G[i][1], I[1]) + dot(G[i][2], I[2]);\\ncnv[i] = dp3 * dp3;\\n}\\nvec4 color = texture2D(u_colorTexture, v_uv);\\ngl_FragColor = vec4(0.5 * sqrt(cnv[0] * cnv[0] + cnv[1] * cnv[1]) * color);\\n}\"},filterEffect:{\"filterEffect.frag\":\"precision mediump float;\\nuniform sampler2D u_colorTexture;\\nuniform mat4 u_coefficients;\\nvarying vec2 v_uv;\\nvoid main() {\\nvec4 color = texture2D(u_colorTexture, v_uv);\\nvec4 rgbw = u_coefficients * vec4(color.a > 0.0 ? color.rgb / color.a : vec3(0.0), 1.0);\\nfloat a = color.a;\\ngl_FragColor = vec4(a * rgbw.rgb, a);\\n}\"},pp:{\"pp.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying vec2 v_uv;\\nvoid main() {\\ngl_Position = vec4(a_position, 0.0, 1.0);\\nv_uv = (a_position + 1.0) / 2.0;\\n}\"}},raster:{bitmap:{\"bitmap.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform highp vec2 u_coordScale;\\nuniform lowp float u_opacity;\\n#include <filtering/bicubic.glsl>\\nvoid main() {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_texture, v_texcoord, u_coordScale);\\n#else\\nvec4 color = texture2D(u_texture, v_texcoord);\\n#endif\\ngl_FragColor = vec4(color.rgb * u_opacity, color.a * u_opacity);\\n}\",\"bitmap.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"},common:{\"common.glsl\":\"uniform sampler2D u_image;\\nuniform int u_bandCount;\\nuniform bool u_flipY;\\nuniform float u_opacity;\\nuniform int u_resampling;\\nuniform vec2 u_srcImageSize;\\n#ifdef APPLY_PROJECTION\\n#include <raster/common/projection.glsl>\\n#endif\\n#ifdef BICUBIC\\n#include <filtering/bicubic.glsl>\\n#endif\\n#ifdef BILINEAR\\n#include <filtering/bilinear.glsl>\\n#endif\\nvec2 getPixelLocation(vec2 coords) {\\nvec2 targetLocation = u_flipY ? vec2(coords.s, 1.0 - coords.t) : coords;\\n#ifdef APPLY_PROJECTION\\ntargetLocation = projectPixelLocation(targetLocation);\\n#endif\\nreturn targetLocation;\\n}\\nbool isOutside(vec2 coords){\\nif (coords.t>1.00001 ||coords.t<-0.00001 || coords.s>1.00001 ||coords.s<-0.00001) {\\nreturn true;\\n} else {\\nreturn false;\\n}\\n}\\nvec4 getPixel(vec2 pixelLocation) {\\n#ifdef BICUBIC\\nvec4 color = sampleBicubicBSpline(u_image, pixelLocation, u_srcImageSize);\\n#elif defined(BILINEAR)\\nvec4 color = sampleBilinear(u_image, pixelLocation, u_srcImageSize);\\n#else\\nvec4 color = texture2D(u_image, pixelLocation);\\n#endif\\nreturn color;\\n}\",\"common.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform highp float u_scale;\\nuniform highp vec2 u_offset;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos * u_scale + u_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\",\"contrastBrightness.glsl\":\"uniform float u_contrastOffset;\\nuniform float u_brightnessOffset;\\nvec4 adjustContrastBrightness(vec4 currentPixel, bool isFloat) {\\nvec4 pixelValue = isFloat ? currentPixel * 255.0 : currentPixel;\\nfloat maxI = 255.0;\\nfloat mid = 128.0;\\nfloat c = u_contrastOffset;\\nfloat b = u_brightnessOffset;\\nvec4 v;\\nif (c > 0.0 && c < 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) / (2.0 * (100.0 - c)) + mid;\\n} else if (c <= 0.0 && c > -100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + 2.0 * maxI * b) * (100.0 + c) / 20000.0 + mid;\\n} else if (c == 100.0) {\\nv = (200.0 * pixelValue - 100.0 * maxI + (maxI + 1.0) * (100.0 - c) + 2.0 * maxI * b);\\nv = (sign(v) + 1.0) / 2.0;\\n} else if (c == -100.0) {\\nv = vec4(mid, mid, mid, currentPixel.a);\\n}\\nvec3 rgb = clamp(v.rgb / 255.0, 0.0, 1.0);\\nreturn vec4(rgb, currentPixel.a);\\n}\",\"getSurfaceValues.glsl\":\"#include <raster/common/mirror.glsl>\\nvoid getSurfaceValues(sampler2D imageTexture, vec2 texCoord, vec2 srcImageSize, inout float values[10]) {\\nvec2 onePixel = 1.0 / srcImageSize;\\nvec4 va = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, -1.0)));\\nvec4 vb = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, -1.0)));\\nvec4 vc = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, -1.0)));\\nvec4 vd = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 0.0)));\\nvec4 ve = texture2D(imageTexture, mirror(texCoord));\\nvec4 vf = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 0.0)));\\nvec4 vg = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(-1.0, 1.0)));\\nvec4 vh = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(0.0, 1.0)));\\nvec4 vi = texture2D(imageTexture, mirror(texCoord + onePixel * vec2(1.0, 1.0)));\\nfloat alpha = va.a * vb.a * vc.a * vd.a * ve.a * vf.a * vg.a * vh.a * vi.a;\\nvalues[0] = va.r;\\nvalues[1] = vb.r;\\nvalues[2] = vc.r;\\nvalues[3] = vd.r;\\nvalues[4] = ve.r;\\nvalues[5] = vf.r;\\nvalues[6] = vg.r;\\nvalues[7] = vh.r;\\nvalues[8] = vi.r;\\nvalues[9] = alpha;\\n}\",\"inverse.glsl\":\"float invertValue(float value) {\\nfloat s = sign(value);\\nreturn (s * s) / (value + abs(s) - 1.0);\\n}\",\"mirror.glsl\":\"vec2 mirror(vec2 pos) {\\nvec2 pos1 = abs(pos);\\nreturn step(pos1, vec2(1.0, 1.0)) * pos1 + step(1.0, pos1) * (2.0 - pos1);\\n}\",\"projection.glsl\":\"uniform sampler2D u_transformGrid;\\nuniform vec2 u_transformSpacing;\\nuniform vec2 u_transformGridSize;\\nuniform vec2 u_targetImageSize;\\nvec2 projectPixelLocation(vec2 coords) {\\n#ifdef LOOKUP_PROJECTION\\nvec4 pv = texture2D(u_transformGrid, coords);\\nreturn vec2(pv.r, pv.g);\\n#endif\\nvec2 index_image = floor(coords * u_targetImageSize);\\nvec2 oneTransformPixel = vec2(0.25 / u_transformGridSize.s, 1.0 / u_transformGridSize.t);\\nvec2 index_transform = floor(index_image / u_transformSpacing) / u_transformGridSize;\\nvec2 pos = fract((index_image + vec2(0.5, 0.5)) / u_transformSpacing);\\nvec2 srcLocation;\\nvec2 transform_location = index_transform + oneTransformPixel * 0.5;\\nif (pos.s <= pos.t) {\\nvec4 ll_abc = texture2D(u_transformGrid, vec2(transform_location.s, transform_location.t));\\nvec4 ll_def = texture2D(u_transformGrid, vec2(transform_location.s + oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ll_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ll_def.rgb, vec3(pos, 1.0));\\n} else {\\nvec4 ur_abc = texture2D(u_transformGrid, vec2(transform_location.s + 2.0 * oneTransformPixel.s, transform_location.t));\\nvec4 ur_def = texture2D(u_transformGrid, vec2(transform_location.s + 3.0 * oneTransformPixel.s, transform_location.t));\\nsrcLocation.s = dot(ur_abc.rgb, vec3(pos, 1.0));\\nsrcLocation.t = dot(ur_def.rgb, vec3(pos, 1.0));\\n}\\nreturn srcLocation;\\n}\"},flow:{\"getFadeOpacity.glsl\":\"uniform float u_decayRate;\\nuniform float u_fadeToZero;\\nfloat getFadeOpacity(float x) {\\nfloat cutOff = mix(0.0, exp(-u_decayRate), u_fadeToZero);\\nreturn (exp(-u_decayRate * x) - cutOff) / (1.0 - cutOff);\\n}\",\"getFragmentColor.glsl\":\"vec4 getFragmentColor(vec4 color, float dist, float size, float featheringSize) {\\nfloat featheringStart = clamp(0.5 - featheringSize / size, 0.0, 0.5);\\nif (dist > featheringStart) {\\ncolor *= 1.0 - (dist - featheringStart) / (0.5 - featheringStart);\\n}\\nreturn color;\\n}\",imagery:{\"imagery.frag\":\"precision highp float;\\nvarying vec2 v_texcoord;\\nuniform sampler2D u_texture;\\nuniform float u_Min;\\nuniform float u_Max;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nfloat getIntensity(float v) {\\nreturn u_Min + v * (u_Max - u_Min);\\n}\\nvoid main(void) {\\nvec4 sampled = texture2D(u_texture, v_texcoord);\\nfloat intensity = getIntensity(sampled.r);\\ngl_FragColor = getColor(intensity);\\ngl_FragColor.a *= getOpacity(sampled.r);\\ngl_FragColor.a *= sampled.a;\\ngl_FragColor.rgb *= gl_FragColor.a;\\n}\",\"imagery.vert\":\"attribute vec2 a_position;\\nattribute vec2 a_texcoord;\\nuniform mat3 u_dvsMat3;\\nvarying vec2 v_texcoord;\\nvoid main(void) {\\nvec2 xy = (u_dvsMat3 * vec3(a_position, 1.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_texcoord = a_texcoord;\\n}\"},particles:{\"particles.frag\":\"precision highp float;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/getFragmentColor.glsl>\\nvoid main(void) {\\ngl_FragColor = getFragmentColor(v_color, length(v_texcoord - 0.5), v_size, u_featheringSize);\\n}\",\"particles.vert\":\"attribute vec4 a_xyts0;\\nattribute vec4 a_xyts1;\\nattribute vec4 a_typeIdDurationSeed;\\nattribute vec4 a_extrudeInfo;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nvarying vec4 v_color;\\nvarying vec2 v_texcoord;\\nvarying float v_size;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/vv.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nvec2 position0 = a_xyts0.xy;\\nfloat t0 = a_xyts0.z;\\nfloat speed0 = a_xyts0.w;\\nvec2 position1 = a_xyts1.xy;\\nfloat t1 = a_xyts1.z;\\nfloat speed1 = a_xyts1.w;\\nfloat type = a_typeIdDurationSeed.x;\\nfloat id = a_typeIdDurationSeed.y;\\nfloat duration = a_typeIdDurationSeed.z;\\nfloat seed = a_typeIdDurationSeed.w;\\nvec2 e0 = a_extrudeInfo.xy;\\nvec2 e1 = a_extrudeInfo.zw;\\nfloat animationPeriod = duration + u_trailLength;\\nfloat scaledTime = u_time * u_flowSpeed;\\nfloat randomizedTime = scaledTime + seed * animationPeriod;\\nfloat t = mod(randomizedTime, animationPeriod);\\nfloat fUnclamped = (t - t0) / (t1 - t0);\\nfloat f = clamp(fUnclamped, 0.0, 1.0);\\nfloat clampedTime = mix(t0, t1, f);\\nfloat speed = mix(speed0, speed1, f);\\nvec2 extrude;\\nvec2 position;\\nfloat fadeOpacity;\\nfloat introOpacity;\\nif (type == 2.0) {\\nif (fUnclamped < 0.0 || (fUnclamped > 1.0 && t1 != duration)) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nvec2 ortho = mix(e0, e1, f);\\nvec2 parallel;\\nparallel = normalize(position1 - position0) * 0.5;\\nif (id == 1.0) {\\nextrude = ortho;\\nv_texcoord = vec2(0.5, 0.0);\\n} else if (id == 2.0) {\\nextrude = -ortho;\\nv_texcoord = vec2(0.5, 1.0);\\n} else if (id == 3.0) {\\nextrude = ortho + parallel;\\nv_texcoord = vec2(1.0, 0.0);\\n} else if (id == 4.0) {\\nextrude = -ortho + parallel;\\nv_texcoord = vec2(1.0, 1.0);\\n}\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else {\\nif (fUnclamped < 0.0) {\\ngl_Position = vec4(0.0, 0.0, -2.0, 1.0);\\nreturn;\\n}\\nif (id == 1.0) {\\nextrude = e0;\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 2.0) {\\nextrude = -e0;\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - t0) / u_trailLength);\\nintroOpacity = 1.0 - exp(-t0);\\nv_size = getSize(speed0);\\nv_color = getColor(speed0);\\nv_color.a *= getOpacity(speed0);\\nposition = position0;\\n} else if (id == 3.0) {\\nextrude = mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 0.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n} else if (id == 4.0) {\\nextrude = -mix(e0, e1, f);\\nv_texcoord = vec2(0.5, 1.0);\\nfadeOpacity = getFadeOpacity((t - clampedTime) / u_trailLength);\\nintroOpacity = 1.0 - exp(-clampedTime);\\nv_size = getSize(speed);\\nv_color = getColor(speed);\\nv_color.a *= getOpacity(speed);\\nposition = mix(position0, position1, f);\\n}\\n}\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(extrude * v_size, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_color.a *= fadeOpacity;\\nv_color.a *= mix(1.0, introOpacity, u_introFade);\\nv_color.rgb *= v_color.a;\\n}\"},streamlines:{\"streamlines.frag\":\"precision highp float;\\nvarying float v_side;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_size;\\nuniform float u_time;\\nuniform float u_trailLength;\\nuniform float u_flowSpeed;\\nuniform float u_featheringSize;\\nuniform float u_introFade;\\n#include <raster/flow/getFragmentColor.glsl>\\n#include <raster/flow/getFadeOpacity.glsl>\\nvoid main(void) {\\nfloat t = mod(v_timeSeed * (v_totalTime + u_trailLength) + u_time * u_flowSpeed, v_totalTime + u_trailLength) - v_time;\\nvec4 color = v_color * step(0.0, t) * getFadeOpacity(t / u_trailLength);\\ncolor *= mix(1.0, 1.0 - exp(-v_time), u_introFade);\\ngl_FragColor = getFragmentColor(color, length((v_side + 1.0) / 2.0 - 0.5), v_size, u_featheringSize);\\n}\",\"streamlines.vert\":\"attribute vec3 a_positionAndSide;\\nattribute vec3 a_timeInfo;\\nattribute vec2 a_extrude;\\nattribute float a_speed;\\nuniform mat3 u_dvsMat3;\\nuniform mat3 u_displayViewMat3;\\nvarying float v_time;\\nvarying float v_totalTime;\\nvarying float v_timeSeed;\\nvarying vec4 v_color;\\nvarying float v_side;\\nvarying float v_size;\\nuniform float u_featheringSize;\\n#include <raster/flow/vv.glsl>\\nvoid main(void) {\\nvec4 lineColor = getColor(a_speed);\\nfloat lineOpacity = getOpacity(a_speed);\\nfloat lineSize = getSize(a_speed);\\nvec2 position = a_positionAndSide.xy;\\nv_side = a_positionAndSide.z;\\nvec2 xy = (u_dvsMat3 * vec3(position, 1.0) + u_displayViewMat3 * vec3(a_extrude * lineSize, 0.0)).xy;\\ngl_Position = vec4(xy, 0.0, 1.0);\\nv_time = a_timeInfo.x;\\nv_totalTime = a_timeInfo.y;\\nv_timeSeed = a_timeInfo.z;\\nv_color = lineColor;\\nv_color.a *= lineOpacity;\\nv_color.rgb *= v_color.a;\\nv_size = lineSize;\\n}\"},\"vv.glsl\":\"#define MAX_STOPS 8\\n#ifdef VV_COLOR\\nuniform float u_color_stops[MAX_STOPS];\\nuniform vec4 u_color_values[MAX_STOPS];\\nuniform int u_color_count;\\n#else\\nuniform vec4 u_color;\\n#endif\\n#ifdef VV_OPACITY\\nuniform float u_opacity_stops[MAX_STOPS];\\nuniform float u_opacity_values[MAX_STOPS];\\nuniform int u_opacity_count;\\n#else\\nuniform float u_opacity;\\n#endif\\n#ifdef VV_SIZE\\nuniform float u_size_stops[MAX_STOPS];\\nuniform float u_size_values[MAX_STOPS];\\nuniform int u_size_count;\\n#else\\nuniform float u_size;\\n#endif\\nuniform float u_featheringOffset;\\nvec4 getColor(float x) {\\n#ifdef VV_COLOR\\nvec4 color = u_color_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_color_count) {\\nbreak;\\n}\\nfloat x1 = u_color_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_color_stops[i];\\nvec4 y2 = u_color_values[i];\\nif (x < x2) {\\nvec4 y1 = u_color_values[i - 1];\\ncolor = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\ncolor = y2;\\n}\\n}\\n}\\n#else\\nvec4 color = u_color;\\n#endif\\nreturn color;\\n}\\nfloat getOpacity(float x) {\\n#ifdef VV_OPACITY\\nfloat opacity = u_opacity_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_opacity_count) {\\nbreak;\\n}\\nfloat x1 = u_opacity_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_opacity_stops[i];\\nfloat y2 = u_opacity_values[i];\\nif (x < x2) {\\nfloat y1 = u_opacity_values[i - 1];\\nopacity = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nopacity = y2;\\n}\\n}\\n}\\n#else\\nfloat opacity = u_opacity;\\n#endif\\nreturn opacity;\\n}\\nfloat getSize(float x) {\\n#ifdef VV_SIZE\\nfloat size = u_size_values[0];\\n{\\nfor (int i = 1; i < MAX_STOPS; i++) {\\nif (i >= u_size_count) {\\nbreak;\\n}\\nfloat x1 = u_size_stops[i - 1];\\nif (x < x1) {\\nbreak;\\n}\\nfloat x2 = u_size_stops[i];\\nfloat y2 = u_size_values[i];\\nif (x < x2) {\\nfloat y1 = u_size_values[i - 1];\\nsize = y1 + (y2 - y1) * (x - x1) / (x2 - x1);\\n} else {\\nsize = y2;\\n}\\n}\\n}\\n#else\\nfloat size = u_size;\\n#endif\\nreturn size + 2.0 * u_featheringSize * u_featheringOffset;\\n}\"},hillshade:{\"hillshade.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform int u_hillshadeType;\\nuniform float u_sinZcosAs[6];\\nuniform float u_sinZsinAs[6];\\nuniform float u_cosZs[6];\\nuniform float u_weights[6];\\nuniform vec2 u_factor;\\nuniform float u_minValue;\\nuniform float u_maxValue;\\n#include <raster/lut/colorize.glsl>\\n#include <raster/common/getSurfaceValues.glsl>\\nvec3 rgb2hsv(vec3 c) {\\nvec4 K = vec4(0.0, -1.0 / 3.0, 2.0 / 3.0, -1.0);\\nvec4 p = c.g < c.b ? vec4(c.bg, K.wz) : vec4(c.gb, K.xy);\\nvec4 q = c.r < p.x ? vec4(p.xyw, c.r) : vec4(c.r, p.yzx);\\nfloat d = q.x - min(q.w, q.y);\\nfloat e = 1.0e-10;\\nreturn vec3(abs(q.z + (q.w - q.y) / (6.0 * d + e)), min(d / (q.x + e), 1.0), q.x);\\n}\\nvec3 hsv2rgb(vec3 c) {\\nvec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\nvec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\nreturn c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\nvec4 overlay(float val, float minValue, float maxValue, float hillshade) {\\nval = clamp((val - minValue) / (maxValue - minValue), 0.0, 1.0);\\nvec4 rgb = colorize(vec4(val, val, val, 1.0), 255.0);\\nvec3 hsv = rgb2hsv(rgb.xyz);\\nhsv.z = hillshade;\\nreturn vec4(hsv2rgb(hsv), 1.0) * rgb.a;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nif (currentPixel.a == 0.0) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nfloat pv[10];\\ngetSurfaceValues(u_image, pixelLocation, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * u_factor.s;\\nfloat dzy = (pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * u_factor.t;\\nfloat dzd = sqrt(1.0 + dzx * dzx + dzy * dzy);\\nfloat hillshade = 0.0;\\nif (u_hillshadeType == 0){\\nfloat cosDelta = u_sinZsinAs[0] * dzy - u_sinZcosAs[0] * dzx;\\nfloat z = (u_cosZs[0] + cosDelta) / dzd;\\nif (z < 0.0)  z = 0.0;\\nhillshade = z;\\n} else {\\nfor (int k = 0; k < 6; k++) {\\nfloat cosDelta = u_sinZsinAs[k] * dzy - u_sinZcosAs[k] * dzx;\\nfloat z = (u_cosZs[k] + cosDelta) / dzd;\\nif (z < 0.0) z = 0.0;\\nhillshade = hillshade + z * u_weights[k];\\nif (k == 5) break;\\n}\\n}\\n#ifdef APPLY_COLORMAP\\ngl_FragColor = overlay(pv[4], u_minValue, u_maxValue, hillshade) * alpha * u_opacity;\\n#else\\ngl_FragColor = vec4(hillshade, hillshade, hillshade, 1.0) * alpha * u_opacity;\\n#endif\\n}\"},lut:{\"colorize.glsl\":\"uniform sampler2D u_colormap;\\nuniform float u_colormapOffset;\\nuniform float u_colormapMaxIndex;\\nvec4 colorize(vec4 currentPixel, float scaleFactor) {\\nfloat clrIndex = clamp(currentPixel.r * scaleFactor - u_colormapOffset, 0.0, u_colormapMaxIndex);\\nvec2 clrPosition = vec2((clrIndex + 0.5) / (u_colormapMaxIndex + 1.0), 0.0);\\nvec4 color = texture2D(u_colormap, clrPosition);\\nvec4 result = vec4(color.rgb, color.a * currentPixel.a);\\nreturn result;\\n}\",\"lut.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\n#include <raster/lut/colorize.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\nvec4 result = colorize(currentPixel, 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * u_opacity;\\n}\"},magdir:{\"magdir.frag\":\"precision mediump float;\\nvarying vec4 v_color;\\nuniform lowp float u_opacity;\\nvoid main() {\\ngl_FragColor = v_color * u_opacity;\\n}\",\"magdir.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nuniform float u_rotation;\\nuniform vec4 u_colors[12];\\nvarying vec4 v_color;\\nvoid main()\\n{\\nfloat angle = a_offset.y + u_rotation;\\n#ifndef ROTATION_GEOGRAPHIC\\nangle = 3.14159265359 * 2.0 - angle - 3.14159265359 / 2.0;\\n#endif\\nvec2 offset = vec2(cos(angle), sin(angle)) * a_offset.x;\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 pos = a_pos + offset * sizePercentage * u_symbolSize;\\nv_color = u_colors[int(a_vv.x)];\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},reproject:{\"reproject.frag\":\"precision mediump float;\\nvarying vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\n}\",\"reproject.vert\":\"precision mediump float;\\nattribute vec2 a_position;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_position;\\ngl_Position = vec4(2.0 * (a_position - 0.5), 0.0, 1.0);\\n}\"},rfx:{aspect:{\"aspect.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_cellSize;\\nuniform vec2 u_srcImageSize;\\n#include <raster/common/getSurfaceValues.glsl>\\nconst float pi = 3.14159265359;\\nvoid main() {\\nfloat pv[10];\\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) / (8.0 * u_cellSize[0]);\\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) / (8.0 * u_cellSize[1]);\\nalpha *= sign(abs(dzx) + abs(dzy));\\nfloat aspect_rad = (dzx == 0.0) ? (step(0.0, dzy) * 0.5 * pi + step(dzy, 0.0) * 1.5 * pi) : mod((2.5 * pi + atan(dzy, -dzx)), 2.0 * pi);\\nfloat aspect = aspect_rad * 180.0 / pi;\\ngl_FragColor = vec4(aspect, aspect, aspect, 1.0) * alpha;\\n}\"},bandarithmetic:{\"bandarithmetic.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\nuniform float u_adjustments[3];\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\nfloat nir = pv2.r;\\nfloat red = pv2.g;\\nfloat index;\\n#ifdef NDXI\\nindex = (nir - red) * invertValue(nir + red);\\n#elif defined(SR)\\nindex = nir * invertValue(red);\\n#elif defined(CI)\\nindex = nir * invertValue(red) - 1.0;\\n#elif defined(SAVI)\\nindex = (nir - red) * invertValue(nir + red + u_adjustments[0]) * (1.0 + u_adjustments[0]);\\n#elif defined(TSAVI)\\nfloat s = u_adjustments[0];\\nfloat a = u_adjustments[1];\\nfloat x = u_adjustments[2];\\nfloat y = -a * s + x * (1.0 + s * s);\\nindex = (s * (nir - s * red - a)) * invertValue(a * nir + red + y);\\n#elif defined(MSAVI)\\nfloat nir2 = 2.0 * nir + 1.0;\\nindex = 0.5 * (nir2 - sqrt(nir2 * nir2 - 8.0 * (nir - red)));\\n#elif defined(GEMI)\\nfloat eta = (2.0 * (nir * nir - red * red) + 1.5 * nir + 0.5 * red) * invertValue(nir + red + 0.5);\\nindex = eta * (1.0 - 0.25 * eta) - (red - 0.125) * invertValue(1.0 - red);\\n#elif defined(PVI)\\nfloat a = u_adjustments[0];\\nfloat b = u_adjustments[1];\\nfloat y = sqrt(1.0 + a * a);\\nindex = (nir - a * red - b) * invertValue(y);\\n#elif defined(VARI)\\nindex = (pv2.g - pv2.r) * invertValue(pv2.g + pv2.r - pv2.b);\\n#elif defined(MTVI)\\nfloat green = pv2.b;\\nfloat v = sqrt(pow((2.0 * nir + 1.0), 2.0) - (6.0 * nir - 5.0 * sqrt(red)) - 0.5);\\nindex = 1.5 * (1.2 * (nir - green) - 2.5 * (red - green)) * invertValue(v);\\n#elif defined(RTVICORE)\\nfloat green = pv2.b;\\nindex = 100.0 * (nir - red) - 10.0 * (nir - green);\\n#elif defined(EVI)\\nfloat blue = pv2.b;\\nfloat denom = nir + 6.0 * red - 7.5 * blue + 1.0;\\nindex =  (2.5 * (nir - red)) * invertValue(denom);\\n#elif defined(WNDWI)\\nfloat g = pv2.r;\\nfloat n = pv2.g;\\nfloat s = pv2.s;\\nfloat a = u_adjustments[0];\\nfloat denom = g + a * n + (1.0 - a) * s;\\nindex = (g - a * n - (1 - a) * s) * invertValue(denom);\\n#elif defined(BAI)\\nindex = invertValue(pow((0.1 - red), 2.0) + pow((0.06 - nir), 2.0));\\n#else\\ngl_FragColor = pv;\\nreturn;\\n#endif\\ngl_FragColor = vec4(index, index, index, pv.a);\\n}\"},compositeband:{\"compositeband.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nuniform sampler2D u_image1;\\nuniform sampler2D u_image2;\\n#ifdef ONE_CONSTANT\\nuniform float u_image1Const;\\n#ifdef TWO_CONSTANT\\nuniform float u_image2Const;\\n#endif\\nuniform mat3 u_imageSwap;\\n#endif\\nvarying vec2 v_texcoord;\\nvoid main() {\\nvec4 pv0 = texture2D(u_image, v_texcoord);\\nfloat a = pv0.r;\\nfloat alpha = pv0.a;\\n#ifdef TWO_CONSTANT\\nfloat b = u_image1Const;\\nfloat c = u_image2Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\n#elif defined(ONE_CONSTANT)\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = u_image1Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\nalpha *= pv1.a;\\n#else\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nvec4 pv2 = texture2D(u_image2, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = pv2.r;\\nalpha = alpha * pv1.a * pv2.a;\\n#endif\\ngl_FragColor = vec4(a, b, c, alpha);\\n}\"},contrast:{\"contrast.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#include <raster/common/contrastBrightness.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec4 result = adjustContrastBrightness(pv, false) ;\\ngl_FragColor = vec4(result.rgb * 255.0, result.a);\\n}\"},convolution:{\"convolution.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_srcImageSize;\\n#define KERNEL_SIZE_ROWS ROWS\\n#define KERNEL_SIZE_COLS COLS\\nuniform vec2 u_clampRange;\\nuniform float u_kernel[25];\\n#include <raster/common/mirror.glsl>\\nvoid main() {\\nvec3 rgb = vec3(0.0, 0.0, 0.0);\\nvec2 resolution = 1.0 / u_srcImageSize;\\nfloat rowOffset = -float(floor(float(KERNEL_SIZE_ROWS) / 2.0));\\nfloat colOffset = -float(floor(float(KERNEL_SIZE_COLS) / 2.0));\\nfloat alpha = 1.0;\\nfor (int row = 0; row < KERNEL_SIZE_ROWS; row++) {\\nfloat pos_row = rowOffset + float(row);\\nfor (int col = 0; col < KERNEL_SIZE_COLS; col++) {\\nvec2 pos = v_texcoord + vec2(colOffset + float(col), pos_row) * resolution;\\nvec4 pv = texture2D(u_image, mirror(pos));\\nrgb += pv.rgb * u_kernel[row * KERNEL_SIZE_COLS + col];\\nalpha *= pv.a;\\n}\\n}\\nrgb = clamp(rgb, u_clampRange.s, u_clampRange.t);\\ngl_FragColor = vec4(rgb * alpha, alpha);\\n}\"},curvature:{\"curvature.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform float u_zlFactor;\\nuniform vec2 u_srcImageSize;\\n#include <raster/common/getSurfaceValues.glsl>\\nvoid main() {\\nfloat pv[10];\\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat d = ((pv[3] + pv[5]) * 0.5 - pv[4]);\\nfloat e = ((pv[1] + pv[7]) * 0.5 - pv[4]);\\nfloat curvature = 0.0;\\n#ifdef STANDARD\\ncurvature = -u_zlFactor * (d + e);\\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\\n#else\\nfloat f = (-pv[0] + pv[2] + pv[6] - pv[8]) / 4.0;\\nfloat g = (-pv[3] + pv[5]) / 2.0;\\nfloat h = (pv[1] - pv[7]) / 2.0;\\nfloat g2 = g * g;\\nfloat h2 = h * h;\\n#ifdef PROFILE\\ncurvature = (u_zlFactor * (d * g2 + e * h2 + f * g * h)) / (g2 + h2);\\n#else\\ncurvature = (-u_zlFactor * (d * h2 + e * g2 - f * g * h)) / (g2 + h2);\\n#endif\\n#endif\\ngl_FragColor = vec4(curvature, curvature, curvature, alpha);\\n}\"},extractband:{\"extractband.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\ngl_FragColor = vec4(pv2, pv.a);\\n}\"},focalstatistics:{\"focalstatistics.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_srcImageSize;\\n#define KERNEL_SIZE_ROWS ROWS\\n#define KERNEL_SIZE_COLS COLS\\nuniform vec2 u_clampRange;\\n#include <raster/common/mirror.glsl>\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec2 resolution = 1.0 / u_srcImageSize;\\nfloat rowOffset = -float(floor(float(KERNEL_SIZE_ROWS) / 2.0));\\nfloat colOffset = -float(floor(float(KERNEL_SIZE_COLS) / 2.0));\\nfloat count = 0.0;\\n#ifdef STDDEV\\nvec3 sum = vec3(0.0, 0.0, 0.0);\\nvec3 sum2 = vec3(0.0, 0.0, 0.0);\\n#endif\\nvec4 currentPixel = texture2D(u_image, v_texcoord);\\nvec3 rgb = currentPixel.rgb;\\nfor (int row = 0; row < KERNEL_SIZE_ROWS; row++) {\\nfloat pos_row = rowOffset + float(row);\\nfor (int col = 0; col < KERNEL_SIZE_COLS; col++) {\\nvec2 pos = v_texcoord + vec2(colOffset + float(col), pos_row) * resolution;\\nvec4 pv = texture2D(u_image, mirror(pos));\\ncount += pv.a;\\n#ifdef MIN\\nrgb = min(rgb, pv.rgb);\\n#elif defined(MAX)\\nrgb = max(rgb, pv.rgb);\\n#elif defined(MEAN)\\nrgb += pv.rgb;\\n#elif defined(STDDEV)\\nsum += pv.rgb;\\nsum2 += (pv.rgb * pv.rgb);\\n#endif\\n}\\n}\\n#ifdef MEAN\\nrgb *= invertValue(count);\\n#elif defined(STDDEV)\\nrgb = sqrt((sum2 - sum * sum * invertValue(count)) * invertValue(count));\\n#endif\\nfloat alpha = step(0.9999, count);\\nrgb = clamp(rgb, u_clampRange.s, u_clampRange.t);\\n#ifdef FILL\\nrgb = (1.0 - currentPixel.a) * rgb + currentPixel.a * currentPixel.rgb;\\n#endif\\ngl_FragColor = vec4(rgb * alpha, alpha);\\n}\"},grayscale:{\"grayscale.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec3 u_weights;\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nfloat value = dot(u_weights, pv.rgb);\\ngl_FragColor = vec4(value, value, value, pv.a);\\n}\"},local:{\"local.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nuniform sampler2D u_image1;\\n#ifdef ONE_CONSTANT\\nuniform float u_image1Const;\\n#ifdef TWO_CONSTANT\\nuniform float u_image2Const;\\n#endif\\nuniform mat3 u_imageSwap;\\n#endif\\nvarying vec2 v_texcoord;\\nuniform vec2 u_domainRange;\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv0 = texture2D(u_image, v_texcoord);\\nfloat a = pv0.r;\\n#ifdef TWO_IMAGES\\n#ifdef ONE_CONSTANT\\nfloat b = u_image1Const;\\nvec3 abc = u_imageSwap * vec3(a, b, 0);\\na = abc.s;\\nb = abc.t;\\n#else\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nfloat b = pv1.r;\\n#endif\\n#elif defined(CONDITIONAL)\\n#ifdef TWO_CONSTANT\\nfloat b = u_image1Const;\\nfloat c = u_image2Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\n#elif defined(ONE_CONSTANT)\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = u_image1Const;\\nvec3 abc = u_imageSwap * vec3(a, b, c);\\na = abc.s;\\nb = abc.t;\\nc = abc.p;\\n#else\\nvec4 pv1 = texture2D(u_image1, v_texcoord);\\nvec4 pv2 = texture2D(u_image2, v_texcoord);\\nfloat b = pv1.r;\\nfloat c = pv2.r;\\n#endif\\n#endif\\nfloat result = a;\\nfloat alpha = pv0.a;\\n#ifdef PLUS\\nresult = a + b;\\n#elif defined(MINUS)\\nresult = a - b;\\n#elif defined(TIMES)\\nresult = a * b;\\n#elif defined(DIVIDE)\\nresult = a * invertValue(b);\\nalpha *= float(abs(sign(b)));\\n#elif defined(FLOATDIVIDE)\\nresult = a * invertValue(b);\\nalpha *= float(abs(sign(b)));\\n#elif defined(FLOORDIVIDE)\\nresult = floor(a * invertValue(b));\\nalpha *= float(abs(sign(b)));\\n#elif defined(SQUARE)\\nresult = a * a;\\n#elif defined(SQRT)\\nresult = sqrt(a);\\n#elif defined(POWER)\\nresult = pow(a, b);\\n#elif defined(LN)\\nresult = a <= 0.0 ? 0.0: log(a);\\nalpha *= float(a > 0.0);\\n#elif defined(LOG_1_0)\\nresult = a <= 0.0 ? 0.0: log2(a) * invertValue(log2(10.0));\\nalpha *= float(a > 0.0);\\n#elif defined(LOG_2)\\nresult = a <= 0.0 ? 0.0: log2(a);\\nalpha *= float(a > 0.0);\\n#elif defined(EXP)\\nresult = exp(a);\\n#elif defined(EXP_1_0)\\nresult = pow(10.0, a);\\n#elif defined(EXP_2)\\nresult = pow(2.0, a);\\n#elif defined(ROUNDDOWN)\\nresult = floor(a);\\n#elif defined(ROUNDUP)\\nresult = ceil(a);\\n#elif defined(INT)\\nresult = float(sign(a)) * floor(abs(a));\\n#elif defined(MOD)\\nresult = mod(a, b);\\n#elif defined(NEGATE)\\nresult = -a;\\n#elif defined(ABS)\\nresult = abs(a);\\n#elif defined(ACOS)\\nresult = abs(a) > 1.0 ? 0.0: acos(a);\\nalpha *= step(abs(a), 1.00001);\\n#elif defined(ACOSH)\\nresult = acosh(a);\\n#elif defined(ASIN)\\nresult = abs(a) > 1.0 ? 0.0: asin(a);\\nalpha *= step(abs(a), 1.00001);\\n#elif defined(ASINH)\\nresult = asinh(a);\\n#elif defined(ATAN)\\nresult = atan(a);\\n#elif defined(ATANH)\\nresult = abs(a) > 1.0 ? 0.0: atanh(a);\\nalpha *= step(abs(a), 1.0);\\n#elif defined(ATAN_2)\\nresult = atan(a, b);\\n#elif defined(COS)\\nresult = cos(a);\\n#elif defined(COSH)\\nresult = cosh(a);\\n#elif defined(SIN)\\nresult = sin(a);\\n#elif defined(SINH)\\nresult = sinh(a);\\n#elif defined(TAN)\\nresult = tan(a);\\n#elif defined(TANH)\\nresult = tanh(a);\\n#elif defined(BITWISEAND)\\nresult = a & b;\\n#elif defined(BITWISEOR)\\nresult = a | b;\\n#elif defined(BITWISELEFTSHIFT)\\nresult = a << b;\\n#elif defined(BITWISERIGHTSHIFT)\\nresult = a >> b;\\n#elif defined(BITWISENOT)\\nresult = ~a;\\n#elif defined(BITWISEXOR)\\nresult = a ^ b;\\n#elif defined(BOOLEANAND)\\nresult = float((a != 0.0) && (b != 0.0));\\n#elif defined(BOOLEANNOT)\\nresult = float(a == 0.0);\\n#elif defined(BOOLEANOR)\\nresult = float((a != 0.0) || (b != 0.0));\\n#elif defined(BOOLEANXOR)\\nresult = float((a != 0.0) ^^ (b != 0.0));\\n#elif defined(GREATERTHAN)\\nresult = float(a > b);\\n#elif defined(GREATERTHANEQUAL)\\nresult = float(a >= b);\\n#elif defined(LESSTHAN)\\nresult = float(a < b);\\n#elif defined(LESSTHANEQUAL)\\nresult = float(a <= b);\\n#elif defined(EQUALTO)\\nresult = float(a == b);\\n#elif defined(NOTEQUAL)\\nresult = float(a != b);\\n#elif defined(ISNULL)\\nresult = float(alpha == 0.0);\\nalpha = 1.0;\\n#elif defined(SETNULL)\\nfloat maskValue = float(a == 0.0);\\nresult = maskValue * b;\\nalpha *= maskValue;\\n#elif defined(CONDITIONAL)\\nfloat weight = float(abs(sign(a)));\\nresult = weight * b + (1.0 - weight) * c;\\n#endif\\nbool isInvalid = result < u_domainRange.s || result > u_domainRange.t;\\nresult = isInvalid ? 0.0 : result;\\nalpha *= float(!isInvalid);\\n#ifdef ROUND_OUTPUT\\nresult = floor(result + 0.5);\\n#endif\\ngl_FragColor = vec4(result, result, result, alpha);\\n}\"},mask:{\"mask.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#define LEN_INCLUDED_RANGES 6\\n#define LEN_NODATA_VALUES 6\\nuniform highp float u_includedRanges[6];\\nuniform highp float u_noDataValues[6];\\nfloat maskFactor(float bandValue, float fromValue, float to) {\\nfloat factor = 1.0;\\nfor (int i = 0; i < LEN_NODATA_VALUES; i++) {\\nfactor *= float(u_noDataValues[i] != bandValue);\\n}\\nfactor *= step(fromValue, bandValue) * step(bandValue, to);\\nreturn factor;\\n}\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nfloat redFactor = maskFactor(pv.r, u_includedRanges[0], u_includedRanges[1]);\\n#ifdef MULTI_BAND\\nfloat greenFactor = maskFactor(pv.g, u_includedRanges[2], u_includedRanges[3]);\\nfloat blueFactor = maskFactor(pv.b, u_includedRanges[4], u_includedRanges[5]);\\nfloat maskFactor = redFactor * greenFactor * blueFactor;\\ngl_FragColor = pv * maskFactor;\\n#else\\ngl_FragColor = pv * redFactor;\\n#endif\\n}\"},ndvi:{\"ndvi.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform mediump mat3 u_bandIndexMat3;\\n#include <raster/common/inverse.glsl>\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nvec3 pv2 = u_bandIndexMat3 * pv.rgb;\\nfloat nir = pv2.r;\\nfloat red = pv2.g;\\nfloat index = (nir - red) * invertValue(nir + red);\\n#ifdef SCALED\\nindex = floor((index + 1.0) * 100.0 + 0.5);\\n#endif\\ngl_FragColor = vec4(index, index, index, pv.a);\\n}\"},remap:{\"remap.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\n#define LEN_REMAP_RANGES 18\\n#define LEN_NODATA_RANGES 12\\nuniform highp float u_rangeMaps[18];\\nuniform highp float u_noDataRanges[12];\\nuniform highp float u_unmatchMask;\\nuniform vec2 u_clampRange;\\nvoid main() {\\nvec4 pv = texture2D(u_image, v_texcoord);\\nfloat factor = 1.0;\\nfloat bandValue = pv.r;\\nfor (int i = 0; i < LEN_NODATA_RANGES; i+=2) {\\nfloat inside = 1.0 - step(u_noDataRanges[i], bandValue) * step(bandValue, u_noDataRanges[i+1]);\\nfactor *= inside;\\n}\\nfloat mapValue = 0.0;\\nfloat includeMask = 0.0;\\nfor (int i = 0; i < LEN_REMAP_RANGES; i+=3) {\\nfloat stepMask = step(u_rangeMaps[i], bandValue) * step(bandValue, u_rangeMaps[i+1]);\\nincludeMask = (1.0 - stepMask) * includeMask + stepMask;\\nmapValue = (1.0 - stepMask) * mapValue + stepMask * u_rangeMaps[i+2];\\n}\\nbandValue = factor * (mapValue + (1.0 - includeMask) * u_unmatchMask * pv.r);\\nfloat bandMask = factor * max(u_unmatchMask, includeMask);\\nbandValue = clamp(bandValue, u_clampRange.s, u_clampRange.t);\\ngl_FragColor = vec4(bandValue, bandValue, bandValue, bandMask * pv.a);\\n}\"},slope:{\"slope.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying vec2 v_texcoord;\\nuniform vec2 u_cellSize;\\nuniform float u_zFactor;\\nuniform vec2 u_srcImageSize;\\nuniform float u_pixelSizePower;\\nuniform float u_pixelSizeFactor;\\n#include <raster/common/getSurfaceValues.glsl>\\nvoid main() {\\nfloat pv[10];\\ngetSurfaceValues(u_image, v_texcoord, u_srcImageSize, pv);\\nfloat alpha = pv[9];\\nfloat xf = (u_zFactor + pow(u_cellSize[0], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[0]);\\nfloat yf = (u_zFactor + pow(u_cellSize[1], u_pixelSizePower) * u_pixelSizeFactor) / (8.0 * u_cellSize[1]);\\nfloat dzx = (pv[2] + 2.0 * pv[5] + pv[8] - pv[0] - 2.0 * pv[3] - pv[6]) * xf;\\nfloat dzy = -(pv[6] + 2.0 * pv[7] + pv[8] - pv[0] - 2.0 * pv[1] - pv[2]) * yf;\\nfloat rise2run = sqrt(dzx * dzx + dzy * dzy);\\n#ifdef PERCENT_RISE\\nfloat percentRise = rise2run * 100.0;\\ngl_FragColor = vec4(percentRise, percentRise, percentRise, alpha);\\n#else\\nfloat degree = atan(rise2run) * 57.2957795;\\ngl_FragColor = vec4(degree, degree, degree, alpha);\\n#endif\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nuniform sampler2D u_image;\\nvarying highp vec2 v_texcoord;\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, float gamma, float gammaCorrection) {\\nval = clamp(val, minCutOff, maxCutOff);\\nfloat stretchedVal;\\n#ifdef USE_GAMMA\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\ntempf -= step(1.0, gamma) * sign(gamma - 1.0) * pow(1.0 / outRange, relativeVal * gammaCorrection);\\nstretchedVal = tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput;\\nstretchedVal = clamp(stretchedVal, minOutput, maxOutput);\\n#else\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n#endif\\n#ifdef ROUND_OUTPUT\\nstretchedVal = floor(stretchedVal + 0.5);\\n#endif\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec4 currentPixel = texture2D(u_image, v_texcoord);\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_gamma[0], u_gammaCorrection[0]);\\n#ifdef MULTI_BAND\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, currentPixel.a);\\n#else\\ngl_FragColor = vec4(redVal, redVal, redVal, currentPixel.a);\\n#endif\\n}\"},vs:{\"vs.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nvarying highp vec2 v_texcoord;\\nvoid main()\\n{\\nv_texcoord = a_pos;\\ngl_Position = vec4(u_dvsMat3 * vec3(a_pos * u_coordScale, 1.0), 1.0);\\n}\"}},scalar:{\"scalar.frag\":\"precision mediump float;\\nuniform lowp float u_opacity;\\nvarying vec2 v_pos;\\nconst vec4 outlineColor = vec4(0.2, 0.2, 0.2, 1.0);\\nconst float outlineSize = 0.02;\\nconst float innerRadius = 0.25;\\nconst float outerRadius = 0.42;\\nconst float innerSquareLength = 0.15;\\nvoid main() {\\nmediump float dist = length(v_pos);\\nmediump float fillalpha1 = smoothstep(outerRadius, outerRadius + outlineSize, dist);\\nfillalpha1 *= (1.0-smoothstep(outerRadius + outlineSize, outerRadius + 0.1 + outlineSize, dist));\\n#ifdef INNER_CIRCLE\\nmediump float fillalpha2 = smoothstep(innerRadius, innerRadius + outlineSize, dist);\\nfillalpha2 *= (1.0-smoothstep(innerRadius + outlineSize, innerRadius + 0.1 + outlineSize, dist));\\n#else\\nmediump float fillalpha2 = (abs(v_pos.x) < innerSquareLength ? 1.0 : 0.0) * (abs(v_pos.y) < innerSquareLength ? 1.0 : 0.0);\\n#endif\\ngl_FragColor = (fillalpha2 + fillalpha1) * outlineColor * u_opacity;\\n}\",\"scalar.vert\":\"precision mediump float;\\nattribute vec2 a_pos;\\nattribute vec2 a_offset;\\nattribute vec2 a_vv;\\nuniform highp mat3 u_dvsMat3;\\nuniform highp vec2 u_coordScale;\\nuniform vec2 u_symbolSize;\\nuniform vec2 u_symbolPercentRange;\\nuniform vec2 u_dataRange;\\nvarying vec2 v_pos;\\nvoid main()\\n{\\n#ifdef DATA_RANGE\\nfloat valuePercentage = clamp((a_vv.y - u_dataRange.x) / (u_dataRange.y - u_dataRange.x), 0.0, 1.0);\\nfloat sizeRatio = u_symbolPercentRange.x + valuePercentage * (u_symbolPercentRange.y - u_symbolPercentRange.x);\\nfloat sizePercentage = clamp(sizeRatio, u_symbolPercentRange.x, u_symbolPercentRange.y);\\n#else\\nfloat sizePercentage = (u_symbolPercentRange.x + u_symbolPercentRange.y) / 2.0;\\n#endif\\nvec2 size = u_symbolSize * sizePercentage;\\nvec2 pos = a_pos + a_offset * size;\\nv_pos = a_offset;\\ngl_Position = vec4(u_dvsMat3 * vec3(pos * u_coordScale, 1.0), 1.0);\\n}\"},stretch:{\"stretch.frag\":\"precision mediump float;\\nvarying highp vec2 v_texcoord;\\n#include <raster/common/common.glsl>\\nuniform float u_minCutOff[3];\\nuniform float u_maxCutOff[3];\\nuniform float u_minOutput;\\nuniform float u_maxOutput;\\nuniform float u_factor[3];\\nuniform bool u_useGamma;\\nuniform float u_gamma[3];\\nuniform float u_gammaCorrection[3];\\n#include <raster/lut/colorize.glsl>\\nfloat stretchOneValue(float val, float minCutOff, float maxCutOff, float minOutput, float maxOutput, float factor, bool useGamma, float gamma, float gammaCorrection) {\\nif (val >= maxCutOff) {\\nreturn maxOutput;\\n} else if (val <= minCutOff) {\\nreturn minOutput;\\n}\\nfloat stretchedVal;\\nif (useGamma) {\\nfloat tempf = 1.0;\\nfloat outRange = maxOutput - minOutput;\\nfloat relativeVal = (val - minCutOff) / (maxCutOff - minCutOff);\\nif (gamma > 1.0) {\\ntempf -= pow(1.0 / outRange, relativeVal * gammaCorrection);\\n}\\nstretchedVal = (tempf * outRange * pow(relativeVal, 1.0 / gamma) + minOutput) / 255.0;\\n} else {\\nstretchedVal = minOutput + (val - minCutOff) * factor;\\n}\\nreturn stretchedVal;\\n}\\nvoid main() {\\nvec2 pixelLocation = getPixelLocation(v_texcoord);\\nif (isOutside(pixelLocation)) {\\ngl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);\\nreturn;\\n}\\nvec4 currentPixel = getPixel(pixelLocation);\\n#ifdef NOOP\\ngl_FragColor = vec4(currentPixel.rgb, 1.0) * currentPixel.a * u_opacity;\\nreturn;\\n#endif\\nif (u_bandCount == 1) {\\nfloat grayVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\n#ifdef APPLY_COLORMAP\\nvec4 result = colorize(vec4(grayVal, grayVal, grayVal, 1.0), u_useGamma ? 255.0 : 1.0);\\ngl_FragColor = vec4(result.xyz, 1.0) * result.a * currentPixel.a * u_opacity;\\n#else\\ngl_FragColor = vec4(grayVal, grayVal, grayVal, 1.0) * currentPixel.a * u_opacity;\\n#endif\\n} else {\\nfloat redVal = stretchOneValue(currentPixel.r, u_minCutOff[0], u_maxCutOff[0], u_minOutput, u_maxOutput, u_factor[0], u_useGamma, u_gamma[0], u_gammaCorrection[0]);\\nfloat greenVal = stretchOneValue(currentPixel.g, u_minCutOff[1], u_maxCutOff[1], u_minOutput, u_maxOutput, u_factor[1], u_useGamma, u_gamma[1], u_gammaCorrection[1]);\\nfloat blueVal = stretchOneValue(currentPixel.b, u_minCutOff[2], u_maxCutOff[2], u_minOutput, u_maxOutput, u_factor[2], u_useGamma, u_gamma[2], u_gammaCorrection[2]);\\ngl_FragColor = vec4(redVal, greenVal, blueVal, 1.0) * currentPixel.a * u_opacity;\\n}\\n}\"}},stencil:{\"stencil.frag\":\"void main() {\\ngl_FragColor = vec4(1.0, 1.0, 1.0, 1.0);\\n}\",\"stencil.vert\":\"attribute vec2 a_pos;\\nuniform mat3 u_worldExtent;\\nvoid main() {\\ngl_Position = vec4(u_worldExtent * vec3(a_pos, 1.0), 1.0);\\n}\"},test:{\"TestShader.common.glsl\":\"#ifndef RETURN_RED\\nvarying    vec4      v_color;\\n#endif\\nvarying    vec2      v_offset;\",\"TestShader.frag\":\"precision highp float;\\n#include <test/TestShader.common.glsl>\\nvoid main() {\\nif (v_offset.x > -.5 && v_offset.y > -.5 && v_offset.x < .5 && v_offset.y < .5) {\\ndiscard;\\n}\\n#ifdef RETURN_RED\\ngl_FragColor = vec4(1., 0., 0., 1.);\\n#else\\ngl_FragColor = v_color;\\n#endif\\n}\",\"TestShader.vert\":\"const float POS_PRECISION_FACTOR = 10.;\\nconst float OFFSET_PRECISION_FACTOR = 10.;\\nconst float SIZE_PRECISION_FACTOR = 10.;\\nattribute  vec2      a_pos_packed;\\nattribute  vec2      a_offset_packed;\\nattribute  float     a_size_packed;\\n#ifdef DATA_DRIVEN_COLOR\\nconst float u_dataDrivenColor_validValues[4] = float[4](0., 0., 1., 0.);\\nuniform    vec4      u_dataDrivenColor_colorFallback;\\nuniform    vec4      u_dataDrivenColor_color;\\n#endif\\nuniform    float     u_view_zoomLevel;\\n#include <test/TestShader.common.glsl>\\n#ifdef DATA_DRIVEN_COLOR\\nvec4 getColor(float value) {\\nint index = -1;\\nfor (int i = 0; i < 4; i++) {\\nif (u_dataDrivenColor_validValues[i] == value) {\\nindex = i;\\nbreak;\\n}\\n}\\nif (index == -1) {\\nreturn u_dataDrivenColor_colorFallback;\\n}\\nreturn u_dataDrivenColor_color;\\n}\\n#endif\\nvoid main() {\\nvec2  a_pos = a_pos_packed / POS_PRECISION_FACTOR;\\nvec2  a_offset = a_offset_packed / OFFSET_PRECISION_FACTOR;\\nfloat a_size = a_size_packed / SIZE_PRECISION_FACTOR;\\nvec4 color = vec4(1., 0., 0., 1.);\\n#ifdef DATA_DRIVEN_COLOR\\ncolor = getColor(1.);\\n#endif\\nvec2 offsetScaled = a_offset * a_size;\\nvec4 pos = vec4(a_pos.xy + offsetScaled, 0., 1.);\\ngl_Position = pos;\\n#ifndef RETURN_RED\\nv_color = color;\\n#endif\\nv_offset = a_offset;\\n}\"},tileInfo:{\"tileInfo.frag\":\"uniform mediump sampler2D u_texture;\\nvarying mediump vec2 v_tex;\\nvoid main(void) {\\nlowp vec4 color = texture2D(u_texture, v_tex);\\ncolor.rgb *= color.a;\\ngl_FragColor = color;\\n}\",\"tileInfo.vert\":\"attribute vec2 a_pos;\\nuniform highp mat3 u_dvsMat3;\\nuniform mediump float u_depth;\\nuniform mediump vec2 u_coord_ratio;\\nuniform mediump vec2 u_delta;\\nuniform mediump vec2 u_dimensions;\\nvarying mediump vec2 v_tex;\\nvoid main() {\\nmediump vec2 offset = u_coord_ratio * vec2(u_delta + a_pos * u_dimensions);\\nvec3 v_pos = u_dvsMat3 * vec3(offset, 1.0);\\ngl_Position = vec4(v_pos.xy, 0.0, 1.0);\\nv_tex = a_pos;\\n}\"},util:{\"atan2.glsl\":\"float atan2(in float y, in float x) {\\nfloat t0, t1, t2, t3, t4;\\nt3 = abs(x);\\nt1 = abs(y);\\nt0 = max(t3, t1);\\nt1 = min(t3, t1);\\nt3 = 1.0 / t0;\\nt3 = t1 * t3;\\nt4 = t3 * t3;\\nt0 =         - 0.013480470;\\nt0 = t0 * t4 + 0.057477314;\\nt0 = t0 * t4 - 0.121239071;\\nt0 = t0 * t4 + 0.195635925;\\nt0 = t0 * t4 - 0.332994597;\\nt0 = t0 * t4 + 0.999995630;\\nt3 = t0 * t3;\\nt3 = (abs(y) > abs(x)) ? 1.570796327 - t3 : t3;\\nt3 = x < 0.0 ?  3.141592654 - t3 : t3;\\nt3 = y < 0.0 ? -t3 : t3;\\nreturn t3;\\n}\",\"encoding.glsl\":\"const vec4 rgba2float_factors = vec4(\\n255.0 / (256.0),\\n255.0 / (256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0),\\n255.0 / (256.0 * 256.0 * 256.0 * 256.0)\\n);\\nfloat rgba2float(vec4 rgba) {\\nreturn dot(rgba, rgba2float_factors);\\n}\"}};export{e as default};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport{Program as r}from\"./Program.js\";function e(e,t,a=\"\"){return new r(e,a+t.shaders.vertexShader,a+t.shaders.fragmentShader,t.attributes)}export{e as createProgram};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nclass e{constructor(e){this._readFile=e}resolveIncludes(e){return this._resolve(e)}_resolve(e,t=new Map){if(t.has(e))return t.get(e);const r=this._read(e);if(!r)throw new Error(`cannot find shader file ${e}`);const s=/^[^\\S\\n]*#include\\s+<(\\S+)>[^\\S\\n]?/gm;let n=s.exec(r);const l=[];for(;null!=n;)l.push({path:n[1],start:n.index,length:n[0].length}),n=s.exec(r);let a=0,h=\"\";return l.forEach((e=>{h+=r.slice(a,e.start),h+=t.has(e.path)?\"\":this._resolve(e.path,t),a=e.start+e.length})),h+=r.slice(a),t.set(e,h),h}_read(e){return this._readFile(e)}}export{e as ShaderCompiler};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.29/esri/copyright.txt for details.\n*/\nimport e from\"../../core/Logger.js\";import{disposeMaybe as t}from\"../../core/maybe.js\";import{typedArrayStaticSize as i}from\"../../core/typedArrayUtil.js\";import{ResourceType as r}from\"./enums.js\";import{bindVertexBufferLayout as s}from\"./Util.js\";const n=()=>e.getLogger(\"esri.views.webgl.VertexArrayObject\");let o=class{constructor(e,t,i,r,s=null){this._context=e,this._locations=t,this._layout=i,this._buffers=r,this._indexBuffer=s,this._glName=null,this._initialized=!1}get glName(){return this._glName}get context(){return this._context}get vertexBuffers(){return this._buffers}get indexBuffer(){return this._indexBuffer}get byteSize(){return Object.keys(this._buffers).reduce(((e,t)=>e+this._buffers[t].usedMemory),null!=this._indexBuffer?this._indexBuffer.usedMemory:0)}get layout(){return this._layout}get locations(){return this._locations}get usedMemory(){return this.byteSize+(Object.keys(this._buffers).length+(this._indexBuffer?1:0))*i}dispose(){if(this._context){this._context.getBoundVAO()===this&&this._context.bindVAO(null);for(const e in this._buffers)this._buffers[e]?.dispose(),delete this._buffers[e];this._indexBuffer=t(this._indexBuffer),this.disposeVAOOnly()}else(this._glName||Object.getOwnPropertyNames(this._buffers).length>0)&&n().warn(\"Leaked WebGL VAO\")}disposeVAOOnly(){this._glName&&(this._context.gl.deleteVertexArray(this._glName),this._glName=null,this._context.instanceCounter.decrement(r.VertexArrayObject,this)),this._context=null}initialize(){if(this._initialized)return;const{gl:e}=this._context,t=e.createVertexArray();e.bindVertexArray(t),this._bindLayout(),e.bindVertexArray(null),this._glName=t,this._context.instanceCounter.increment(r.VertexArrayObject,this),this._initialized=!0}bind(){this.initialize(),this._context.gl.bindVertexArray(this.glName)}_bindLayout(){const{_buffers:e,_layout:t,_indexBuffer:i}=this;e||n().error(\"Vertex buffer dictionary is empty!\");const r=this._context.gl;for(const o in e){const i=e[o];i||n().error(\"Vertex buffer is uninitialized!\");const r=t[o];r||n().error(\"Vertex element descriptor is empty!\"),s(this._context,this._locations,i,r)}null!=i&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,i.glName)}unbind(){this.initialize(),this._context.gl.bindVertexArray(null)}};export{o as VertexArrayObject};\n"],"names":["n","Float32Array","r","t","e","o","u","c","i","a","f","l","_","s","y","w","N","Object","freeze","defineProperty","__proto__","ONES","UNIT_W","UNIT_X","UNIT_Y","UNIT_Z","ZEROS","clone","create","createView","fromValues","ones","unitW","unitX","unitY","unitZ","zeros","Symbol","toStringTag","value","p","constructor","super","arguments","this","_color","dispose","_program","prepareState","_ref","context","setStencilTestEnabled","setBlendingEnabled","setFaceCullingEnabled","setColorMask","setStencilOp","KEEP","REPLACE","setStencilWriteMask","setStencilFunction","ALWAYS","draw","state","requestRender","allowDelayedRender","geometry","location","name","count","type","SHORT","d","getVAO","attributes","bufferLayouts","indexBuffer","compiled","useProgram","setUniform2fv","setUniform4fv","setUniformMatrix3fv","displayMat3","bindVAO","drawElements","TRIANGLES","size","UNSIGNED_INT","_desc","vsPath","fsPath","Map","setBlendFunctionSeparate","ONE","ONE_MINUS_SRC_ALPHA","GREATER","painter","isReady","computedOpacity","dvsMat3","isWrapAround","perspectiveTransform","m","texture","timeline","begin","materialManager","getProgram","FLOAT","tex","UNSIGNED_SHORT","v","bindTexture","setUniform1i","setUniform1f","drawArrays","TRIANGLE_STRIP","end","_patternMatrix","_programOptions","id","pattern","_vao","drawMany","_loadWGLResources","displayLevel","styleLayer","backgroundMaterial","vectorTilesMaterialManager","g","getPaintValue","h","x","b","M","window","devicePixelRatio","spriteMosaic","j","A","L","getMaterialProgram","getMosaicItemPosition","tl","br","page","getPageSize","bind","LINEAR","setUniform4f","z","rangeX","transforms","displayViewScreenMat3","Math","max","round","key","level","width","EQUAL","Int8Array","createVertex","STATIC_DRAW","getAttributeLocations","getLayoutInfo","requiredLevel","styleLayerUID","some","_e$layerData$get$circ","_e$layerData$get","layerData","get","circleIndexCount","circleMaterial","E","I","U","VIEWPORT","displayViewMat3","has","setDataUniforms","prepareForRendering","vao","stencilRef","Uint32Array","BYTES_PER_ELEMENT","circleIndexStart","triangleCount","_fillProgramOptions","_outlineProgramOptions","renderPass","fillIndexCount","outlineIndexCount","getPaintProperty","isDataDriven","getValue","_drawFill","hasDataDrivenOutlineColor","outlineUsesFillColor","_drawOutline","pixelRatio","P","D","fillMaterial","R","S","T","fillVAO","patternMap","fillIndexStart","outlineMaterial","outlineVAO","outlineIndexStart","sdf","_e$layerData$get$line","lineIndexCount","lineMaterial","getDashKey","getLayoutValue","V","lineIndexStart","_iconProgramOptions","_sdfProgramOptions","_spritesTextureSize","_drawIcons","_drawText","iconMaterial","iconPerPageElementsMap","AUTO","POINT","MAP","isIconSDF","rotation","updateOpacityInfo","iconVAO","performance","now","lastOpacityUpdate","_renderIconRange","getWidth","getHeight","_setStencilState","glyphMosaic","textMaterial","glyphPerPageElementsMap","O","_glyphTextureSize","height","k","G","W","textVAO","forEach","_renderGlyphRange","is3D","stencilSymbols","clip","stencil","bitmap","overlay","tileDebugInfo","vtlBackground","vtlFill","vtlLine","vtlCircle","vtlSymbol","BYTE","destroy","setTransform","resolution","tileMat3","toScreenNoRotation","rangeY","labelMat2d","viewMat2d","_createTransforms","instance","materialKey","target","start","textureKey","indexEnd","extend","render","techniqueRef","_length","_minOrderedLength","_materialKeys","Set","fromDisplayEntities","values","records","getInstance","instanceId","addRecord","indexStart","indexCount","vertexStart","vertexCount","length","minOrderedLength","minUnorderedLength","drawPhase","infos","_head","_tail","STRICT_ORDER","_insert","symbologyPlane","STRICT_MARKERS_AND_TEXT","MARKER","TEXT","_f","data","next","add","_insertAtHead","_insertAtEnd","_insertAtMiddle","_indexOnly","vertex","operations","index","copyRecord","push","srcFrom","dstFrom","mutate","_pool","strideInt","bufferType","dirty","memoryStats","bytesUsed","bytesReserved","_gpu","_cpu","clear","elementSize","intSize","fillPointer","byteSize","invalidated","bufferSize","invalidatedComputeBuffer","_gpuComputeTriangles","invalidate","_this$_gpu","_invalidateTriangleBuffer","_this$_gpuComputeTria","_this$_gpu2","_this$_gpuComputeTria2","_this$_cpu","freeList","ensure","maxAvailableSpace","expand","free","set","array","min","getGPUBuffer","undefined","Error","_createComputeBuffer","_createBuffer","getView","getUint32View","insert","firstFit","copyFrom","upload","setSubData","reshuffle","DYNAMIC_DRAW","createIndex","_bufferPool","_computeLayouts","_vaos","disposeVAOOnly","_indexBuffer","_vertexBuffer","_getVertexAttributeLayout","_r$normalized","divisor","normalized","offset","stride","getLayout","_layout","locationInfo","useComputeBuffer","computeAttributeMap","filter","locations","hash","flat","join","packPrecisionFactor","getDrawArgs","primitive","POINTS","getDebugVertexInfo","DataView","slice","buffer","byteLength","concat","vertices","layout","_ensure","_this$_layout","_position","find","append","indices","vertexFrom","indexFrom","copyRecordFrom","_a$packPrecisionFacto","_a$packPrecisionFacto2","overlaps","remove","_i","_pos","_buffer","_i32View","Int32Array","_f32View","readInt32","readF32","entities","vertexData","map","_meshes","_entities","tileAge","_metrics","_entityIds","_entityIdsFromBuffer","_attributeEpoch","_encounteredEnd","visible","_displayList","beforeRender","_needsReshuffle","reshuffleManager","schedule","tryReady","_isReady","console","debug","ready","labelMetrics","hasData","getDisplayList","BATCHING","sort","sortKey","debugInfo","display","getMesh","getSortKeys","onMessage","_onAppendMessage","_onUpdateMessage","_aggregateMemoryStats","attributeEpoch","_e$isPixelBuffer","isPixelBuffer","modify","_removeByIdsFromBuffer","_removeByIds","destroyed","getLogger","info","copyPixelBufferedEntitesFrom","_ensureMesh","_stage","bufferPool","_removeDuplicatedBufferedEntites","_insertVertexData","updateBaseOffsets","_tryInsertBufferedEntity","_insertEntity","metrics","_y","error","_removeRecordsFromMesh","_remove","delete","_this$_meshes$get","memory","PI","LN2","log","acquireUint32Array","_array","byteOffset","releaseUint32Array","_data","ArrayBuffer","BYTE_LENGTH","_freeList","_pages","_pagesByBuffer","_bytesAllocated","_bytesTotal","_addPage","tileDebugInfoTexture","_destroyed","debugSlot","parent","children","indexOf","_rctx","_attributes","Uint16Array","_count","unbind","coords","lengths","_cache","primitiveType","isMapSpace","fromRect","_ref2","fromScreenExtent","xmin","ymin","xmax","ymax","fromPath","path","floor","fromGeometry","_o$geometry","fromPolygon","fromMapExtent","toScreen","_ref3","vertexBuffers","elementType","UNSIGNED_BYTE","getIndexBuffer","getVertexBuffers","keys","reduce","parseFloat","_clip","stage","_handle","version","_invalidate","fromClipArea","_destroyGL","mesh","_lastWidth","_lastHeight","_createMesh","_createScreenRect","left","right","top","bottom","clips","_updateClippingInfo","renderChildren","setPipelineState","_renderPasses","prepareRenderPasses","registerRenderPass","brushes","_clippingInfos","LABEL","LABEL_ALPHA","DEBUG","HIGHLIGHT","items","nearest","defines","samplingMode","NEAREST","mips","bilinear","bicubic","trilinear","LINEAR_MIPMAP_LINEAR","isSourceScaled","_quad","renderingOptions","source","blendFunction","coordScale","setSamplingProfile","brushEffect","_initialized","_solidProgram","_solidVertexArrayObject","setDepthWriteEnabled","setDepthTestEnabled","_initialize","setStencilFunctionSeparate","FRONT_AND_BACK","_this$_outlineProgram","_this$_tileInfoProgra","_this$_outlineVertexA","_this$_tileInfoVertex","_outlineProgram","_tileInfoProgram","_outlineVertexArrayObject","_tileInfoVertexArrayObject","_ctx","setUniform2f","LINE_STRIP","_getTexture","descriptor","document","createElement","getContext","wrapMode","CLAMP_TO_EDGE","isImmutable","clearRect","canvas","textAlign","textBaseline","font","lineWidth","fillStyle","strokeStyle","strokeText","fillText","setData","Array","isArray","_this$next","_this$next$remove","_this$next2","last","head","shaders","vertexShader","fragmentShader","split","background","bitBlit","blend","dot","filtering","fx","integrate","heatmap","heatmapResolve","highlight","magnifier","materials","fill","hittest","icon","heatmapAccumulate","label","line","pie","shared","text","blit","bloom","composite","gaussianBlur","luminosityHighPass","blur","dra","sobel","filterEffect","pp","raster","common","flow","imagery","particles","streamlines","hillshade","lut","magdir","reproject","rfx","aspect","bandarithmetic","compositeband","contrast","convolution","curvature","extractband","focalstatistics","grayscale","local","mask","ndvi","remap","slope","stretch","vs","scalar","test","tileInfo","util","resolveIncludes","_readFile","_resolve","_read","exec","_context","_locations","_buffers","_glName","glName","usedMemory","getBoundVAO","_this$_buffers$e","getOwnPropertyNames","warn","gl","deleteVertexArray","instanceCounter","decrement","VertexArrayObject","initialize","createVertexArray","bindVertexArray","_bindLayout","increment","bindBuffer","ELEMENT_ARRAY_BUFFER"],"sourceRoot":""}