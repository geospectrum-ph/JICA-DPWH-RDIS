"use strict";(self.webpackChunkSEEDs_v2_0_Client=self.webpackChunkSEEDs_v2_0_Client||[]).push([[7863],{17863:(t,s,a)=>{a.r(s),a.d(s,{execute:()=>e});var r=a(4180);function e(t,s){let a=s.responseType;a?"array-buffer"!==a&&"blob"!==a&&"json"!==a&&"native"!==a&&"native-request-init"!==a&&"text"!==a&&(a="text"):a="json",s.responseType=a;const n=s.signal;return delete s.signal,globalThis.invokeStaticMessage("request",{url:t,options:s},{signal:n}).then((async i=>{let o,l,u,c,b;if(i.data)if(i.data instanceof ArrayBuffer){if(!("json"!==a&&"text"!==a&&"blob"!==a||(o=new Blob([i.data]),"json"!==a&&"text"!==a||(c=await o.text(),"json"!==a)))){try{l=JSON.parse(c||null)}catch(p){const a={...p,url:t,requestOptions:s};throw new r.A("request:server",p.message,a)}if(l.error){const a={...l.error,url:t,requestOptions:s};throw new r.A("request:server",l.error.message,a)}}}else"native"===a&&(i.data.signal=n,u=await fetch(i.data.url,i.data),i.httpStatus=u.status);switch(a){case"blob":b=o;break;case"json":b=l;break;case"native":b=u;break;case"text":b=c;break;default:b=i.data}return{data:b,httpStatus:i.httpStatus,requestOptions:s,ssl:i.ssl,url:t}}))}}}]);
//# sourceMappingURL=7863.ee25448c.chunk.js.map