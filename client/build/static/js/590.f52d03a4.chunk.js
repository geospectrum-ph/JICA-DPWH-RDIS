"use strict";(self.webpackChunkSEEDs_v2_0_Client=self.webpackChunkSEEDs_v2_0_Client||[]).push([[590],{11277:(i,l,r)=>{var a;r.d(l,{u:()=>a}),function(i){i[i.KILOBYTES=1024]="KILOBYTES",i[i.MEGABYTES=1048576]="MEGABYTES",i[i.GIGABYTES=1073741824]="GIGABYTES"}(a||(a={}))},30590:(i,l,r)=>{r.r(l),r.d(l,{default:()=>j});var a,o=r(80671),c=r(53705),h=r(4180),u=r(15461),d=r(13132),v=r(81618),f=r(4270),y=r(57453),m=r(91779),_=(r(76761),r(50886),r(59299)),g=r(68682),w=r(51715),b=r(98664),A=r(78658),S=r(98878),T=r(87552),O=r(80048),M=r(47478),D=r(53200),L=r(21642),I=r(1921),x=r(32465),C=r(68777),Z=r(38362),U=r(66795),P=r(26128),E=r(32277),k=r(3420),q=r(92792);const R=["Canvas/World_Dark_Gray_Base","Canvas/World_Dark_Gray_Reference","Canvas/World_Light_Gray_Base","Canvas/World_Light_Gray_Reference","Elevation/World_Hillshade","Elevation/World_Hillshade_Dark","Ocean/World_Ocean_Base","Ocean/World_Ocean_Reference","Ocean_Basemap","Reference/World_Boundaries_and_Places","Reference/World_Boundaries_and_Places_Alternate","Reference/World_Transportation","World_Imagery","World_Street_Map","World_Topo_Map"];let z=a=class extends((0,D.d)((0,Z.j)((0,U.I)((0,T.f)((0,O.V)((0,I.q)((0,x.A)((0,M.b)((0,d.P)((0,C.J)((0,S.p)((0,L.d)(A.A))))))))))))){constructor(){super(...arguments),this.listMode="show",this.isReference=null,this.operationalLayerType="ArcGISTiledMapServiceLayer",this.resampling=!0,this.sourceJSON=null,this.spatialReference=null,this.path=null,this.sublayers=null,this.type="tile",this.url=null}normalizeCtorArgs(i,l){return"string"==typeof i?{url:i,...l}:i}load(i){const l=null!=i?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},i).catch(v.QP).then((()=>this._fetchService(l)))),Promise.resolve(this)}get attributionDataUrl(){var i;const l=null===(i=this.parsedUrl)||void 0===i?void 0:i.path.toLowerCase();return l?this._getDefaultAttribution(this._getMapName(l)):null}readSpatialReference(i,l){var r;return(i=i||(null===(r=l.tileInfo)||void 0===r?void 0:r.spatialReference))&&b.A.fromJSON(i)}writeSublayers(i,l,r,a){if(!this.loaded||!i)return;const o=i.slice().reverse().flatten((i=>{let{sublayers:l}=i;return l&&l.toArray().reverse()})).toArray(),c=[],h={writeSublayerStructure:!1,...a};o.forEach((i=>{const l=i.write({},h);c.push(l)})),c.some((i=>Object.keys(i).length>1))&&(l.layers=c)}get tileServers(){var i;return this._getDefaultTileServers(null===(i=this.parsedUrl)||void 0===i?void 0:i.path)}castTileServers(i){return Array.isArray(i)?i.map((i=>(0,f.An)(i).path)):null}fetchTile(i,l,r){let a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{signal:o}=a,h=this.getTileUrl(i,l,r),u={responseType:"image",signal:o,query:{...this.refreshParameters}};return(0,c.A)(h,u).then((i=>i.data))}async fetchImageBitmapTile(i,l,r){let o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{signal:h}=o;if(this.fetchTile!==a.prototype.fetchTile){const a=await this.fetchTile(i,l,r,o);return(0,k.C)(a,i,l,r,h)}const u=this.getTileUrl(i,l,r),d={responseType:"blob",signal:h,query:{...this.refreshParameters}},{data:v}=await(0,c.A)(u,d);return(0,k.C)(v,i,l,r,h)}getTileUrl(i,l,r){var a,o;const c=!this.capabilities.operations.supportsTileMap&&this.supportsBlankTile,h=(0,f.x0)({...null===(a=this.parsedUrl)||void 0===a?void 0:a.query,blankTile:!c&&null,...this.customParameters,token:this.apiKey}),u=this.tileServers;return"".concat(u&&u.length?u[l%u.length]:null===(o=this.parsedUrl)||void 0===o?void 0:o.path,"/tile/").concat(i,"/").concat(l,"/").concat(r).concat(h?"?"+h:"")}loadAll(){return(0,u.g)(this,(i=>{i(this.allSublayers)}))}_fetchService(i){return new Promise(((l,r)=>{if(this.sourceJSON){if(null!=this.sourceJSON.bandCount&&null!=this.sourceJSON.pixelSizeX)throw new h.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");return void l({data:this.sourceJSON})}if(!this.parsedUrl)throw new h.A("tile-layer:undefined-url","layer's url is not defined");const a=(0,P.qg)(this.parsedUrl.path);if(null!=a&&"ImageServer"===a.serverType)throw new h.A("tile-layer:unsupported-url","use ImageryTileLayer to open a tiled image service");(0,c.A)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},responseType:"json",signal:i}).then(l,r)})).then((l=>{let r=this.url;if(l.ssl&&(r=this.url=r.replace(/^http:/i,"https:")),this.sourceJSON=l.data,this.read(l.data,{origin:"service",url:this.parsedUrl}),10.1===this.version&&!(0,P.Wo)(r))return this._fetchServerVersion(r,i).then((i=>{this.read({currentVersion:i})})).catch((()=>{}))}))}_fetchServerVersion(i,l){if(!(0,P.Fi)(i))return Promise.reject();const r=i.replace(/(.*\/rest)\/.*/i,"$1")+"/info";return(0,c.A)(r,{query:{f:"json",...this.customParameters,token:this.apiKey},responseType:"json",signal:l}).then((i=>{if(i.data&&i.data.currentVersion)return i.data.currentVersion;throw new h.A("tile-layer:version-not-available")}))}_getMapName(i){const l=i.match(/^(?:https?:)?\/\/(server\.arcgisonline\.com|services\.arcgisonline\.com|ibasemaps-api\.arcgis\.com)\/arcgis\/rest\/services\/([^\/]+(\/[^\/]+)*)\/mapserver/i);return l?l[2]:void 0}_getDefaultAttribution(i){if(null==i)return null;let l;i=i.toLowerCase();for(let r=0,a=R.length;r<a;r++)if(l=R[r],l.toLowerCase().includes(i))return(0,f.s2)("//static.arcgis.com/attribution/"+l);return null}_getDefaultTileServers(i){if(null==i)return[];const l=-1!==i.search(/^(?:https?:)?\/\/server\.arcgisonline\.com/i),r=-1!==i.search(/^(?:https?:)?\/\/services\.arcgisonline\.com/i);return l||r?[i,i.replace(l?/server\.arcgisonline/i:/services\.arcgisonline/i,l?"services.arcgisonline":"server.arcgisonline")]:[]}get hasOverriddenFetchTile(){return!this.fetchTile[B]}};(0,o._)([(0,y.MZ)({readOnly:!0})],z.prototype,"attributionDataUrl",null),(0,o._)([(0,y.MZ)({type:["show","hide","hide-children"]})],z.prototype,"listMode",void 0),(0,o._)([(0,y.MZ)({json:{read:!0,write:!0}})],z.prototype,"blendMode",void 0),(0,o._)([(0,y.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],z.prototype,"isReference",void 0),(0,o._)([(0,y.MZ)({readOnly:!0,type:["ArcGISTiledMapServiceLayer"]})],z.prototype,"operationalLayerType",void 0),(0,o._)([(0,y.MZ)({type:Boolean})],z.prototype,"resampling",void 0),(0,o._)([(0,y.MZ)()],z.prototype,"sourceJSON",void 0),(0,o._)([(0,y.MZ)({type:b.A})],z.prototype,"spatialReference",void 0),(0,o._)([(0,_.w)("spatialReference",["spatialReference","tileInfo"])],z.prototype,"readSpatialReference",null),(0,o._)([(0,y.MZ)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],z.prototype,"path",void 0),(0,o._)([(0,y.MZ)({readOnly:!0})],z.prototype,"sublayers",void 0),(0,o._)([(0,w.K)("sublayers",{layers:{type:[q.A]}})],z.prototype,"writeSublayers",null),(0,o._)([(0,y.MZ)({json:{read:!1,write:!1}})],z.prototype,"popupEnabled",void 0),(0,o._)([(0,y.MZ)()],z.prototype,"tileServers",null),(0,o._)([(0,m.w)("tileServers")],z.prototype,"castTileServers",null),(0,o._)([(0,y.MZ)({readOnly:!0,json:{read:!1}})],z.prototype,"type",void 0),(0,o._)([(0,y.MZ)(E.OZ)],z.prototype,"url",void 0),z=a=(0,o._)([(0,g.$)("esri.layers.TileLayer")],z);const B=Symbol("default-fetch-tile");z.prototype.fetchTile[B]=!0;const j=z},87552:(i,l,r)=>{r.d(l,{f:()=>p});var a=r(80671),o=(r(30174),r(57453)),c=(r(50886),r(89412),r(76761),r(59299)),h=r(68682),u=r(22179),d=r(30491),v=r(62964),f=r(98664);const p=i=>{let l=class extends i{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}destroy(){var i,l;null===(i=this.tilemapCache)||void 0===i||null===(l=i.destroy)||void 0===l||l.call(i)}readMinScale(i,l){return null!=l.minLOD&&null!=l.maxLOD?i:0}readMaxScale(i,l){return null!=l.minLOD&&null!=l.maxLOD?i:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(i,l,r){var a;const o=null===(a=l.capabilities)||void 0===a?void 0:a.includes("Tilemap");let{minLOD:c,maxLOD:h,minScale:f,maxScale:y}=l;if(null==c&&null==h&&0!==f&&0!==y){const e=i=>Math.round(1e4*i)/1e4;f=e(f||l.tileInfo.lods[0].scale),y=e(y||l.tileInfo.lods[l.tileInfo.lods.length-1].scale);for(const i of l.tileInfo.lods){const l=e(i.scale);c=l>=f?i.level:c,h=l>=y?i.level:h}}if(o)return new v.d({layer:this,minLOD:c,maxLOD:h});if(l.tileInfo){const i=new u.A;return i.read(l.tileInfo,r),new d.A(i,c,h)}return null}};return(0,a._)([(0,o.MZ)({json:{read:{source:"copyrightText"}}})],l.prototype,"copyright",void 0),(0,a._)([(0,o.MZ)()],l.prototype,"minScale",void 0),(0,a._)([(0,c.w)("service","minScale")],l.prototype,"readMinScale",null),(0,a._)([(0,o.MZ)()],l.prototype,"maxScale",void 0),(0,a._)([(0,c.w)("service","maxScale")],l.prototype,"readMaxScale",null),(0,a._)([(0,o.MZ)({type:f.A})],l.prototype,"spatialReference",void 0),(0,a._)([(0,o.MZ)({readOnly:!0})],l.prototype,"supportsBlankTile",null),(0,a._)([(0,o.MZ)({type:u.A})],l.prototype,"tileInfo",void 0),(0,a._)([(0,o.MZ)()],l.prototype,"tilemapCache",void 0),(0,a._)([(0,c.w)("service","tilemapCache",["capabilities","tileInfo"])],l.prototype,"readTilemapCache",null),(0,a._)([(0,o.MZ)()],l.prototype,"version",void 0),l=(0,a._)([(0,h.$)("esri.layers.mixins.ArcGISCachedService")],l),l}},30491:(i,l,r)=>{r.d(l,{A:()=>e});var a=r(4180),o=r(81618);class e{constructor(i){let l=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:i.lods[i.lods.length-1].level;this.tileInfo=i,this.minLOD=l,this.maxLOD=r,i.lodAt(l)||(this.minLOD=i.lods[0].level),i.lodAt(r)||(this.maxLOD=i.lods[i.lods.length-1].level)}get effectiveMinLOD(){var i;return null!==(i=this.minLOD)&&void 0!==i?i:this.tileInfo.lods[0].level}get effectiveMaxLOD(){var i;return null!==(i=this.maxLOD)&&void 0!==i?i:this.tileInfo.lods[this.tileInfo.lods.length-1].level}getAvailability(i,l,r){var a;const o=null===(a=this.tileInfo)||void 0===a?void 0:a.lodAt(i);return!o||i<this.minLOD||i>this.maxLOD?"unavailable":o.cols&&o.rows?r>=o.cols[0]&&r<=o.cols[1]&&l>=o.rows[0]&&l<=o.rows[1]?"unknown":"unavailable":"unknown"}async fetchAvailability(i,l,r,c){await(0,o.NO)(c);const h=this.getAvailability(i,l,r);if("unavailable"===h)throw new a.A("tile-map:tile-unavailable","Tile is not available",{level:i,row:l,col:r});return h}async fetchAvailabilityUpsample(i,l,r,a,c){await(0,o.NO)(c),a.level=i,a.row=l,a.col=r;const h=this.tileInfo;return h.updateTileInfo(a),this.fetchAvailability(i,l,r,c).catch((i=>{if((0,o.zf)(i))throw i;if(h.upsampleTile(a))return this.fetchAvailabilityUpsample(a.level,a.row,a.col,a,c);throw i}))}}},62964:(i,l,r)=>{r.d(l,{d:()=>D});var a,o=r(80671),c=r(53705),h=r(18763),u=r(11277),d=r(4180),v=r(58285),f=r(20585),y=r(17244),m=r(81618),_=r(63390),g=r(59650),w=r(4270),b=r(57453),A=(r(50886),r(89412),r(76761),r(68682)),S=r(19156),T=r(16842),O=r(66004),M=r(49905);class Tilemap_r{constructor(i){this._validateJSON(i);const{location:l,data:r}=i;this.location=Object.freeze((0,O.o8)(l));const a=this.location.width,o=this.location.height;let c=!0,h=!0;const u=function UintArray_n(i){let l=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return i<=M.y9?l?new Array(i).fill(0):new Array(i):new Uint32Array(i)}(Math.ceil(a*o/32));let d=0;for(let v=0;v<r.length;v++){const i=v%32;r[v]?(h=!1,u[d]|=1<<i):c=!1,31===i&&++d}h?(this._availability="unavailable",this.byteSize=40):c?(this._availability="available",this.byteSize=40):(this._availability=u,this.byteSize=40+(0,M.Ek)(u))}getAvailability(i,l){if("unavailable"===this._availability||"available"===this._availability)return this._availability;const r=(i-this.location.top)*this.location.width+(l-this.location.left),a=r%32,o=r>>5,c=this._availability;return o<0||o>c.length?"unknown":c[o]&1<<a?"available":"unavailable"}static fromDefinition(i,l){const r=i.service.request||c.A,{row:a,col:o,width:h,height:u}=i,v={query:{f:"json"}};return l=l?{...v,...l}:v,r(function s(i){var l;let r;if(null!==(l=i.service.tileServers)&&void 0!==l&&l.length){const l=i.service.tileServers;r="".concat(l&&l.length?l[i.row%l.length]:i.service.url,"/tilemap/").concat(i.level,"/").concat(i.row,"/").concat(i.col,"/").concat(i.width,"/").concat(i.height)}else r="".concat(i.service.url,"/tilemap/").concat(i.level,"/").concat(i.row,"/").concat(i.col,"/").concat(i.width,"/").concat(i.height);const a=i.service.query;return a&&(r="".concat(r,"?").concat(a)),r}(i),l).then((i=>i.data)).catch((i=>{if(i&&i.details&&422===i.details.httpStatus)return{location:{top:a,left:o,width:h,height:u},valid:!0,data:(0,T.dY)(h*u,0)};throw i})).then((i=>{if(i.location&&(i.location.top!==a||i.location.left!==o||i.location.width!==h||i.location.height!==u))throw new d.A("tilemap:location-mismatch","Tilemap response for different location than requested",{response:i,definition:{top:a,left:o,width:h,height:u}});return Tilemap_r.fromJSON(i)}))}static fromJSON(i){return Object.freeze(new Tilemap_r(i))}_validateJSON(i){if(null===i||void 0===i||!i.location)throw new d.A("tilemap:missing-location","Location missing from tilemap response");if(!1===i.valid)throw new d.A("tilemap:invalid","Tilemap response was marked as invalid");if(!i.data)throw new d.A("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(i.data))throw new d.A("tilemap:data-mismatch","Data must be an array of numbers");if(i.data.length!==i.location.width*i.location.height)throw new d.A("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function n(i){return"".concat(i.level,"/").concat(i.row,"/").concat(i.col,"/").concat(i.width,"/").concat(i.height)}let D=a=class extends h.A{constructor(i){super(i),this._pendingTilemapRequests={},this.request=c.A,this.size=32,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new f.q(2*u.u.MEGABYTES),this.addHandles((0,_.wB)((()=>{const{layer:i}=this;return[null===i||void 0===i?void 0:i.parsedUrl,null===i||void 0===i?void 0:i.tileServers,null===i||void 0===i?void 0:i.apiKey,null===i||void 0===i?void 0:i.customParameters]}),(()=>this._initializeTilemapDefinition()),_.Vh))}get effectiveMinLOD(){var i;return null!==(i=this.minLOD)&&void 0!==i?i:this.layer.tileInfo.lods[0].level}get effectiveMaxLOD(){var i;return null!==(i=this.maxLOD)&&void 0!==i?i:this.layer.tileInfo.lods[this.layer.tileInfo.lods.length-1].level}fetchTilemap(i,l,r,a){var o;if(!this.layer.tileInfo.lodAt(i)||i<this.effectiveMinLOD||i>this.effectiveMaxLOD)return Promise.reject(new d.A("tilemap-cache:level-unavailable","Level ".concat(i," is unavailable in the service")));const c=this._tmpTilemapDefinition,h=this._tilemapFromCache(i,l,r,c);if(h)return Promise.resolve(h);const u=null===(o=a)||void 0===o?void 0:o.signal;return a={...a,signal:null},new Promise(((i,l)=>{(0,m.u7)(u,(()=>l((0,m.NK)())));const r=n(c);let o=this._pendingTilemapRequests[r];if(!o){o=Tilemap_r.fromDefinition(c,a).then((i=>(this._tilemapCache.put(r,i,i.byteSize),i)));const e=()=>{delete this._pendingTilemapRequests[r]};this._pendingTilemapRequests[r]=o,o.then(e,e)}o.then(i,l)}))}getAvailability(i,l,r){if(!this.layer.tileInfo.lodAt(i)||i<this.effectiveMinLOD||i>this.effectiveMaxLOD)return"unavailable";const a=this._tilemapFromCache(i,l,r,this._tmpTilemapDefinition);return a?a.getAvailability(l,r):"unknown"}fetchAvailability(i,l,r,a){return!this.layer.tileInfo.lodAt(i)||i<this.effectiveMinLOD||i>this.effectiveMaxLOD?Promise.reject(new d.A("tile-map:tile-unavailable","Tile is not available",{level:i,row:l,col:r})):this.fetchTilemap(i,l,r,a).catch((i=>i)).then((a=>{if(a instanceof Tilemap_r){const o=a.getAvailability(l,r);if("unavailable"===o)throw new d.A("tile-map:tile-unavailable","Tile is not available",{level:i,row:l,col:r});return o}if((0,m.zf)(a))throw a;return"unknown"}))}fetchAvailabilityUpsample(i,l,r,a,o){a.level=i,a.row=l,a.col=r;const c=this.layer.tileInfo;c.updateTileInfo(a);const h=this.fetchAvailability(i,l,r,o).catch((i=>{if((0,m.zf)(i))throw i;if(c.upsampleTile(a))return this.fetchAvailabilityUpsample(a.level,a.row,a.col,a,o);throw i}));return this._fetchAvailabilityUpsamplePrefetch(a.id,i,l,r,o,h),h}async _fetchAvailabilityUpsamplePrefetch(i,l,r,o,c,h){if(!this._prefetchingEnabled||null==i)return;const u="prefetch-".concat(i);if(this.hasHandles(u))return;const d=new AbortController;h.then((()=>d.abort()),(()=>d.abort()));let f=!1;const y=(0,v.hA)((()=>{f||(f=!0,d.abort())}));if(this.addHandles(y,u),await(0,g.md)(10,d.signal).catch((()=>{})),f||(f=!0,this.removeHandles(u)),(0,m.G4)(d))return;const _=new S.U(i,l,r,o),w={...c,signal:d.signal},b=this.layer.tileInfo;for(let v=0;a._prefetches.length<a._maxPrefetch&&b.upsampleTile(_);++v){const i=this.fetchAvailability(_.level,_.row,_.col,w);a._prefetches.push(i);const t=()=>{a._prefetches.removeUnordered(i)};i.then(t,t)}}_initializeTilemapDefinition(){var i;if(!this.layer.parsedUrl)return;const{parsedUrl:l,apiKey:r,customParameters:a}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:l.path,query:(0,w.x0)({...l.query,...a,token:null!==r&&void 0!==r?r:null===(i=l.query)||void 0===i?void 0:i.token}),tileServers:this.layer.tileServers,request:this.request},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(i,l,r,a){a.level=i,a.row=l-l%this.size,a.col=r-r%this.size;const o=n(a);return this._tilemapCache.get(o)}get test(){const i=this;return{get prefetchingEnabled(){return i._prefetchingEnabled},set prefetchingEnabled(l){i._prefetchingEnabled=l},hasTilemap:(l,r,a)=>!!i._tilemapFromCache(l,r,a,i._tmpTilemapDefinition)}}};D._maxPrefetch=4,D._prefetches=new y.A({initialSize:a._maxPrefetch}),(0,o._)([(0,b.MZ)({constructOnly:!0})],D.prototype,"layer",void 0),(0,o._)([(0,b.MZ)({constructOnly:!0})],D.prototype,"minLOD",void 0),(0,o._)([(0,b.MZ)({constructOnly:!0})],D.prototype,"maxLOD",void 0),(0,o._)([(0,b.MZ)({constructOnly:!0})],D.prototype,"request",void 0),(0,o._)([(0,b.MZ)({constructOnly:!0})],D.prototype,"size",void 0),D=a=(0,o._)([(0,A.$)("esri.layers.support.TilemapCache")],D)}}]);
//# sourceMappingURL=590.f52d03a4.chunk.js.map