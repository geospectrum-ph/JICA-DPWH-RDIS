"use strict";(self.webpackChunkSEEDs_v2_0_Client=self.webpackChunkSEEDs_v2_0_Client||[]).push([[3663],{87107:(n,N,S)=>{var C;S.d(N,{p:()=>C}),function(n){n[n.Texture=0]="Texture",n[n.RenderBuffer=1]="RenderBuffer"}(C||(C={}))},83663:(n,N,S)=>{S.d(N,{g:()=>P});var C=S(4180),O=(S(50886),S(71014)),l=S(60985),D=S(87107),d=S(83881);class a extends d.R{constructor(n,N){switch(super(),this.context=n,Object.assign(this,N),this.internalFormat){case l.H0.R16F:case l.H0.R16I:case l.H0.R16UI:case l.H0.R32F:case l.H0.R32I:case l.H0.R32UI:case l.H0.R8_SNORM:case l.H0.R8:case l.H0.R8I:case l.H0.R8UI:this.pixelFormat=l.Ab.RED}}static validate(n,N){return new a(n,N)}}let P=class h{constructor(n){let N=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,S=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;if(this.type=D.p.Texture,this._glName=null,this._samplingModeDirty=!1,this._wrapModeDirty=!1,this._wasImmutablyAllocated=!1,"context"in n)this._descriptor=n,S=N;else{const S=a.validate(n,N);if(!S)throw new C.A("Texture descriptor invalid");this._descriptor=S}this._descriptor.target===l.Ap.TEXTURE_CUBE_MAP?this._setDataCubeMap(S):this.setData(S)}get glName(){return this._glName}get descriptor(){return this._descriptor}get usedMemory(){return(0,d.e)(this._descriptor)}get isDirty(){return this._samplingModeDirty||this._wrapModeDirty}dispose(){this._glName&&this._descriptor.context.instanceCounter.decrement(l.vt.Texture,this),this._descriptor.context.gl&&this._glName&&(this._descriptor.context.unbindTexture(this),this._descriptor.context.gl.deleteTexture(this._glName),this._glName=null)}release(){this.dispose()}resize(n,N){const S=this._descriptor;if(S.width!==n||S.height!==N){if(this._wasImmutablyAllocated)throw new C.A("Immutable textures can't be resized!");S.width=n,S.height=N,this._descriptor.target===l.Ap.TEXTURE_CUBE_MAP?this._setDataCubeMap(null):this.setData(null)}}_setDataCubeMap(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;for(let N=l.Ap.TEXTURE_CUBE_MAP_POSITIVE_X;N<=l.Ap.TEXTURE_CUBE_MAP_NEGATIVE_Z;N++)this._setData(n,N)}setData(n){this._setData(n)}_setData(n,N){var S,D;if(null===(S=this._descriptor.context)||void 0===S||!S.gl)return;const d=this._descriptor.context.gl;(0,O.Y2)(d),this._glName||(this._glName=d.createTexture(),this._glName&&this._descriptor.context.instanceCounter.increment(l.vt.Texture,this)),void 0===n&&(n=null);const P=this._descriptor,U=null!==N&&void 0!==N?N:P.target,G=R(U);null===n&&(P.width=P.width||4,P.height=P.height||4,G&&(P.depth=null!==(D=P.depth)&&void 0!==D?D:1));const L=this._descriptor.context.bindTexture(this,h.TEXTURE_UNIT_FOR_UPDATES);this._descriptor.context.setActiveTexture(h.TEXTURE_UNIT_FOR_UPDATES),u(P),this._configurePixelStorage(),(0,O.Y2)(d);const p=this._deriveInternalFormat();if(I(n)){let N="width"in n?n.width:n.codedWidth,S="height"in n?n.height:n.codedHeight;const C=1;n instanceof HTMLVideoElement&&(N=n.videoWidth,S=n.videoHeight),P.width&&P.height,G&&P.depth,P.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(U,p,P.hasMipmap,N,S,C),this._texImage(U,0,p,N,S,C,n),(0,O.Y2)(d),P.hasMipmap&&this.generateMipmap(),P.width||(P.width=N),P.height||(P.height=S),G&&!P.depth&&(P.depth=C)}else{const{width:N,height:S,depth:D}=P;if(null==N||null==S)throw new C.A("Width and height must be specified!");if(G&&null==D)throw new C.A("Depth must be specified!");if(P.isImmutable&&!this._wasImmutablyAllocated&&this._texStorage(U,p,P.hasMipmap,N,S,D),A(n)){const O=n.levels,G=w(U,N,S,D),L=Math.min(G-1,O.length-1);d.texParameteri(P.target,this._descriptor.context.gl.TEXTURE_MAX_LEVEL,L);const B=p;if(!function M(n){return n in l.CQ}(B))throw new C.A("Attempting to use compressed data with an uncompressed format!");this._forEachMipmapLevel(((n,N,S,C)=>{const l=O[Math.min(n,O.length-1)];this._compressedTexImage(U,n,B,N,S,C,l)}),L)}else this._texImage(U,0,p,N,S,D,n),(0,O.Y2)(d),P.hasMipmap&&this.generateMipmap()}T(d,this._descriptor),g(d,this._descriptor),function E(n,N){var S;const C=n.capabilities.textureFilterAnisotropic;if(!C)return;n.gl.texParameterf(N.target,C.TEXTURE_MAX_ANISOTROPY,null!==(S=N.maxAnisotropy)&&void 0!==S?S:1)}(this._descriptor.context,this._descriptor),(0,O.Y2)(d),this._descriptor.context.bindTexture(L,h.TEXTURE_UNIT_FOR_UPDATES)}updateData(n,N,S,O,l,D){let d=arguments.length>6&&void 0!==arguments[6]?arguments[6]:0;D||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const P=this._descriptor,U=this._deriveInternalFormat(),{context:G,pixelFormat:L,dataType:p,target:B,isImmutable:m}=P;if(m&&!this._wasImmutablyAllocated)throw new C.A("Cannot update immutable texture before allocation!");const F=G.bindTexture(this,h.TEXTURE_UNIT_FOR_UPDATES,!0);(N<0||S<0||O>P.width||l>P.height||N+O>P.width||S+l>P.height)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage();const{gl:H}=G;d&&H.pixelStorei(H.UNPACK_SKIP_ROWS,d),I(D)?H.texSubImage2D(B,n,N,S,O,l,L,p,D):A(D)?H.compressedTexSubImage2D(B,n,N,S,O,l,U,D.levels[n]):H.texSubImage2D(B,n,N,S,O,l,L,p,D),d&&H.pixelStorei(H.UNPACK_SKIP_ROWS,0),G.bindTexture(F,h.TEXTURE_UNIT_FOR_UPDATES)}updateData3D(n,N,S,O,l,D,d,P){P||console.error("An attempt to use uninitialized data!"),this._glName||console.error("An attempt to update uninitialized texture!");const U=this._descriptor,G=this._deriveInternalFormat(),{context:L,pixelFormat:p,dataType:B,isImmutable:m,target:F}=U;if(m&&!this._wasImmutablyAllocated)throw new C.A("Cannot update immutable texture before allocation!");R(F)||console.warn("Attempting to set 3D texture data on a non-3D texture");const H=L.bindTexture(this,h.TEXTURE_UNIT_FOR_UPDATES);L.setActiveTexture(h.TEXTURE_UNIT_FOR_UPDATES),(N<0||S<0||O<0||l>U.width||D>U.height||d>U.depth||N+l>U.width||S+D>U.height||O+d>U.depth)&&console.error("An attempt to update out of bounds of the texture!"),this._configurePixelStorage();const{gl:b}=L;if(A(P))P=P.levels[n],b.compressedTexSubImage3D(F,n,N,S,O,l,D,d,G,P);else{const C=P;b.texSubImage3D(F,n,N,S,O,l,D,d,p,B,C)}L.bindTexture(H,h.TEXTURE_UNIT_FOR_UPDATES)}generateMipmap(){const n=this._descriptor;if(!n.hasMipmap){if(this._wasImmutablyAllocated)throw new C.A("Cannot add mipmaps to immutable texture after allocation");n.hasMipmap=!0,this._samplingModeDirty=!0,u(n)}n.samplingMode===l.Cj.LINEAR?(this._samplingModeDirty=!0,n.samplingMode=l.Cj.LINEAR_MIPMAP_NEAREST):n.samplingMode===l.Cj.NEAREST&&(this._samplingModeDirty=!0,n.samplingMode=l.Cj.NEAREST_MIPMAP_NEAREST);const N=this._descriptor.context.bindTexture(this,h.TEXTURE_UNIT_FOR_UPDATES);this._descriptor.context.setActiveTexture(h.TEXTURE_UNIT_FOR_UPDATES),this._descriptor.context.gl.generateMipmap(n.target),this._descriptor.context.bindTexture(N,h.TEXTURE_UNIT_FOR_UPDATES)}setSamplingMode(n){n!==this._descriptor.samplingMode&&(this._descriptor.samplingMode=n,this._samplingModeDirty=!0)}setWrapMode(n){n!==this._descriptor.wrapMode&&(this._descriptor.wrapMode=n,u(this._descriptor),this._wrapModeDirty=!0)}applyChanges(){const n=this._descriptor,N=n.context.gl;this._samplingModeDirty&&(T(N,n),this._samplingModeDirty=!1),this._wrapModeDirty&&(g(N,n),this._wrapModeDirty=!1)}_deriveInternalFormat(){if(null!=this._descriptor.internalFormat)return this._descriptor.internalFormat===l.Ab.DEPTH_STENCIL&&(this._descriptor.internalFormat=l.Ab.DEPTH24_STENCIL8),this._descriptor.internalFormat;switch(this._descriptor.dataType){case l.ld.FLOAT:switch(this._descriptor.pixelFormat){case l.Ab.RGBA:return this._descriptor.internalFormat=l.H0.RGBA32F;case l.Ab.RGB:return this._descriptor.internalFormat=l.H0.RGB32F;default:throw new C.A("Unable to derive format")}case l.ld.UNSIGNED_BYTE:switch(this._descriptor.pixelFormat){case l.Ab.RGBA:return this._descriptor.internalFormat=l.H0.RGBA8;case l.Ab.RGB:return this._descriptor.internalFormat=l.H0.RGB8}}return this._descriptor.internalFormat=this._descriptor.pixelFormat===l.Ab.DEPTH_STENCIL?l.Ab.DEPTH24_STENCIL8:this._descriptor.pixelFormat}_configurePixelStorage(){const n=this._descriptor.context.gl,{unpackAlignment:N,flipped:S,preMultiplyAlpha:C}=this._descriptor;n.pixelStorei(n.UNPACK_ALIGNMENT,N),n.pixelStorei(n.UNPACK_FLIP_Y_WEBGL,S?1:0),n.pixelStorei(n.UNPACK_PREMULTIPLY_ALPHA_WEBGL,C?1:0)}_texStorage(n,N,S,O,D,d){const{gl:P}=this._descriptor.context;if(!function x(n){return n in l.H0}(N))throw new C.A("Immutable textures must have a sized internal format");if(!this._descriptor.isImmutable)return;const U=S?w(n,O,D,d):1;if(R(n)){if(null==d)throw new C.A("Missing depth dimension for 3D texture upload");P.texStorage3D(n,U,N,O,D,d)}else P.texStorage2D(n,U,N,O,D);this._wasImmutablyAllocated=!0}_texImage(n,N,S,O,l,D,d){const P=this._descriptor.context.gl,U=R(n),{isImmutable:G,pixelFormat:L,dataType:p}=this._descriptor;if(G){if(null!=d){const S=d;if(U){if(null==D)throw new C.A("Missing depth dimension for 3D texture upload");P.texSubImage3D(n,N,0,0,0,O,l,D,L,p,S)}else P.texSubImage2D(n,N,0,0,O,l,L,p,S)}}else{const G=d;if(U){if(null==D)throw new C.A("Missing depth dimension for 3D texture upload");P.texImage3D(n,N,S,O,l,D,0,L,p,G)}else P.texImage2D(n,N,S,O,l,0,L,p,G)}}_compressedTexImage(n,N,S,O,l,D,d){const P=this._descriptor.context.gl,U=R(n);if(this._descriptor.isImmutable){if(null!=d)if(U){if(null==D)throw new C.A("Missing depth dimension for 3D texture upload");P.compressedTexSubImage3D(n,N,0,0,0,O,l,D,S,d)}else P.compressedTexSubImage2D(n,N,0,0,O,l,S,d)}else if(U){if(null==D)throw new C.A("Missing depth dimension for 3D texture upload");P.compressedTexImage3D(n,N,S,O,l,D,0,d)}else P.compressedTexImage2D(n,N,S,O,l,0,d)}_forEachMipmapLevel(n){let N=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1/0,{width:S,height:O,depth:D,hasMipmap:d,target:P}=this._descriptor;const U=P===l.Ap.TEXTURE_3D;if(null==S||null==O||U&&null==D)throw new C.A("Missing texture dimensions for mipmap calculation");for(let C=0;n(C,S,O,D),d&&(1!==S||1!==O||U&&1!==D)&&!(C>=N);++C)S=Math.max(1,S>>1),O=Math.max(1,O>>1),U&&(D=Math.max(1,D>>1))}};function u(n){(null!=n.width&&n.width<0||null!=n.height&&n.height<0||null!=n.depth&&n.depth<0)&&console.error("Negative dimension parameters are not allowed!")}function T(n,N){let S=N.samplingMode,C=N.samplingMode;S===l.Cj.LINEAR_MIPMAP_NEAREST||S===l.Cj.LINEAR_MIPMAP_LINEAR?(S=l.Cj.LINEAR,N.hasMipmap||(C=l.Cj.LINEAR)):S!==l.Cj.NEAREST_MIPMAP_NEAREST&&S!==l.Cj.NEAREST_MIPMAP_LINEAR||(S=l.Cj.NEAREST,N.hasMipmap||(C=l.Cj.NEAREST)),n.texParameteri(N.target,n.TEXTURE_MAG_FILTER,S),n.texParameteri(N.target,n.TEXTURE_MIN_FILTER,C)}function g(n,N){"number"==typeof N.wrapMode?(n.texParameteri(N.target,n.TEXTURE_WRAP_S,N.wrapMode),n.texParameteri(N.target,n.TEXTURE_WRAP_T,N.wrapMode)):(n.texParameteri(N.target,n.TEXTURE_WRAP_S,N.wrapMode.s),n.texParameteri(N.target,n.TEXTURE_WRAP_T,N.wrapMode.t))}function A(n){return null!=n&&"type"in n&&"compressed"===n.type}function I(n){return null!=n&&!A(n)&&!function f(n){return null!=n&&"byteLength"in n}(n)}function R(n){return n===l.Ap.TEXTURE_3D||n===l.Ap.TEXTURE_2D_ARRAY}function w(n,N,S){let C=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1,O=Math.max(N,S);return n===l.Ap.TEXTURE_3D&&(O=Math.max(O,C)),Math.round(Math.log(O)/Math.LN2)+1}P.TEXTURE_UNIT_FOR_UPDATES=0},83881:(n,N,S)=>{S.d(N,{R:()=>e,e:()=>r});var C=S(60985),O=S(76879);class e{constructor(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,N=arguments.length>1&&void 0!==arguments[1]?arguments[1]:n;this.width=n,this.height=N,this.target=C.Ap.TEXTURE_2D,this.pixelFormat=C.Ab.RGBA,this.dataType=C.ld.UNSIGNED_BYTE,this.samplingMode=C.Cj.LINEAR,this.wrapMode=C.pF.REPEAT,this.maxAnisotropy=1,this.flipped=!1,this.hasMipmap=!1,this.isOpaque=!1,this.unpackAlignment=4,this.preMultiplyAlpha=!1,this.depth=1,this.isImmutable=!1}}function r(n){return n.width<=0||n.height<=0?0:Math.round(n.width*n.height*(n.hasMipmap?4/3:1)*(null==n.internalFormat?4:(0,O.IB)(n.internalFormat)))}},76879:(n,N,S)=>{S.d(N,{Hi:()=>_,IB:()=>u,WH:()=>o,mT:()=>i,yu:()=>E});S(50886);var C=S(71014),O=S(60985),l=S(31064);function o(n){const N=n.gl;switch(N.getError()){case N.NO_ERROR:return null;case N.INVALID_ENUM:return"An unacceptable value has been specified for an enumerated argument";case N.INVALID_VALUE:return"An unacceptable value has been specified for an argument";case N.INVALID_OPERATION:return"The specified command is not allowed for the current state";case N.INVALID_FRAMEBUFFER_OPERATION:return"The currently bound framebuffer is not framebuffer complete";case N.OUT_OF_MEMORY:return"Not enough memory is left to execute the command";case N.CONTEXT_LOST_WEBGL:return"WebGL context is lost"}return"Unknown error"}function i(n,N){return n.vertexBuffers[N].usedMemory/function R(n){return n[0].stride}(n.layout[N])}function E(n,N,S,O){let D=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;const d=n.gl;n.bindBuffer(S);for(const U of O){const S=N.get(U.name);if(void 0===S){console.warn("There is no location for vertex attribute '".concat(U.name,"' defined."));continue}const O=D*U.stride;if(U.count<=4)d.vertexAttribPointer(S,U.count,U.type,U.normalized,U.stride,U.offset+O),d.enableVertexAttribArray(S),U.divisor>0&&n.gl.vertexAttribDivisor(S,U.divisor);else if(9===U.count)for(let N=0;N<3;N++)d.vertexAttribPointer(S+N,3,U.type,U.normalized,U.stride,U.offset+12*N+O),d.enableVertexAttribArray(S+N),U.divisor>0&&n.gl.vertexAttribDivisor(S+N,U.divisor);else if(16===U.count)for(let N=0;N<4;N++){var P;d.vertexAttribPointer(S+N,4,U.type,U.normalized,U.stride,U.offset+16*N+O),d.enableVertexAttribArray(S+N),U.divisor>0&&(null===(P=n.gl)||void 0===P||P.vertexAttribDivisor(S+N,U.divisor))}else console.error("Unsupported vertex attribute element count: "+U.count);if((0,C.en)()){const N=o(n),S=(0,l._)(U.type),C=U.offset,D=Math.round(S/C)!==S/C?". Offset not a multiple of stride. DataType requires ".concat(S," bytes, but descriptor has an offset of ").concat(C):"";N&&console.error('Unable to bind vertex attribute "'.concat(U.name,'" with baseInstanceOffset ').concat(O).concat(D,":"),N,U)}}}function _(n,N,S,C){const l=n.gl;n.bindBuffer(S);for(const O of C){var D;const S=N.get(O.name);if(O.count<=4)l.disableVertexAttribArray(S),O.divisor&&O.divisor>0&&(null===(D=n.gl)||void 0===D||D.vertexAttribDivisor(S,0));else if(9===O.count)for(let N=0;N<3;N++){var d;l.disableVertexAttribArray(S+N),O.divisor&&O.divisor>0&&(null===(d=n.gl)||void 0===d||d.vertexAttribDivisor(S+N,0))}else if(16===O.count)for(let N=0;N<4;N++){var P;l.disableVertexAttribArray(S+N),O.divisor&&O.divisor>0&&(null===(P=n.gl)||void 0===P||P.vertexAttribDivisor(S+N,0))}else console.error("Unsupported vertex attribute element count: "+O.count)}n.unbindBuffer(O.NZ.ARRAY_BUFFER)}function u(n){switch(n){case O.Ab.ALPHA:case O.Ab.LUMINANCE:case O.Ab.RED:case O.Ab.RED_INTEGER:case O.H0.R8:case O.H0.R8I:case O.H0.R8UI:case O.H0.R8_SNORM:case O.yQ.STENCIL_INDEX8:return 1;case O.Ab.LUMINANCE_ALPHA:case O.Ab.RG:case O.Ab.RG_INTEGER:case O.H0.RGBA4:case O.H0.R16F:case O.H0.R16I:case O.H0.R16UI:case O.H0.RG8:case O.H0.RG8I:case O.H0.RG8UI:case O.H0.RG8_SNORM:case O.H0.RGB565:case O.H0.RGB5_A1:case O.yQ.DEPTH_COMPONENT16:return 2;case O.Ab.DEPTH_COMPONENT:case O.Ab.RGB:case O.Ab.RGB_INTEGER:case O.H0.RGB8:case O.H0.RGB8I:case O.H0.RGB8UI:case O.H0.RGB8_SNORM:case O.H0.SRGB8:case O.yQ.DEPTH_COMPONENT24:return 3;case O.Ab.DEPTH_STENCIL:case O.Ab.DEPTH24_STENCIL8:case O.Ab.RGBA:case O.Ab.RGBA_INTEGER:case O.H0.RGBA8:case O.H0.R32F:case O.H0.R11F_G11F_B10F:case O.H0.RG16F:case O.H0.R32I:case O.H0.R32UI:case O.H0.RG16I:case O.H0.RG16UI:case O.H0.RGBA8I:case O.H0.RGBA8UI:case O.H0.RGBA8_SNORM:case O.H0.SRGB8_ALPHA8:case O.H0.RGB9_E5:case O.H0.RGB10_A2UI:case O.H0.RGB10_A2:case O.yQ.DEPTH_STENCIL:case O.yQ.DEPTH_COMPONENT32F:case O.yQ.DEPTH24_STENCIL8:return 4;case O.yQ.DEPTH32F_STENCIL8:return 5;case O.H0.RGB16F:case O.H0.RGB16I:case O.H0.RGB16UI:return 6;case O.H0.RG32F:case O.H0.RG32I:case O.H0.RG32UI:case O.H0.RGBA16F:case O.H0.RGBA16I:case O.H0.RGBA16UI:return 8;case O.H0.RGB32F:case O.H0.RGB32I:case O.H0.RGB32UI:return 12;case O.H0.RGBA32F:case O.H0.RGBA32I:case O.H0.RGBA32UI:return 16;case O.CQ.COMPRESSED_RGB_S3TC_DXT1_EXT:case O.CQ.COMPRESSED_RGBA_S3TC_DXT1_EXT:return.5;case O.CQ.COMPRESSED_RGBA_S3TC_DXT3_EXT:case O.CQ.COMPRESSED_RGBA_S3TC_DXT5_EXT:return 1;case O.CQ.COMPRESSED_R11_EAC:case O.CQ.COMPRESSED_SIGNED_R11_EAC:case O.CQ.COMPRESSED_RGB8_ETC2:case O.CQ.COMPRESSED_SRGB8_ETC2:case O.CQ.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2:case O.CQ.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2:return.5;case O.CQ.COMPRESSED_RG11_EAC:case O.CQ.COMPRESSED_SIGNED_RG11_EAC:case O.CQ.COMPRESSED_RGBA8_ETC2_EAC:case O.CQ.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:return 1}return 0}},71014:(n,N,S)=>{S.d(N,{Xc:()=>c,Y2:()=>u,en:()=>a});var C=S(4180),O=S(50886),l=S(89412);const o=()=>l.A.getLogger("esri.views.webgl.checkWebGLError");const D=!!(0,O.A)("enable-feature:webgl-debug");function a(){return D}function c(){return D}function u(n){if(a()){const N=n.getError();if(N){const S=function t(n,N){switch(N){case n.INVALID_ENUM:return"Invalid Enum. An unacceptable value has been specified for an enumerated argument.";case n.INVALID_VALUE:return"Invalid Value. A numeric argument is out of range.";case n.INVALID_OPERATION:return"Invalid Operation. The specified command is not allowed for the current state.";case n.INVALID_FRAMEBUFFER_OPERATION:return"Invalid Framebuffer operation. The currently bound framebuffer is not framebuffer complete when trying to render to or to read from it.";case n.OUT_OF_MEMORY:return"Out of memory. Not enough memory is left to execute the command.";case n.CONTEXT_LOST_WEBGL:return"WebGL context has been lost";default:return"Unknown error"}}(n,N),O=(new Error).stack;o().error(new C.A("webgl-error","WebGL error occurred",{message:S,stack:O}))}}}},60985:(n,N,S)=>{var C,O,l,D,d,P,U,G,L,p,B,m,F,H,b,v,X,V,Y,y;S.d(N,{Ab:()=>H,Ac:()=>U,Ap:()=>F,CQ:()=>Z,Cj:()=>B,Co:()=>Y,H0:()=>b,Hr:()=>K,MT:()=>L,NZ:()=>d,Nm:()=>j,R:()=>y,Tb:()=>D,WR:()=>O,Y7:()=>P,_U:()=>V,dn:()=>l,eA:()=>p,hn:()=>C,ld:()=>v,nI:()=>k,pF:()=>m,pe:()=>G,sS:()=>$,tx:()=>ee,vt:()=>Q,xM:()=>W,xV:()=>z,yQ:()=>X}),function(n){n[n.DEPTH_BUFFER_BIT=256]="DEPTH_BUFFER_BIT",n[n.STENCIL_BUFFER_BIT=1024]="STENCIL_BUFFER_BIT",n[n.COLOR_BUFFER_BIT=16384]="COLOR_BUFFER_BIT"}(C||(C={})),function(n){n[n.POINTS=0]="POINTS",n[n.LINES=1]="LINES",n[n.LINE_LOOP=2]="LINE_LOOP",n[n.LINE_STRIP=3]="LINE_STRIP",n[n.TRIANGLES=4]="TRIANGLES",n[n.TRIANGLE_STRIP=5]="TRIANGLE_STRIP",n[n.TRIANGLE_FAN=6]="TRIANGLE_FAN"}(O||(O={})),function(n){n[n.ZERO=0]="ZERO",n[n.ONE=1]="ONE",n[n.SRC_COLOR=768]="SRC_COLOR",n[n.ONE_MINUS_SRC_COLOR=769]="ONE_MINUS_SRC_COLOR",n[n.SRC_ALPHA=770]="SRC_ALPHA",n[n.ONE_MINUS_SRC_ALPHA=771]="ONE_MINUS_SRC_ALPHA",n[n.DST_ALPHA=772]="DST_ALPHA",n[n.ONE_MINUS_DST_ALPHA=773]="ONE_MINUS_DST_ALPHA",n[n.DST_COLOR=774]="DST_COLOR",n[n.ONE_MINUS_DST_COLOR=775]="ONE_MINUS_DST_COLOR",n[n.SRC_ALPHA_SATURATE=776]="SRC_ALPHA_SATURATE",n[n.CONSTANT_COLOR=32769]="CONSTANT_COLOR",n[n.ONE_MINUS_CONSTANT_COLOR=32770]="ONE_MINUS_CONSTANT_COLOR",n[n.CONSTANT_ALPHA=32771]="CONSTANT_ALPHA",n[n.ONE_MINUS_CONSTANT_ALPHA=32772]="ONE_MINUS_CONSTANT_ALPHA"}(l||(l={})),function(n){n[n.ADD=32774]="ADD",n[n.MIN=32775]="MIN",n[n.MAX=32776]="MAX",n[n.SUBTRACT=32778]="SUBTRACT",n[n.REVERSE_SUBTRACT=32779]="REVERSE_SUBTRACT"}(D||(D={})),function(n){n[n.ARRAY_BUFFER=34962]="ARRAY_BUFFER",n[n.ELEMENT_ARRAY_BUFFER=34963]="ELEMENT_ARRAY_BUFFER",n[n.UNIFORM_BUFFER=35345]="UNIFORM_BUFFER",n[n.PIXEL_PACK_BUFFER=35051]="PIXEL_PACK_BUFFER",n[n.PIXEL_UNPACK_BUFFER=35052]="PIXEL_UNPACK_BUFFER",n[n.COPY_READ_BUFFER=36662]="COPY_READ_BUFFER",n[n.COPY_WRITE_BUFFER=36663]="COPY_WRITE_BUFFER",n[n.TRANSFORM_FEEDBACK_BUFFER=35982]="TRANSFORM_FEEDBACK_BUFFER"}(d||(d={})),function(n){n[n.FRONT=1028]="FRONT",n[n.BACK=1029]="BACK",n[n.FRONT_AND_BACK=1032]="FRONT_AND_BACK"}(P||(P={})),function(n){n[n.CW=2304]="CW",n[n.CCW=2305]="CCW"}(U||(U={})),function(n){n[n.BYTE=5120]="BYTE",n[n.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",n[n.SHORT=5122]="SHORT",n[n.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",n[n.INT=5124]="INT",n[n.UNSIGNED_INT=5125]="UNSIGNED_INT",n[n.FLOAT=5126]="FLOAT"}(G||(G={})),function(n){n[n.NEVER=512]="NEVER",n[n.LESS=513]="LESS",n[n.EQUAL=514]="EQUAL",n[n.LEQUAL=515]="LEQUAL",n[n.GREATER=516]="GREATER",n[n.NOTEQUAL=517]="NOTEQUAL",n[n.GEQUAL=518]="GEQUAL",n[n.ALWAYS=519]="ALWAYS"}(L||(L={})),function(n){n[n.ZERO=0]="ZERO",n[n.KEEP=7680]="KEEP",n[n.REPLACE=7681]="REPLACE",n[n.INCR=7682]="INCR",n[n.DECR=7683]="DECR",n[n.INVERT=5386]="INVERT",n[n.INCR_WRAP=34055]="INCR_WRAP",n[n.DECR_WRAP=34056]="DECR_WRAP"}(p||(p={})),function(n){n[n.NEAREST=9728]="NEAREST",n[n.LINEAR=9729]="LINEAR",n[n.NEAREST_MIPMAP_NEAREST=9984]="NEAREST_MIPMAP_NEAREST",n[n.LINEAR_MIPMAP_NEAREST=9985]="LINEAR_MIPMAP_NEAREST",n[n.NEAREST_MIPMAP_LINEAR=9986]="NEAREST_MIPMAP_LINEAR",n[n.LINEAR_MIPMAP_LINEAR=9987]="LINEAR_MIPMAP_LINEAR"}(B||(B={})),function(n){n[n.CLAMP_TO_EDGE=33071]="CLAMP_TO_EDGE",n[n.REPEAT=10497]="REPEAT",n[n.MIRRORED_REPEAT=33648]="MIRRORED_REPEAT"}(m||(m={})),function(n){n[n.TEXTURE_2D=3553]="TEXTURE_2D",n[n.TEXTURE_CUBE_MAP=34067]="TEXTURE_CUBE_MAP",n[n.TEXTURE_3D=32879]="TEXTURE_3D",n[n.TEXTURE_CUBE_MAP_POSITIVE_X=34069]="TEXTURE_CUBE_MAP_POSITIVE_X",n[n.TEXTURE_CUBE_MAP_NEGATIVE_X=34070]="TEXTURE_CUBE_MAP_NEGATIVE_X",n[n.TEXTURE_CUBE_MAP_POSITIVE_Y=34071]="TEXTURE_CUBE_MAP_POSITIVE_Y",n[n.TEXTURE_CUBE_MAP_NEGATIVE_Y=34072]="TEXTURE_CUBE_MAP_NEGATIVE_Y",n[n.TEXTURE_CUBE_MAP_POSITIVE_Z=34073]="TEXTURE_CUBE_MAP_POSITIVE_Z",n[n.TEXTURE_CUBE_MAP_NEGATIVE_Z=34074]="TEXTURE_CUBE_MAP_NEGATIVE_Z",n[n.TEXTURE_2D_ARRAY=35866]="TEXTURE_2D_ARRAY"}(F||(F={})),function(n){n[n.DEPTH_COMPONENT=6402]="DEPTH_COMPONENT",n[n.DEPTH_STENCIL=34041]="DEPTH_STENCIL",n[n.DEPTH24_STENCIL8=35056]="DEPTH24_STENCIL8",n[n.ALPHA=6406]="ALPHA",n[n.RGB=6407]="RGB",n[n.RGBA=6408]="RGBA",n[n.LUMINANCE=6409]="LUMINANCE",n[n.LUMINANCE_ALPHA=6410]="LUMINANCE_ALPHA",n[n.RED=6403]="RED",n[n.RG=33319]="RG",n[n.RED_INTEGER=36244]="RED_INTEGER",n[n.RG_INTEGER=33320]="RG_INTEGER",n[n.RGB_INTEGER=36248]="RGB_INTEGER",n[n.RGBA_INTEGER=36249]="RGBA_INTEGER"}(H||(H={})),function(n){n[n.RGBA4=32854]="RGBA4",n[n.R16F=33325]="R16F",n[n.RG16F=33327]="RG16F",n[n.RGB32F=34837]="RGB32F",n[n.RGBA16F=34842]="RGBA16F",n[n.R32F=33326]="R32F",n[n.RG32F=33328]="RG32F",n[n.RGBA32F=34836]="RGBA32F",n[n.R11F_G11F_B10F=35898]="R11F_G11F_B10F",n[n.RGB8=32849]="RGB8",n[n.RGBA8=32856]="RGBA8",n[n.RGB5_A1=32855]="RGB5_A1",n[n.R8=33321]="R8",n[n.RG8=33323]="RG8",n[n.R8I=33329]="R8I",n[n.R8UI=33330]="R8UI",n[n.R16I=33331]="R16I",n[n.R16UI=33332]="R16UI",n[n.R32I=33333]="R32I",n[n.R32UI=33334]="R32UI",n[n.RG8I=33335]="RG8I",n[n.RG8UI=33336]="RG8UI",n[n.RG16I=33337]="RG16I",n[n.RG16UI=33338]="RG16UI",n[n.RG32I=33339]="RG32I",n[n.RG32UI=33340]="RG32UI",n[n.RGB16F=34843]="RGB16F",n[n.RGB9_E5=35901]="RGB9_E5",n[n.SRGB8=35905]="SRGB8",n[n.SRGB8_ALPHA8=35907]="SRGB8_ALPHA8",n[n.RGB565=36194]="RGB565",n[n.RGBA32UI=36208]="RGBA32UI",n[n.RGB32UI=36209]="RGB32UI",n[n.RGBA16UI=36214]="RGBA16UI",n[n.RGB16UI=36215]="RGB16UI",n[n.RGBA8UI=36220]="RGBA8UI",n[n.RGB8UI=36221]="RGB8UI",n[n.RGBA32I=36226]="RGBA32I",n[n.RGB32I=36227]="RGB32I",n[n.RGBA16I=36232]="RGBA16I",n[n.RGB16I=36233]="RGB16I",n[n.RGBA8I=36238]="RGBA8I",n[n.RGB8I=36239]="RGB8I",n[n.R8_SNORM=36756]="R8_SNORM",n[n.RG8_SNORM=36757]="RG8_SNORM",n[n.RGB8_SNORM=36758]="RGB8_SNORM",n[n.RGBA8_SNORM=36759]="RGBA8_SNORM",n[n.RGB10_A2=32857]="RGB10_A2",n[n.RGB10_A2UI=36975]="RGB10_A2UI"}(b||(b={})),function(n){n[n.FLOAT=5126]="FLOAT",n[n.UNSIGNED_BYTE=5121]="UNSIGNED_BYTE",n[n.UNSIGNED_INT_24_8=34042]="UNSIGNED_INT_24_8",n[n.UNSIGNED_SHORT_4_4_4_4=32819]="UNSIGNED_SHORT_4_4_4_4",n[n.UNSIGNED_SHORT_5_5_5_1=32820]="UNSIGNED_SHORT_5_5_5_1",n[n.UNSIGNED_SHORT_5_6_5=33635]="UNSIGNED_SHORT_5_6_5",n[n.BYTE=5120]="BYTE",n[n.UNSIGNED_SHORT=5123]="UNSIGNED_SHORT",n[n.SHORT=5122]="SHORT",n[n.UNSIGNED_INT=5125]="UNSIGNED_INT",n[n.INT=5124]="INT",n[n.HALF_FLOAT=5131]="HALF_FLOAT",n[n.UNSIGNED_INT_2_10_10_10_REV=33640]="UNSIGNED_INT_2_10_10_10_REV",n[n.UNSIGNED_INT_10F_11F_11F_REV=35899]="UNSIGNED_INT_10F_11F_11F_REV",n[n.UNSIGNED_INT_5_9_9_9_REV=35902]="UNSIGNED_INT_5_9_9_9_REV",n[n.FLOAT_32_UNSIGNED_INT_24_8_REV=36269]="FLOAT_32_UNSIGNED_INT_24_8_REV"}(v||(v={})),function(n){n[n.DEPTH_COMPONENT16=33189]="DEPTH_COMPONENT16",n[n.STENCIL_INDEX8=36168]="STENCIL_INDEX8",n[n.DEPTH_STENCIL=34041]="DEPTH_STENCIL",n[n.DEPTH_COMPONENT24=33190]="DEPTH_COMPONENT24",n[n.DEPTH_COMPONENT32F=36012]="DEPTH_COMPONENT32F",n[n.DEPTH24_STENCIL8=35056]="DEPTH24_STENCIL8",n[n.DEPTH32F_STENCIL8=36013]="DEPTH32F_STENCIL8"}(X||(X={})),function(n){n[n.STATIC_DRAW=35044]="STATIC_DRAW",n[n.DYNAMIC_DRAW=35048]="DYNAMIC_DRAW",n[n.STREAM_DRAW=35040]="STREAM_DRAW",n[n.STATIC_READ=35045]="STATIC_READ",n[n.DYNAMIC_READ=35049]="DYNAMIC_READ",n[n.STREAM_READ=35041]="STREAM_READ",n[n.STATIC_COPY=35046]="STATIC_COPY",n[n.DYNAMIC_COPY=35050]="DYNAMIC_COPY",n[n.STREAM_COPY=35042]="STREAM_COPY"}(V||(V={})),function(n){n[n.FRAGMENT_SHADER=35632]="FRAGMENT_SHADER",n[n.VERTEX_SHADER=35633]="VERTEX_SHADER"}(Y||(Y={})),function(n){n[n.FRAMEBUFFER=36160]="FRAMEBUFFER",n[n.READ_FRAMEBUFFER=36008]="READ_FRAMEBUFFER",n[n.DRAW_FRAMEBUFFER=36009]="DRAW_FRAMEBUFFER"}(y||(y={}));const W=33984;var Q,j,K;!function(n){n[n.Texture=0]="Texture",n[n.BufferObject=1]="BufferObject",n[n.VertexArrayObject=2]="VertexArrayObject",n[n.Shader=3]="Shader",n[n.Program=4]="Program",n[n.FramebufferObject=5]="FramebufferObject",n[n.Renderbuffer=6]="Renderbuffer",n[n.TransformFeedback=7]="TransformFeedback",n[n.Sync=8]="Sync",n[n.UNCOUNTED=9]="UNCOUNTED",n[n.LinesOfCode=9]="LinesOfCode",n[n.Uniform=10]="Uniform",n[n.COUNT=11]="COUNT"}(Q||(Q={})),function(n){n[n.COLOR_ATTACHMENT0=36064]="COLOR_ATTACHMENT0",n[n.COLOR_ATTACHMENT1=36065]="COLOR_ATTACHMENT1",n[n.COLOR_ATTACHMENT2=36066]="COLOR_ATTACHMENT2",n[n.COLOR_ATTACHMENT3=36067]="COLOR_ATTACHMENT3",n[n.COLOR_ATTACHMENT4=36068]="COLOR_ATTACHMENT4",n[n.COLOR_ATTACHMENT5=36069]="COLOR_ATTACHMENT5",n[n.COLOR_ATTACHMENT6=36070]="COLOR_ATTACHMENT6",n[n.COLOR_ATTACHMENT7=36071]="COLOR_ATTACHMENT7",n[n.COLOR_ATTACHMENT8=36072]="COLOR_ATTACHMENT8",n[n.COLOR_ATTACHMENT9=36073]="COLOR_ATTACHMENT9",n[n.COLOR_ATTACHMENT10=36074]="COLOR_ATTACHMENT10",n[n.COLOR_ATTACHMENT11=36075]="COLOR_ATTACHMENT11",n[n.COLOR_ATTACHMENT12=36076]="COLOR_ATTACHMENT12",n[n.COLOR_ATTACHMENT13=36077]="COLOR_ATTACHMENT13",n[n.COLOR_ATTACHMENT14=36078]="COLOR_ATTACHMENT14",n[n.COLOR_ATTACHMENT15=36079]="COLOR_ATTACHMENT15"}(j||(j={})),function(n){n[n.NONE=0]="NONE",n[n.BACK=1029]="BACK"}(K||(K={}));const k=33306;var Z,z,q,J,$,ee,te;!function(n){n[n.COMPRESSED_RGB_S3TC_DXT1_EXT=33776]="COMPRESSED_RGB_S3TC_DXT1_EXT",n[n.COMPRESSED_RGBA_S3TC_DXT1_EXT=33777]="COMPRESSED_RGBA_S3TC_DXT1_EXT",n[n.COMPRESSED_RGBA_S3TC_DXT3_EXT=33778]="COMPRESSED_RGBA_S3TC_DXT3_EXT",n[n.COMPRESSED_RGBA_S3TC_DXT5_EXT=33779]="COMPRESSED_RGBA_S3TC_DXT5_EXT",n[n.COMPRESSED_R11_EAC=37488]="COMPRESSED_R11_EAC",n[n.COMPRESSED_SIGNED_R11_EAC=37489]="COMPRESSED_SIGNED_R11_EAC",n[n.COMPRESSED_RG11_EAC=37490]="COMPRESSED_RG11_EAC",n[n.COMPRESSED_SIGNED_RG11_EAC=37491]="COMPRESSED_SIGNED_RG11_EAC",n[n.COMPRESSED_RGB8_ETC2=37492]="COMPRESSED_RGB8_ETC2",n[n.COMPRESSED_SRGB8_ETC2=37493]="COMPRESSED_SRGB8_ETC2",n[n.COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2=37494]="COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2",n[n.COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2=37495]="COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2",n[n.COMPRESSED_RGBA8_ETC2_EAC=37496]="COMPRESSED_RGBA8_ETC2_EAC",n[n.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC=37497]="COMPRESSED_SRGB8_ALPHA8_ETC2_EAC"}(Z||(Z={})),function(n){n[n.FLOAT=5126]="FLOAT",n[n.FLOAT_VEC2=35664]="FLOAT_VEC2",n[n.FLOAT_VEC3=35665]="FLOAT_VEC3",n[n.FLOAT_VEC4=35666]="FLOAT_VEC4",n[n.INT=5124]="INT",n[n.INT_VEC2=35667]="INT_VEC2",n[n.INT_VEC3=35668]="INT_VEC3",n[n.INT_VEC4=35669]="INT_VEC4",n[n.BOOL=35670]="BOOL",n[n.BOOL_VEC2=35671]="BOOL_VEC2",n[n.BOOL_VEC3=35672]="BOOL_VEC3",n[n.BOOL_VEC4=35673]="BOOL_VEC4",n[n.FLOAT_MAT2=35674]="FLOAT_MAT2",n[n.FLOAT_MAT3=35675]="FLOAT_MAT3",n[n.FLOAT_MAT4=35676]="FLOAT_MAT4",n[n.SAMPLER_2D=35678]="SAMPLER_2D",n[n.SAMPLER_CUBE=35680]="SAMPLER_CUBE",n[n.UNSIGNED_INT=5125]="UNSIGNED_INT",n[n.UNSIGNED_INT_VEC2=36294]="UNSIGNED_INT_VEC2",n[n.UNSIGNED_INT_VEC3=36295]="UNSIGNED_INT_VEC3",n[n.UNSIGNED_INT_VEC4=36296]="UNSIGNED_INT_VEC4",n[n.FLOAT_MAT2x3=35685]="FLOAT_MAT2x3",n[n.FLOAT_MAT2x4=35686]="FLOAT_MAT2x4",n[n.FLOAT_MAT3x2=35687]="FLOAT_MAT3x2",n[n.FLOAT_MAT3x4=35688]="FLOAT_MAT3x4",n[n.FLOAT_MAT4x2=35689]="FLOAT_MAT4x2",n[n.FLOAT_MAT4x3=35690]="FLOAT_MAT4x3",n[n.SAMPLER_3D=35679]="SAMPLER_3D",n[n.SAMPLER_2D_SHADOW=35682]="SAMPLER_2D_SHADOW",n[n.SAMPLER_2D_ARRAY=36289]="SAMPLER_2D_ARRAY",n[n.SAMPLER_2D_ARRAY_SHADOW=36292]="SAMPLER_2D_ARRAY_SHADOW",n[n.SAMPLER_CUBE_SHADOW=36293]="SAMPLER_CUBE_SHADOW",n[n.INT_SAMPLER_2D=36298]="INT_SAMPLER_2D",n[n.INT_SAMPLER_3D=36299]="INT_SAMPLER_3D",n[n.INT_SAMPLER_CUBE=36300]="INT_SAMPLER_CUBE",n[n.INT_SAMPLER_2D_ARRAY=36303]="INT_SAMPLER_2D_ARRAY",n[n.UNSIGNED_INT_SAMPLER_2D=36306]="UNSIGNED_INT_SAMPLER_2D",n[n.UNSIGNED_INT_SAMPLER_3D=36307]="UNSIGNED_INT_SAMPLER_3D",n[n.UNSIGNED_INT_SAMPLER_CUBE=36308]="UNSIGNED_INT_SAMPLER_CUBE",n[n.UNSIGNED_INT_SAMPLER_2D_ARRAY=36311]="UNSIGNED_INT_SAMPLER_2D_ARRAY"}(z||(z={})),function(n){n[n.OBJECT_TYPE=37138]="OBJECT_TYPE",n[n.SYNC_CONDITION=37139]="SYNC_CONDITION",n[n.SYNC_STATUS=37140]="SYNC_STATUS",n[n.SYNC_FLAGS=37141]="SYNC_FLAGS"}(q||(q={})),function(n){n[n.UNSIGNALED=37144]="UNSIGNALED",n[n.SIGNALED=37145]="SIGNALED"}(J||(J={})),function(n){n[n.ALREADY_SIGNALED=37146]="ALREADY_SIGNALED",n[n.TIMEOUT_EXPIRED=37147]="TIMEOUT_EXPIRED",n[n.CONDITION_SATISFIED=37148]="CONDITION_SATISFIED",n[n.WAIT_FAILED=37149]="WAIT_FAILED"}($||($={})),function(n){n[n.SYNC_GPU_COMMANDS_COMPLETE=37143]="SYNC_GPU_COMMANDS_COMPLETE"}(ee||(ee={})),function(n){n[n.SYNC_FLUSH_COMMANDS_BIT=1]="SYNC_FLUSH_COMMANDS_BIT"}(te||(te={}))},31064:(n,N,S)=>{S.d(N,{_:()=>s});var C=S(60985);function s(n){switch(n){case C.pe.BYTE:case C.pe.UNSIGNED_BYTE:return 1;case C.pe.SHORT:case C.pe.UNSIGNED_SHORT:return 2;case C.pe.FLOAT:case C.pe.INT:case C.pe.UNSIGNED_INT:return 4}}}}]);
//# sourceMappingURL=3663.df14964f.chunk.js.map