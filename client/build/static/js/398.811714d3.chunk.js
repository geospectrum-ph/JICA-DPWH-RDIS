"use strict";(self.webpackChunkSEEDs_v2_0_Client=self.webpackChunkSEEDs_v2_0_Client||[]).push([[398],{68854:(t,e,n)=>{n.d(e,{A:()=>H});var F=n(80671),V=n(4180),N=n(83375),j=n(66004),G=n(89412),O=n(57453),q=n(91779),Z=n(68682);class SimpleBandStatistics_l{constructor(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;this.minValue=t,this.maxValue=e,this.noDataValue=n}}var z,X=n(73489);let J=z=class extends N.oY{static createEmptyBand(t,e){return new(z.getPixelArrayConstructor(t))(e)}static combineBandMasks(t){if(t.length<2)return t[0];const e=t[0].length,n=new Uint8Array(e).fill(255);for(let F=0;F<t.length;F++){const V=t[F];for(let t=0;t<e;t++)V[t]||(n[t]=0)}return n}static getPixelArrayConstructor(t){let e;switch(t){case"u1":case"u2":case"u4":case"u8":e=Uint8Array;break;case"u16":e=Uint16Array;break;case"u32":e=Uint32Array;break;case"s8":e=Int8Array;break;case"s16":e=Int16Array;break;case"s32":e=Int32Array;break;case"f32":case"c64":case"c128":case"unknown":e=Float32Array;break;case"f64":e=Float64Array}return e}constructor(t){super(t),this.width=null,this.height=null,this.pixelType="f32",this.validPixelCount=null,this.mask=null,this.maskIsAlpha=!1,this.premultiplyAlpha=!1,this.statistics=null,this.depthCount=1}castPixelType(t){if(!t)return"f32";let e=t.toLowerCase();return["u1","u2","u4"].includes(e)?e="u8":["unknown","u8","s8","u16","s16","u32","s32","f32","f64"].includes(e)||(e="f32"),e}getPlaneCount(){var t;return null===(t=this.pixels)||void 0===t?void 0:t.length}addData(t){var e;if(!t.pixels||t.pixels.length!==this.width*this.height)throw new V.A("pixelblock:invalid-or-missing-pixels","add data requires valid pixels array that has same length defined by pixel block width * height");this.pixels||(this.pixels=[]),this.statistics||(this.statistics=[]),this.pixels.push(t.pixels),this.statistics.push(null!==(e=t.statistics)&&void 0!==e?e:new SimpleBandStatistics_l)}getAsRGBA(){const t=new ArrayBuffer(this.width*this.height*4);switch(this.pixelType){case"s8":case"s16":case"u16":case"s32":case"u32":case"f32":case"f64":this._fillFromNon8Bit(t);break;default:this._fillFrom8Bit(t)}return new Uint8ClampedArray(t)}getAsRGBAFloat(){const t=new Float32Array(this.width*this.height*4);return this._fillFrom32Bit(t),t}updateStatistics(){if(!this.pixels)return;this.statistics=this.pixels.map((t=>this._calculateBandStatistics(t,this.mask)));const t=this.mask;let e=0;if(null!=t)for(let n=0;n<t.length;n++)t[n]&&e++;else e=this.width*this.height;this.validPixelCount=e}clamp(t){if(!t||"f64"===t||"f32"===t||!this.pixels)return;const[e,n]=(0,X.hP)(t),F=this.pixels,V=this.width*this.height,N=F.length;let j,G,O;const q=[];for(let Z=0;Z<N;Z++){O=z.createEmptyBand(t,V),j=F[Z];for(let t=0;t<V;t++)G=j[t],O[t]=G>n?n:G<e?e:G;q.push(O)}this.pixels=q,this.pixelType=t}extractBands(t){var e;const{pixels:n,statistics:F}=this;if(null==t||0===t.length||!n||0===n.length)return this;const V=n.length,N=t.some((t=>t>=n.length)),j=V===t.length&&!t.some(((t,e)=>t!==e));if(N||j)return this;const G=(null===(e=this.bandMasks)||void 0===e?void 0:e.length)===V?t.map((t=>this.bandMasks[t])):void 0;let{mask:O,validPixelCount:q}=this;const{width:Z,height:X}=this;return null!==G&&void 0!==G&&G.length&&(O=z.combineBandMasks(G),q=O.filter((t=>!!t)).length),new z({pixelType:this.pixelType,width:Z,height:X,mask:O,bandMasks:G,validPixelCount:q,maskIsAlpha:this.maskIsAlpha,pixels:t.map((t=>n[t])),statistics:F&&t.map((t=>F[t]))})}clone(){const t=new z({width:this.width,height:this.height,pixelType:this.pixelType,maskIsAlpha:this.maskIsAlpha,validPixelCount:this.validPixelCount});let e;null!=this.mask&&(this.mask instanceof Uint8Array?t.mask=new Uint8Array(this.mask):t.mask=this.mask.slice(0)),this.bandMasks&&(t.bandMasks=this.bandMasks.map((t=>new Uint8Array(t))));const n=z.getPixelArrayConstructor(this.pixelType);if(this.pixels&&this.pixels.length>0){t.pixels=[];const F=!!this.pixels[0].slice;for(e=0;e<this.pixels.length;e++)t.pixels[e]=F?this.pixels[e].slice(0,this.pixels[e].length):new n(this.pixels[e])}if(this.statistics)for(t.statistics=[],e=0;e<this.statistics.length;e++)t.statistics[e]=(0,j.o8)(this.statistics[e]);return t.premultiplyAlpha=this.premultiplyAlpha,t}_fillFrom8Bit(t){const{mask:e,maskIsAlpha:n,premultiplyAlpha:F,pixels:V}=this;if(!t||null===V||void 0===V||!V.length)return void G.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");let N,j,O,q;N=j=O=V[0],V.length>=3?(j=V[1],O=V[2]):2===V.length&&(j=V[1]);const Z=new Uint32Array(t),z=this.width*this.height;if(N.length===z)if(null!=e&&e.length===z)if(n)for(q=0;q<z;q++){const t=e[q];if(t){const e=t/255;Z[q]=F?t<<24|O[q]*e<<16|j[q]*e<<8|N[q]*e:t<<24|O[q]<<16|j[q]<<8|N[q]}}else for(q=0;q<z;q++)e[q]&&(Z[q]=255<<24|O[q]<<16|j[q]<<8|N[q]);else for(q=0;q<z;q++)Z[q]=255<<24|O[q]<<16|j[q]<<8|N[q];else G.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.")}_fillFromNon8Bit(t){const{pixels:e,mask:n,statistics:F}=this;if(!t||null===e||void 0===e||!e.length)return void G.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The input pixel block is empty.");const V=this.pixelType;let N=1,j=0,O=1;if(F&&F.length>0){for(const t of F)if(null!=t.minValue&&(j=Math.min(j,t.minValue)),null!=t.maxValue&&null!=t.minValue){const e=t.maxValue-t.minValue;O=Math.max(O,e)}N=255/O}else{let t=255;"s8"===V?(j=-128,t=127):"u16"===V?t=65535:"s16"===V?(j=-32768,t=32767):"u32"===V?t=4294967295:"s32"===V?(j=-2147483648,t=2147483647):"f32"===V?(j=-34e38,t=34e38):"f64"===V&&(j=-Number.MAX_VALUE,t=Number.MAX_VALUE),N=255/(t-j)}const q=new Uint32Array(t),Z=this.width*this.height;let z,X,J,H,K;if(z=X=J=e[0],z.length!==Z)return G.A.getLogger(this).error("getAsRGBA()","Unable to convert to RGBA. The pixelblock is invalid.");if(e.length>=2)if(X=e[1],e.length>=3&&(J=e[2]),null!=n&&n.length===Z)for(H=0;H<Z;H++)n[H]&&(q[H]=255<<24|(J[H]-j)*N<<16|(X[H]-j)*N<<8|(z[H]-j)*N);else for(H=0;H<Z;H++)q[H]=255<<24|(J[H]-j)*N<<16|(X[H]-j)*N<<8|(z[H]-j)*N;else if(null!=n&&n.length===Z)for(H=0;H<Z;H++)K=(z[H]-j)*N,n[H]&&(q[H]=255<<24|K<<16|K<<8|K);else for(H=0;H<Z;H++)K=(z[H]-j)*N,q[H]=255<<24|K<<16|K<<8|K}_fillFrom32Bit(t){const{pixels:e,mask:n}=this;if(!t||null===e||void 0===e||!e.length)return G.A.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The input pixel block is empty.");let F,V,N,j;F=V=N=e[0],e.length>=3?(V=e[1],N=e[2]):2===e.length&&(V=e[1]);const O=this.width*this.height;if(F.length!==O)return G.A.getLogger(this).error("getAsRGBAFloat()","Unable to convert to RGBA. The pixelblock is invalid.");let q=0;if(null!=n&&n.length===O)for(j=0;j<O;j++)t[q++]=F[j],t[q++]=V[j],t[q++]=N[j],t[q++]=1&n[j];else for(j=0;j<O;j++)t[q++]=F[j],t[q++]=V[j],t[q++]=N[j],t[q++]=1}_calculateBandStatistics(t,e){let n=1/0,F=-1/0;const V=t.length;let N,j=0;if(null!=e)for(N=0;N<V;N++)e[N]&&(j=t[N],n=j<n?j:n,F=j>F?j:F);else for(N=0;N<V;N++)j=t[N],n=j<n?j:n,F=j>F?j:F;return new SimpleBandStatistics_l(n,F)}};(0,F._)([(0,O.MZ)({json:{write:!0}})],J.prototype,"width",void 0),(0,F._)([(0,O.MZ)({json:{write:!0}})],J.prototype,"height",void 0),(0,F._)([(0,O.MZ)({json:{write:!0}})],J.prototype,"pixelType",void 0),(0,F._)([(0,q.w)("pixelType")],J.prototype,"castPixelType",null),(0,F._)([(0,O.MZ)({json:{write:!0}})],J.prototype,"validPixelCount",void 0),(0,F._)([(0,O.MZ)({json:{write:!0}})],J.prototype,"mask",void 0),(0,F._)([(0,O.MZ)({json:{write:!0}})],J.prototype,"maskIsAlpha",void 0),(0,F._)([(0,O.MZ)({json:{write:!0}})],J.prototype,"pixels",void 0),(0,F._)([(0,O.MZ)()],J.prototype,"premultiplyAlpha",void 0),(0,F._)([(0,O.MZ)({json:{write:!0}})],J.prototype,"statistics",void 0),(0,F._)([(0,O.MZ)({json:{write:!0}})],J.prototype,"depthCount",void 0),(0,F._)([(0,O.MZ)({json:{write:!0}})],J.prototype,"noDataValues",void 0),(0,F._)([(0,O.MZ)({json:{write:!0}})],J.prototype,"bandMasks",void 0),J=z=(0,F._)([(0,Z.$)("esri.layers.support.PixelBlock")],J);const H=J},73489:(t,e,n)=>{n.d(e,{Sp:()=>l,X1:()=>u,hP:()=>s,zw:()=>i});const F=9999999e31,V=2e-7,N={u1:[0,1],u2:[0,3],u4:[0,15],u8:[0,255],s8:[-128,127],u16:[0,65535],s16:[-32768,32767],u32:[0,4294967295],s32:[-2147483648,2147483647],f32:[-34028234663852886e22,34028234663852886e22],f64:[-Number.MAX_VALUE,Number.MAX_VALUE],unknown:void 0,c64:void 0,c128:void 0};function s(t){var e;return null!==(e=N[t])&&void 0!==e?e:[-34028234663852886e22,34028234663852886e22]}function u(t,e){return null==t||null==e?"s32":t<0?t>=-128&&e<128?"s8":t>=-32768&&e<32768?"s16":"s32":e<256?"u8":e<65536?"u16":"u32"}function i(t){var e;return null!==(e=(null===t||void 0===t?void 0:t.startsWith("s"))||(null===t||void 0===t?void 0:t.startsWith("u")))&&void 0!==e&&e}function l(t,e,n){var N,j;if(t.depthCount&&t.depthCount>1)return;const{pixels:G,statistics:O,pixelType:q}=t,Z=G[0].length,z=null!==(N=t.bandMasks)&&void 0!==N?N:[],X=null!==(j=t.mask)&&void 0!==j?j:new Uint8Array(Z).fill(255),J="f32"===q||"f64"===q,H=s(q);let K=!1;for(let et=0;et<G.length;et++){var $,Y,Q,tt;const t="number"==typeof e?e:e[et];if(null==t)continue;const N=null!==($=null===O||void 0===O||null===(Y=O[et])||void 0===Y?void 0:Y.minValue)&&void 0!==$?$:H[0],j=null!==(Q=null===O||void 0===O||null===(tt=O[et])||void 0===tt?void 0:tt.maxValue)&&void 0!==Q?Q:H[1];if(N>t+Number.EPSILON||j<t-Number.EPSILON)continue;const Z=z[et]||X.slice(),nt=G[et],it=null===n||void 0===n?void 0:n.customFloatTolerance;if(J&&0!==it){let e=it;e||(e=Math.abs(t)>=F?V*Math.abs(t):"f32"===q?2**-23:Number.EPSILON);for(let n=0;n<nt.length;n++)Z[n]&&Math.abs(nt[n]-t)<e&&(nt[n]=0,Z[n]=0,X[n]=0,K=!0)}else for(let e=0;e<nt.length;e++)Z[e]&&nt[e]===t&&(nt[e]=0,Z[e]=0,X[e]=0,K=!0);z[et]=Z}K&&(t.bandMasks=t.bandMasks||t.pixels.length>1?z:null,t.mask=X),K&&"updateStatistics"in t&&t.updateStatistics()}},82793:(t,e,n)=>{n.d(e,{$i:()=>D,AB:()=>o,Ew:()=>p,Hx:()=>u,IB:()=>F,J$:()=>E,LY:()=>M,QF:()=>R,UK:()=>c,Wb:()=>V,Wt:()=>w,Wy:()=>r,XU:()=>y,dK:()=>g,eH:()=>f,et:()=>O,lD:()=>W,qL:()=>h,z$:()=>T,z7:()=>U,zg:()=>a});var F,V,N,j=n(68854),G=n(73489);(N=F||(F={}))[N.matchAny=0]="matchAny",N[N.matchAll=1]="matchAll",function(t){t[t.bestMatch=0]="bestMatch",t[t.fail=1]="fail"}(V||(V={}));const O=6;function o(t){return null!=t&&"esri.layers.support.PixelBlock"===t.declaredClass&&t.pixels&&t.pixels.length>0}function r(t){var e,n;if(null===t||void 0===t||!t.length||t.some((t=>!o(t))))return null;if(1===t.length)return null!==(e=null===(n=t[0])||void 0===n?void 0:n.clone())&&void 0!==e?e:null;const F=t,{width:V,height:N,pixelType:G}=F[0];if(F.some((t=>t.width!==V||t.height!==N)))return null;const O=F.map((t=>{let{mask:e}=t;return e})).filter((t=>null!=t));let q=null;O.length&&(q=new Uint8Array(V*N),q.set(O[0]),O.length>1&&m(O.slice(1),q));const Z=[];F.forEach((t=>{let{pixels:e}=t;return Z.push(...e)}));const z=F.map((t=>{let{statistics:e}=t;return e})).filter((t=>null===t||void 0===t?void 0:t.length)),X=[];return z.forEach((t=>X.push(...t))),new j.A({pixelType:G,width:V,height:N,mask:q,pixels:Z,statistics:X.length?X:null})}function a(t){if(!t)return;const e=t.colormap;if(!e||0===e.length)return;const n=e.sort(((t,e)=>t[0]-e[0]));let F=0;n[0][0]<0&&(F=n[0][0]);const V=Math.max(256,n[n.length-1][0]-F+1),N=new Uint8Array(4*V),j=[];let G,O=0,q=0;const Z=5===n[0].length;if(V>65536)return n.forEach((t=>{j[t[0]-F]=Z?t.slice(1):t.slice(1).concat([255])})),{indexed2DColormap:j,offset:F,alphaSpecified:Z};if(t.fillUnspecified)for(G=n[q],O=G[0]-F;O<V;O++)N[4*O]=G[1],N[4*O+1]=G[2],N[4*O+2]=G[3],N[4*O+3]=Z?G[4]:255,O===G[0]-F&&(G=q===n.length-1?G:n[++q]);else for(O=0;O<n.length;O++)G=n[O],q=4*(G[0]-F),N[q]=G[1],N[q+1]=G[2],N[q+2]=G[3],N[q+3]=Z?G[4]:255;return{indexedColormap:N,offset:F,alphaSpecified:Z}}function h(t,e){if(!o(t))return t;if(!e||!e.indexedColormap&&!e.indexed2DColormap)return t;const n=t.clone(),F=n.pixels;let V=n.mask;const N=n.width*n.height;if(1!==F.length)return t;const{indexedColormap:j,indexed2DColormap:G,offset:O,alphaSpecified:q}=e;let Z=0;const z=F[0],X=new Uint8Array(z.length),J=new Uint8Array(z.length),H=new Uint8Array(z.length);let K,$=0;if(j){const t=j.length-1;if(null!=V)for(Z=0;Z<N;Z++)V[Z]&&($=4*(z[Z]-O),$<O||$>t?V[Z]=0:(X[Z]=j[$],J[Z]=j[$+1],H[Z]=j[$+2],V[Z]=j[$+3]));else{for(V=new Uint8Array(N),Z=0;Z<N;Z++)$=4*(z[Z]-O),$<O||$>t?V[Z]=0:(X[Z]=j[$],J[Z]=j[$+1],H[Z]=j[$+2],V[Z]=j[$+3]);n.mask=V}}else if(G)if(null!=V)for(Z=0;Z<N;Z++)V[Z]&&(K=G[z[Z]],X[Z]=K[0],J[Z]=K[1],H[Z]=K[2],V[Z]=K[3]);else{for(V=new Uint8Array(N),Z=0;Z<N;Z++)K=G[z[Z]],X[Z]=K[0],J[Z]=K[1],H[Z]=K[2],V[Z]=K[3];n.mask=V}return n.pixels=[X,J,H],n.statistics=null,n.pixelType="u8",n.maskIsAlpha=q,n}function f(t,e){if(!o(t))return null;const{pixels:n,mask:F}=t,V=n.length;let N=e.lut;const{offset:G}=e;N&&1===N[0].length&&(N=n.map((()=>N)));const O=[],q=e.outputPixelType||"u8";for(let j=0;j<V;j++){const t=c(n[j],F,N[j],G||0,q);O.push(t)}const Z=new j.A({width:t.width,height:t.height,pixels:O,mask:F,pixelType:q});return Z.updateStatistics(),Z}function c(t,e,n,F,V){const N=t.length,G=j.A.createEmptyBand(V,N);if(e)for(let j=0;j<N;j++)e[j]&&(G[j]=n[t[j]-F]);else for(let j=0;j<N;j++)G[j]=n[t[j]-F];return G}function u(t,e){if(!o(t))return null;const n=t.clone(),{pixels:F}=n,V=n.width*n.height,N=e.length,j=Math.floor(N/2),G=e[Math.floor(j)],O=F[0];let q,Z,z,X,J,H,K=!1;const $=new Uint8Array(V),Y=new Uint8Array(V),Q=new Uint8Array(V);let tt=n.mask;const et=4===e[0].mappedColor.length;for(tt||(tt=new Uint8Array(V),tt.fill(et?255:1),n.mask=tt),J=0;J<V;J++)if(tt[J]){for(q=O[J],K=!1,H=j,Z=G,z=0,X=N-1;X-z>1;){if(q===Z.value){K=!0;break}q>Z.value?z=H:X=H,H=Math.floor((z+X)/2),Z=e[Math.floor(H)]}K||(q===e[z].value?(Z=e[z],K=!0):q===e[X].value?(Z=e[X],K=!0):q<e[z].value?(K=!1,Z=null):q>e[z].value&&(q<e[X].value?(Z=e[z],K=!0):X===N-1?(K=!1,Z=null):(Z=e[X],K=!0))),K?($[J]=Z.mappedColor[0],Y[J]=Z.mappedColor[1],Q[J]=Z.mappedColor[2],tt[J]=Z.mappedColor[3]):$[J]=Y[J]=Q[J]=tt[J]=0}return n.pixels=[$,Y,Q],n.mask=tt,n.pixelType="u8",n.maskIsAlpha=et,n}function p(t,e){if(!o(t))return null;const{width:n,height:F}=t,{inputRanges:V,outputValues:N,outputPixelType:O,noDataRanges:q,allowUnmatched:Z,isLastInputRangeInclusive:z}=e,X=t.pixels[0],J=j.A.createEmptyBand(O,X.length),H=t.mask,K=new Uint8Array(n*F);H?K.set(H):K.fill(255);const $=t.pixelType.startsWith("f")?1e-6:0,Y=V.map((t=>t-$));Y[0]=V[0],Y[Y.length-1]=V[V.length-1]+(z?1e-6:0);const Q=V.length/2,[tt,et]=(0,G.hP)(O);for(let j=0;j<F;j++)for(let t=0;t<n;t++){const e=j*n+t;if(K[e]){const t=X[e];let n=!1;for(let F=Q-1;F>=0;F--)if(t===Y[2*F]||t>Y[2*F]&&t<Y[2*F+1]){J[e]=N[F],n=!0;break}n||(Z?J[e]=t>et?et:t<tt?tt:t:K[e]=0)}}const nt=null===q||void 0===q?void 0:q.length;if(nt)for(let j=0;j<F;j++)for(let t=0;t<n;t++){const e=j*n+t;if(!H||H[e]){const t=X[e];for(let n=0;n<nt;n+=2)if(t>=q[n]&&t<=q[n+1]){J[e]=0,K[e]=0;break}}}return new j.A({width:n,height:F,pixelType:O,pixels:[J],mask:K})}function x(t,e,n,F){const V=null!=n&&n.length>=2?new Set(n):null,N=1===(null===n||void 0===n?void 0:n.length)?n[0]:null,j=!(null===e||void 0===e||!e.length);for(let G=0;G<t.length;G++)if(F[G]){const n=t[G];if(j){let t=!1;for(let F=0;F<e.length;F+=2)if(n>=e[F]&&n<=e[F+1]){t=!0;break}t||(F[G]=0)}F[G]&&(n===N||(null===V||void 0===V?void 0:V.has(n)))&&(F[G]=0)}}function d(t,e){const n=t[0].length;for(let F=0;F<n;F++)if(e[F]){let n=!1;for(let e=0;e<t.length;e++)if(t[e][F]){n=!0;break}n||(e[F]=0)}}function m(t,e){const n=t[0].length;for(let F=0;F<n;F++)if(e[F]){let n=!1;for(let e=0;e<t.length;e++)if(0===t[e][F]){n=!0;break}n&&(e[F]=0)}}function g(t,e){if(!o(t))return null;const{width:n,height:F,pixels:V}=t,N=n*F,G=new Uint8Array(N);t.mask?G.set(t.mask):G.fill(255);const O=V.length,{includedRanges:q,noDataValues:Z,outputPixelType:z,matchAll:X,lookups:J}=e;if(J){const t=[];for(let e=0;e<O;e++){const n=J[e],F=c(V[e],G,n.lut,n.offset||0,"u8");t.push(F)}1===t.length?G.set(t[0]):X?d(t,G):m(t,G)}else if(X){const t=[];for(let e=0;e<O;e++){const n=new Uint8Array(N);n.set(G),x(V[e],null===q||void 0===q?void 0:q.slice(2*e,2*e+2),null===Z||void 0===Z?void 0:Z[e],n),t.push(n)}1===t.length?G.set(t[0]):d(t,G)}else for(let j=0;j<O;j++)x(V[j],null===q||void 0===q?void 0:q.slice(2*j,2*j+2),null===Z||void 0===Z?void 0:Z[j],G);return new j.A({width:n,height:F,pixelType:z,pixels:V,mask:G})}function y(t){const{srcPixelType:e,inputRanges:n,outputValues:F,allowUnmatched:V,noDataRanges:N,isLastInputRangeInclusive:O,outputPixelType:q}=t;if("u8"!==e&&"s8"!==e&&"u16"!==e&&"s16"!==e)return null;const Z=e.includes("16")?65536:256,z=e.includes("s")?-Z/2:0,X=j.A.createEmptyBand(q,Z),J=new Uint8Array(Z);V&&J.fill(255);const[H,K]=(0,G.hP)(q);if(null!==n&&void 0!==n&&n.length&&null!==F&&void 0!==F&&F.length){const t=1e-6,e=n.map((e=>e-t));e[0]=n[0],O&&(e[e.length-1]=n[n.length-1]);for(let n=0;n<e.length;n++){const t=F[n]>K?K:F[n]<H?H:F[n],V=Math.ceil(e[2*n]-z),N=Math.floor(e[2*n+1]-z);for(let e=V;e<=N;e++)X[e]=t,J[e]=255}}if(null!==N&&void 0!==N&&N.length)for(let j=0;j<N.length;j++){const t=Math.ceil(N[2*j]-z),e=Math.floor(N[2*j+1]-z);for(let n=t;n<=e;n++)J[n]=0}return{lut:X,offset:z,mask:J}}function w(t,e,n){if("u8"!==t&&"s8"!==t&&"u16"!==t&&"s16"!==t)return null;const F=t.includes("16")?65536:256,V=t.includes("s")?-F/2:0,N=new Uint8Array(F);if(e)for(let j=0;j<e.length;j++){const t=Math.ceil(e[2*j]-V),n=Math.floor(e[2*j+1]-V);for(let e=t;e<=n;e++)N[e]=255}else N.fill(255);if(n)for(let j=0;j<n.length;j++)N[n[j]-V]=0;return{lut:N,offset:V}}function M(t,e){if(!t||0===t.length)return null;const n=t.find((t=>t.pixelBlock));if(null==(null===n||void 0===n?void 0:n.pixelBlock))return null;const F=(n.extent.xmax-n.extent.xmin)/n.pixelBlock.width,V=(n.extent.ymax-n.extent.ymin)/n.pixelBlock.height,N=.01*Math.min(F,V),j=t.sort(((t,e)=>Math.abs(t.extent.ymax-e.extent.ymax)>N?e.extent.ymax-t.extent.ymax:Math.abs(t.extent.xmin-e.extent.xmin)>N?t.extent.xmin-e.extent.xmin:0)),G=Math.min.apply(null,j.map((t=>t.extent.xmin))),O=Math.min.apply(null,j.map((t=>t.extent.ymin))),q=Math.max.apply(null,j.map((t=>t.extent.xmax))),Z=Math.max.apply(null,j.map((t=>t.extent.ymax))),z={x:Math.round((e.xmin-G)/F),y:Math.round((Z-e.ymax)/V)},X={width:Math.round((q-G)/F),height:Math.round((Z-O)/V)},J={width:Math.round((e.xmax-e.xmin)/F),height:Math.round((e.ymax-e.ymin)/V)};return Math.round(X.width/n.pixelBlock.width)*Math.round(X.height/n.pixelBlock.height)!==j.length||z.x<0||z.y<0||X.width<J.width||X.height<J.height?null:{extent:e,pixelBlock:U(j.map((t=>t.pixelBlock)),X,{clipOffset:z,clipSize:J})}}function A(t,e,n,F,V,N){const{width:j,height:G}=n.block,{x:O,y:q}=n.offset,{width:Z,height:z}=n.mosaic,X=function k(t,e,n,F,V,N,j,G){return{xmin:V<=n*t?0:V<n*t+t?V-n*t:t,ymin:N<=F*e?0:N<F*e+e?N-F*e:e,xmax:V+j<=n*t?0:V+j<n*t+t?V+j-n*t:t,ymax:N+G<=F*e?0:N+G<F*e+e?N+G-F*e:e}}(j,G,F,V,O,q,Z,z);let J=0,H=0;if(N){var K;const t=N.hasGCSSShiftTransform?360:null!==(K=N.halfWorldWidth)&&void 0!==K?K:0,e=j*N.resolutionX,n=N.startX+F*e;n<t&&n+e>t?H=N.rightPadding:n>=t&&(J=N.leftMargin-N.rightPadding,H=0)}if(X.xmax-=H,"number"!=typeof e)for(let $=X.ymin;$<X.ymax;$++){const n=(V*G+$-q)*Z+(F*j-O)+J,N=$*j;for(let F=X.xmin;F<X.xmax;F++)t[n+F]=e[N+F]}else for(let $=X.ymin;$<X.ymax;$++){const n=(V*G+$-q)*Z+(F*j-O)+J;for(let F=X.xmin;F<X.xmax;F++)t[n+F]=e}}function U(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};const{clipOffset:F,clipSize:V,alignmentInfo:N,blockWidths:G}=n;if(G)return function b(t,e,n){const F=t.find((t=>null!=t));if(null==F)return null;const V=t.some((t=>null==t||!!t.mask)),{width:N,height:G}=e,O=V?new Uint8Array(N*G):null,{blockWidths:q}=n,Z=[],z=F.getPlaneCount(),X=j.A.getPixelArrayConstructor(F.pixelType);if(V)for(let j=0,tt=0;j<t.length;tt+=q[j],j++){const e=t[j];if(!o(e))continue;const n=e.mask;for(let t=0;t<G;t++)for(let F=0;F<q[j];F++)O[t*N+F+tt]=null==n?255:n[t*e.width+F]}const J=t.some((t=>(null===t||void 0===t?void 0:t.bandMasks)&&t.bandMasks.length>1)),H=J?[]:void 0,K=N*G;for(let j=0;j<z;j++){const e=new X(K),n=J?new Uint8Array(K):void 0;for(let F=0,V=0;F<t.length;V+=q[F],F++){const O=t[F];if(!o(O))continue;const Z=O.pixels[j];if(null!=Z){for(let t=0;t<G;t++)for(let n=0;n<q[F];n++)e[t*N+n+V]=Z[t*O.width+n];if(n){var $,Y;const t=null!==($=null===(Y=O.bandMasks)||void 0===Y?void 0:Y[j])&&void 0!==$?$:O.mask;for(let e=0;e<G;e++)for(let j=0;j<q[F];j++)n[e*N+j+V]=t?t[e*O.width+j]:255}}}Z.push(e),H&&n&&H.push(n)}const Q=new j.A({width:N,height:G,mask:O,bandMasks:H,pixels:Z,pixelType:F.pixelType});return Q.updateStatistics(),Q}(t,e,{blockWidths:G});const O=t.find((t=>o(t)));if(null==O)return null;const q=V?V.width:e.width,Z=V?V.height:e.height,z=O.width,X=O.height,J=e.width/z,H=e.height/X,K={offset:F||{x:0,y:0},mosaic:V||e,block:{width:z,height:X}},$=O.pixelType,Y=j.A.getPixelArrayConstructor($),Q=O.pixels.length,tt=[];let et,nt;for(let j=0;j<Q;j++){nt=new Y(q*Z);for(let e=0;e<H;e++)for(let n=0;n<J;n++){const F=t[e*J+n];o(F)&&(et=F.pixels[j],A(nt,et,K,n,e,N))}tt.push(nt)}const it=t.some((t=>null==t||null!=t.mask&&t.mask.length>0)),lt=t.some((t=>(null===t||void 0===t?void 0:t.bandMasks)&&t.bandMasks.length>1)),ot=it?new Uint8Array(q*Z):void 0,st=lt?[]:void 0;if(ot){for(let e=0;e<H;e++)for(let n=0;n<J;n++){const F=t[e*J+n],V=null!=F?F.mask:null;A(ot,null!=V?V:F?255:0,K,n,e,N)}if(st)for(let e=0;e<Q;e++){const n=new Uint8Array(q*Z);for(let F=0;F<H;F++)for(let V=0;V<J;V++){var rt,at;const j=t[F*J+V],G=null!==(rt=null===j||void 0===j||null===(at=j.bandMasks)||void 0===at?void 0:at[e])&&void 0!==rt?rt:null===j||void 0===j?void 0:j.mask;A(n,null!=G?G:j?255:0,K,V,F,N)}st.push(n)}}const ht=new j.A({width:q,height:Z,pixels:tt,pixelType:$,bandMasks:st,mask:ot});return ht.updateStatistics(),ht}function T(t,e,n){if(!o(t))return null;const{width:F,height:V}=t,N=e.x,j=e.y,G=n.width+N,O=n.height+j;if(N<0||j<0||G>F||O>V)return t;if(0===N&&0===j&&G===F&&O===V)return t;t.mask||(t.mask=new Uint8Array(F*V));const q=t.mask;for(let Z=0;Z<V;Z++){const t=Z*F;for(let e=0;e<F;e++)q[t+e]=Z<j||Z>=O||e<N||e>=G?0:1}return t.updateStatistics(),t}function v(t){if(!o(t))return null;const e=t.clone(),{width:n,height:F,pixels:V}=t,N=V[0],j=e.pixels[0],G=t.mask;for(let O=2;O<F-1;O++){const t=new Map;for(let F=O-2;F<O+2;F++)for(let e=0;e<4;e++){const V=F*n+e;S(t,N[V],G?G[V]:1)}j[O*n]=B(t),j[O*n+1]=j[O*n+2]=j[O*n];let e=3;for(;e<n-1;e++){let F=(O-2)*n+e+1;S(t,N[F],G?G[F]:1),F=(O-1)*n+e+1,S(t,N[F],G?G[F]:1),F=O*n+e+1,S(t,N[F],G?G[F]:1),F=(O+1)*n+e+1,S(t,N[F],G?G[F]:1),F=(O-2)*n+e-3,C(t,N[F],G?G[F]:1),F=(O-1)*n+e-3,C(t,N[F],G?G[F]:1),F=O*n+e-3,C(t,N[F],G?G[F]:1),F=(O+1)*n+e-3,C(t,N[F],G?G[F]:1),j[O*n+e]=B(t)}j[O*n+e+1]=j[O*n+e]}for(let O=0;O<n;O++)j[O]=j[n+O]=j[2*n+O],j[(F-1)*n+O]=j[(F-2)*n+O];return e.updateStatistics(),e}function B(t){if(0===t.size)return 0;let e=0,n=-1,F=0;const V=t.keys();let N=V.next();for(;!N.done;)F=t.get(N.value),F>e&&(n=N.value,e=F),N=V.next();return n}function C(t,e,n){if(0===n)return;const F=t.get(e);1===F?t.delete(e):t.set(e,F-1)}function S(t,e,n){0!==n&&t.set(e,t.has(e)?t.get(e)+1:1)}function P(t,e,n){let{x:F,y:V}=e;const{width:N,height:G}=n;if(0===F&&0===V&&G===t.height&&N===t.width)return t;const{width:O,height:q}=t,Z=Math.max(0,V),z=Math.max(0,F),X=Math.min(F+N,O),J=Math.min(V+G,q);if(X<0||J<0||!o(t))return null;F=Math.max(0,-F),V=Math.max(0,-V);const{pixels:H}=t,K=N*G,$=H.length,Y=[];for(let nt=0;nt<$;nt++){const e=H[nt],n=j.A.createEmptyBand(t.pixelType,K);for(let t=Z;t<J;t++){const j=t*O;let G=(t+V-Z)*N+F;for(let t=z;t<X;t++)n[G++]=e[j+t]}Y.push(n)}const Q=new Uint8Array(K),tt=t.mask;for(let j=Z;j<J;j++){const t=j*O;let e=(j+V-Z)*N+F;for(let n=z;n<X;n++)Q[e++]=tt?tt[t+n]:1}const et=new j.A({width:n.width,height:n.height,pixelType:t.pixelType,pixels:Y,mask:Q});return et.updateStatistics(),et}function _(t){let e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];if(!o(t))return null;const{pixels:n,width:F,height:V,mask:N,pixelType:G}=t,O=[],q=Math.round(F/2),Z=Math.round(V/2),z=V-1,X=F-1;for(let H=0;H<n.length;H++){const t=n[H],N=j.A.createEmptyBand(G,q*Z);let J=0;for(let n=0;n<V;n+=2)for(let V=0;V<F;V+=2){const j=t[n*F+V];if(e){const e=V===X?j:t[n*F+V+1],G=n===z?j:t[n*F+V+F],O=V===X?G:n===z?e:t[n*F+V+F+1];N[J++]=(j+e+G+O)/4}else N[J++]=j}O.push(N)}let J=null;if(null!=N){J=new Uint8Array(q*Z);let t=0;for(let n=0;n<V;n+=2)for(let V=0;V<F;V+=2){const j=N[n*F+V];if(e){const e=V===X?j:N[n*F+V+1],G=n===z?j:N[n*F+V+F],O=V===X?G:n===z?e:N[n*F+V+F+1];J[t++]=j*e*G*O?1:0}else J[t++]=j}}return new j.A({width:q,height:Z,pixelType:G,pixels:O,mask:J})}function W(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,F=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];if(!o(t))return null;const{width:V,height:N}=e;let{width:j,height:G}=t;const O=new Map,q={x:0,y:0},Z=1+n;let z=t;for(let X=0;X<Z;X++){const t=Math.ceil(j/V),n=Math.ceil(G/N);for(let F=0;F<n;F++){q.y=F*N;for(let n=0;n<t;n++){q.x=n*V;const t=P(z,q,e);O.set("".concat(X,"/").concat(F,"/").concat(n),t)}}X<Z-1&&(z=_(z,F)),j=Math.round(j/2),G=Math.round(G/2)}return O}function E(t){const{pixelBlock:e,tileSize:n,level:F,row:V,col:N,useBilinear:j}=t;if(!o(e))return null;const{width:G,height:O}=n,q=2**F,Z=q*G,z=q*O;let X=P(e,{y:V*z,x:N*Z},{width:Z,height:z});if(!X)return null;for(let J=F;J>0;J--)X=_(X,j);return X}function I(t,e,n,F){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0;const{width:N,height:j}=t,{width:G,height:O}=e,q=F.cols,Z=F.rows,z=Math.ceil(G/q-.1/q),X=Math.ceil(O/Z-.1/Z);let J,H,K,$,Y,Q,tt;const et=z*q,nt=et*X*Z,it=new Float32Array(nt),lt=new Float32Array(nt),ot=new Uint32Array(nt),st=new Uint32Array(nt);let rt,at,ht=0;for(let ut=0;ut<X;ut++)for(let t=0;t<z;t++){J=12*(ut*z+t),H=n[J],K=n[J+1],$=n[J+2],Y=n[J+3],Q=n[J+4],tt=n[J+5];for(let e=0;e<Z;e++){ht=(ut*Z+e)*et+t*q,at=(e+.5)/Z;for(let t=0;t<e;t++)rt=(t+.5)/q,it[ht+t]=(H*rt+K*at+$)*N+V,lt[ht+t]=(Y*rt+Q*at+tt)*j+V,ot[ht+t]=Math.floor(it[ht+t]),st[ht+t]=Math.floor(lt[ht+t])}J+=6,H=n[J],K=n[J+1],$=n[J+2],Y=n[J+3],Q=n[J+4],tt=n[J+5];for(let e=0;e<Z;e++){ht=(ut*Z+e)*et+t*q,at=(e+.5)/Z;for(let t=e;t<q;t++)rt=(t+.5)/q,it[ht+t]=(H*rt+K*at+$)*N+V,lt[ht+t]=(Y*rt+Q*at+tt)*j+V,ot[ht+t]=Math.floor(it[ht+t]),st[ht+t]=Math.floor(lt[ht+t])}}return{offsets_x:it,offsets_y:lt,offsets_xi:ot,offsets_yi:st,gridWidth:et}}function R(t,e){const{coefficients:n,spacing:F}=e,{offsets_x:V,offsets_y:N,gridWidth:j}=I(t,t,n,{rows:F[0],cols:F[1]}),{width:G,height:O}=t,q=new Float32Array(G*O),Z=180/Math.PI;for(let z=0;z<O;z++)for(let t=0;t<G;t++){const e=z*j+t,n=0===z?e:e-j,F=z===O-1?e:e+j,X=V[n]-V[F],J=N[F]-N[n];if(isNaN(X)||isNaN(J))q[z*G+t]=90;else{let e=Math.atan2(J,X)*Z;e=(360+e)%360,q[z*G+t]=e}}return q}function D(t,e,n,F){let V=arguments.length>4&&void 0!==arguments[4]?arguments[4]:"nearest";if(!o(t))return null;"majority"===V&&(t=v(t));const{pixels:N,mask:G,bandMasks:O,pixelType:q}=t,Z=t.width,z=t.height,X=j.A.getPixelArrayConstructor(q),J=N.length,{width:H,height:K}=e;let $=!1;for(let j=0;j<n.length;j+=3)-1===n[j]&&-1===n[j+1]&&-1===n[j+2]&&($=!0);const{offsets_x:Y,offsets_y:Q,offsets_xi:tt,offsets_yi:et,gridWidth:nt}=I({width:Z,height:z},e,n,F,"majority"===V?.5:0);let it;const b=(t,e,n,F)=>{const V=t instanceof Float32Array||t instanceof Float64Array?0:.5;for(let N=0;N<K;N++){it=N*nt;for(let j=0;j<H;j++){if(Y[it]<0||Q[it]<0)t[N*H+j]=0;else if(F)t[N*H+j]=e[tt[it]+et[it]*Z];else{const F=Math.floor(Y[it]),G=Math.floor(Q[it]),O=Math.ceil(Y[it]),q=Math.ceil(Q[it]),z=Y[it]-F,X=Q[it]-G;if(!n||n[F+G*Z]&&n[O+G*Z]&&n[F+q*Z]&&n[O+q*Z]){const n=(1-z)*e[F+G*Z]+z*e[O+G*Z],J=(1-z)*e[F+q*Z]+z*e[O+q*Z];t[N*H+j]=(1-X)*n+X*J+V}else t[N*H+j]=e[tt[it]+et[it]*Z]}it++}}},lt=[];let ot;const st=(null===O||void 0===O?void 0:O.length)===J,rt=[];for(let j=0;j<J;j++){if(st){const t=new Uint8Array(H*K);b(t,O[j],O[j],!0),rt.push(t)}ot=new X(H*K),b(ot,N[j],st?O[j]:G,"nearest"===V||"majority"===V),lt.push(ot)}const at=new j.A({width:H,height:K,pixelType:q,pixels:lt,bandMasks:st?rt:void 0});if(null!=G)at.mask=new Uint8Array(H*K),b(at.mask,G,G,!0);else if($){at.mask=new Uint8Array(H*K);for(let t=0;t<H*K;t++)at.mask[t]=Y[t]<0||Q[t]<0?0:1}return at.updateStatistics(),at}},60782:(t,e,n)=>{n.d(e,{$Q:()=>m,FI:()=>f,KL:()=>a,Lu:()=>l,MD:()=>q,Rn:()=>p,Ud:()=>_,Wu:()=>S,Y2:()=>u,gf:()=>U});var F=n(40530),V=n(68854),N=n(82793);const j=new Map;j.set("meter-per-second",1),j.set("kilometer-per-hour",.277778),j.set("knots",.514444),j.set("feet-per-second",.3048),j.set("mile-per-hour",.44704);const G=180/Math.PI,O=5,q=new F.J({esriMetersPerSecond:"meter-per-second",esriKilometersPerHour:"kilometer-per-hour",esriKnots:"knots",esriFeetPerSecond:"feet-per-second",esriMilesPerHour:"mile-per-hour"});function a(t,e){return j.get(t)/j.get(e)||1}function h(t){return(450-t)%360}function l(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"geographic";const[n,F]=t,V=Math.sqrt(n*n+F*F);let N=Math.atan2(F,n)*G;return N=(360+N)%360,"geographic"===e&&(N=h(N)),[V,N]}function c(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"geographic",n=t[1];"geographic"===e&&(n=h(n)),n%=360;const F=t[0];return[F*Math.cos(n/G),F*Math.sin(n/G)]}function u(t,e,n){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"geographic";if(!(0,N.AB)(t)||null==n)return t;const V="vector-magdir"===e?t.clone():f(t,e),j=V.pixels[1];for(let N=0;N<j.length;N++)j[N]="geographic"===F?(j[N]+n[N]+270)%360:(j[N]+360-n[N])%360;return"vector-magdir"===e?V:f(V,"vector-magdir")}function f(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"geographic",F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;if(!(0,N.AB)(t))return t;const{pixels:j,width:G,height:O}=t,q=G*O,Z=j[0],z=j[1],X=t.pixelType.startsWith("f")?t.pixelType:"f32",J=V.A.createEmptyBand(X,q),H=V.A.createEmptyBand(X,q);let K=0;for(let V=0;V<O;V++)for(let t=0;t<G;t++)"vector-uv"===e?([J[K],H[K]]=l([Z[K],z[K]],n),J[K]*=F):([J[K],H[K]]=c([Z[K],z[K]],n),J[K]*=F,H[K]*=F),K++;const $=new V.A({pixelType:X,width:t.width,height:t.height,mask:t.mask,validPixelCount:t.validPixelCount,maskIsAlpha:t.maskIsAlpha,pixels:[J,H]});return $.updateStatistics(),$}function p(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1;if(1===n||!(0,N.AB)(t))return t;const F=t.clone(),{pixels:V,width:j,height:G}=F,O=V[0],q=V[1];let Z=0;for(let N=0;N<G;N++)for(let t=0;t<j;t++)"vector-uv"===e?(O[Z]*=n,q[Z]*=n):O[Z]*=n,Z++;return F.updateStatistics(),F}function m(t,e,n,F,V){if(null==V||!V.spatialReference.equals(t.spatialReference))return{extent:t,width:Math.round(e/F),height:Math.round(n/F),resolution:t.width/e};const N=V.xmin,j=V.ymax,G=(t.xmax-t.xmin)/e*F,O=(t.ymax-t.ymin)/n*F,q=(G+O)/2;return t.xmin=N+Math.floor((t.xmin-N)/G)*G,t.xmax=N+Math.ceil((t.xmax-N)/G)*G,t.ymin=j+Math.floor((t.ymin-j)/O)*O,t.ymax=j+Math.ceil((t.ymax-j)/O)*O,{extent:t,width:Math.round(t.width/G),height:Math.round(t.height/O),resolution:q}}const Z=g(0,0,0);function g(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:Math.PI,F=!(arguments.length>3&&void 0!==arguments[3])||arguments[3];F&&(n=(2*Math.PI-n)%(2*Math.PI));const V=F?-1:1,N=13*V,j=-7*V,G=-2*V,O=-16*V,q=21.75,[Z,z]=M(0,e+N,n,q),[X,J]=M(t-5.5,e+j,n,q),[H,K]=M(t+5.5,e+j,n,q),[$,Y]=M(t-1.5,e+G,n,q),[Q,tt]=M(t+1.5,e+G,n,q),[et,nt]=M(t-1.5,e+O,n,q),[it,lt]=M(t+1.5,e+O,n,q);return[Z,z,X,J,$,Y,Q,tt,H,K,et,nt,it,lt]}function x(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:Math.PI,n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];n&&(e=(2*Math.PI-e)%(2*Math.PI));const F=n?-1:1,V=5*F,N=20*F,j=25*F,G=45,q=2*F,Z=n?1:-1,z=5*Z;let[X,J]=[0+z,0-N],[H,K]=[X+2*Z,J],[$,Y]=[H-0*Z,K+q],[Q,tt]=[0-z,0-j],[et,nt]=[Q+0*Z,tt-q],it=Math.ceil(t/O),lt=Math.floor(it/10);it-=8*lt;const ot=[],st=[];for(let O=0;O<it/2;O++,lt--){lt<=0&&it%2==1&&O===(it-1)/2&&(Q=0,et=Q+0*Z,tt=(tt+J)/2,nt=tt-q);const[t,n]=M(Q,tt,e,G);if(lt>0){const[F,V]=M(H,tt,e,G),[N,j]=M(X,J,e,G);ot.push(F),ot.push(V),ot.push(t),ot.push(n),ot.push(N),ot.push(j)}else{const[F,V]=M(H,K,e,G),[N,j]=M($,Y,e,G),[O,q]=M(et,nt,e,G);st.push(t),st.push(n),st.push(O),st.push(q),st.push(N),st.push(j),st.push(F),st.push(V)}tt+=V,J+=V,K+=V,Y+=V,nt+=V}const[rt,at]=M(0+z,0+N,e,G),ht=7*Z,[ut,ct]=M(0+ht,0+N,e,G),[ft,dt]=M(0+z,0-j,e,G),[pt,gt]=M(0+ht,0-j,e,G);return{pennants:ot,barbs:st,shaft:[rt,at,ut,ct,ft,dt,pt,gt]}}function M(t,e,n){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:1;const V=Math.sqrt(t*t+e*e)/F,N=(2*Math.PI+Math.atan2(e,t))%(2*Math.PI);return[V,(2*Math.PI+N-n)%(2*Math.PI)]}const z=[0,1,3,6,10,16,21,27,33,40,47,55,63],X=[0,.5,1,1.5,2],J=[0,.25,.5,1,1.5,2,2.5,3,3.5,4];function P(t,e,n,F){const V=a(F||"knots",n);let N;for(N=1;N<e.length;N++)if(N===e.length-1){if(t<e[N]*V)break}else if(t<=e[N]*V)break;return Math.min(N-1,e.length-2)}function b(t,e,n,F,V){let N=0;switch(e){case"beaufort_kn":N=P(t,z,"knots",n);break;case"beaufort_km":N=P(t,z,"kilometer-per-hour",n);break;case"beaufort_ft":N=P(t,z,"feet-per-second",n);break;case"beaufort_m":N=P(t,z,"meter-per-second",n);break;case"classified_arrow":N=P(t,null!==V&&void 0!==V?V:[],F,n);break;case"ocean_current_m":N=P(t,X,"meter-per-second",n);break;case"ocean_current_kn":N=P(t,J,"knots",n)}return N}const H=[];function _(t,e){let n=0,F=0;const{width:V,height:N,mask:j}=t,G=t.pixels[0],Z=[],z=[],X=a(q.fromJSON(e.inputUnit),"knots"),J="wind_speed"===e.style?O:Number.MAX_VALUE;for(let O=0;O<N;O++)for(let t=0;t<V;t++){const e=G[O*V+t]*X;if((!j||j[O*V+t])&&e<J){for(let F=0;F<4;F++)Z[n++]=(t+.5)/V,Z[n++]=(O+.5)/N,Z[n++]=F<2?-.5:.5,Z[n++]=F%2==0?-.5:.5,Z[n++]=0,Z[n++]=e;const j=4*(n/24-1);z[F++]=j,z[F++]=j+1,z[F++]=j+2,z[F++]=j+1,z[F++]=j+2,z[F++]=j+3}}return{vertexData:new Float32Array(Z),indexData:new Uint32Array(z)}}function U(t,e){return"simple_scalar"===e.style?_(t,e):"wind_speed"===e.style?function A(t,e){if(0===H.length)for(let O=0;O<30;O++)H.push(x(5*O,0,!e.invertDirection));const n=a(q.fromJSON(e.inputUnit),"knots"),{width:F,height:V,mask:N}=t,j=t.pixels[0],G=t.pixels[1],Z=[],z=[];let X=0,J=0;for(let q=0;q<V;q++)for(let t=0;t<F;t++){const e=q*F+t,K=j[e]*n;if((!N||N[q*F+t])&&K>=O){const n=(G[e]+360)%360/180*Math.PI,{pennants:N,barbs:j,shaft:O}=H[Math.min(Math.floor(K/5),29)];if(N.length+j.length===0)continue;let $=Z.length/6;const Y=(t+.5)/F,Q=(q+.5)/V;for(let t=0;t<N.length;t+=2)Z[X++]=Y,Z[X++]=Q,Z[X++]=N[t],Z[X++]=N[t+1]+n,Z[X++]=0,Z[X++]=K;for(let t=0;t<j.length;t+=2)Z[X++]=Y,Z[X++]=Q,Z[X++]=j[t],Z[X++]=j[t+1]+n,Z[X++]=0,Z[X++]=K;for(let t=0;t<O.length;t+=2)Z[X++]=Y,Z[X++]=Q,Z[X++]=O[t],Z[X++]=O[t+1]+n,Z[X++]=0,Z[X++]=K;for(let t=0;t<N.length/6;t++)z[J++]=$,z[J++]=$+1,z[J++]=$+2,$+=3;for(let t=0;t<j.length/8;t++)z[J++]=$,z[J++]=$+1,z[J++]=$+2,z[J++]=$+1,z[J++]=$+2,z[J++]=$+3,$+=4;z[J++]=$+0,z[J++]=$+1,z[J++]=$+2,z[J++]=$+1,z[J++]=$+3,z[J++]=$+2,$+=4}}return{vertexData:new Float32Array(Z),indexData:new Uint32Array(z)}}(t,e):function v(t,e){const{style:n,inputUnit:F,outputUnit:V,breakValues:N}=e,j=q.fromJSON(F),G=q.fromJSON(V);let O=0,z=0;const{width:X,height:J,mask:H}=t,K=t.pixels[0],$=t.pixels[1],Y=null!=H?H.filter((t=>t>0)).length:X*J,Q=new Float32Array(42*Y),tt=new Uint32Array(15*Y),et=e.invertDirection?g(0,0,0,!1):Z;for(let q=0;q<J;q++)for(let t=0;t<X;t++){const e=q*X+t;if(!H||H[q*X+t]){const F=($[e]+360)%360/180*Math.PI,V=b(K[e],n,j,G,N);for(let n=0;n<et.length;n+=2)Q[O++]=(t+.5)/X,Q[O++]=(q+.5)/J,Q[O++]=et[n],Q[O++]=et[n+1]+F,Q[O++]=V,Q[O++]=K[e];const Z=7*(O/42-1);tt[z++]=Z,tt[z++]=Z+1,tt[z++]=Z+2,tt[z++]=Z+0,tt[z++]=Z+4,tt[z++]=Z+3,tt[z++]=Z+0,tt[z++]=Z+2,tt[z++]=Z+3,tt[z++]=Z+2,tt[z++]=Z+5,tt[z++]=Z+3,tt[z++]=Z+5,tt[z++]=Z+6,tt[z++]=Z+3}}return{vertexData:Q,indexData:tt}}(t,e)}function S(t,e,n){let F=arguments.length>3&&void 0!==arguments[3]?arguments[3]:[0,0],N=arguments.length>4&&void 0!==arguments[4]?arguments[4]:.5;const{width:j,height:G,mask:O}=t,[q,Z]=t.pixels,[z,X]=F,J=Math.round((j-z)/n),H=Math.round((G-X)/n),K=J*H,$=new Float32Array(K),Y=new Float32Array(K),Q=new Uint8Array(K),tt="vector-uv"===e;for(let V=0;V<H;V++)for(let t=0;t<J;t++){let e=0;const F=V*J+t,H=Math.max(0,V*n+X),K=Math.max(0,t*n+z),et=Math.min(G,H+n),nt=Math.min(j,K+n);for(let t=H;t<et;t++)for(let n=K;n<nt;n++){const V=t*j+n;if(!O||O[V]){e++;const t=tt?[q[V],Z[V]]:[q[V],(360+Z[V])%360],[n,N]=tt?t:c(t);$[F]+=n,Y[F]+=N}}if(e>=(et-H)*(nt-K)*(1-N)){Q[F]=1;const[t,n]=l([$[F]/e,Y[F]/e]);$[F]=t,Y[F]=n}else Q[F]=0,$[F]=0,Y[F]=0}const et=new V.A({width:J,height:H,pixels:[$,Y],mask:Q});return et.updateStatistics(),et}},72013:(t,e,n)=>{n.d(e,{CW:()=>s,pH:()=>g});n(30174);var F=n(50886),V=n(89412),N=n(48237),j=n(81618),G=n(76761),O=n(78395),q=n(84661);const i=()=>V.A.getLogger("esri.views.2d.engine.flow.dataUtils"),Z=10;async function s(t,e,n,V){const N=performance.now(),O=c(e,n),q=performance.now(),z=u(e,O,n.width,n.height),X=performance.now(),J=function m(t,e){const n=new G.A,F=t.reduce(((t,e)=>t+e.length),0),V=new Float32Array(4*F),N=new Array(t.length);let j=0,O=0;for(const G of t){const t=j;for(const e of G)V[4*j]=e.x,V[4*j+1]=e.y,V[4*j+2]=e.t,V[4*j+3]=e.speed,j++;N[O++]={startVertex:t,numberOfVertices:G.length,totalTime:G[G.length-1].t,timeSeed:e?n.getFloat():0}}return{lineVertices:V,lineDescriptors:N}}(z,!0),H=performance.now(),K="Streamlines"===t?function d(t,e){const n=9,{lineVertices:F,lineDescriptors:V}=t;let N=0,j=0;for(const z of V)N+=2*z.numberOfVertices,j+=6*(z.numberOfVertices-1);const G=new Float32Array(N*n),O=new Uint32Array(j);let q=0,Z=0;function u(){O[Z++]=q-2,O[Z++]=q,O[Z++]=q-1,O[Z++]=q,O[Z++]=q+1,O[Z++]=q-1}function h(t,e,F,V,N,j,O,Z){const z=q*n;let X=0;G[z+X++]=t,G[z+X++]=e,G[z+X++]=1,G[z+X++]=F,G[z+X++]=j,G[z+X++]=O,G[z+X++]=V/2,G[z+X++]=N/2,G[z+X++]=Z,q++,G[z+X++]=t,G[z+X++]=e,G[z+X++]=-1,G[z+X++]=F,G[z+X++]=j,G[z+X++]=O,G[z+X++]=-V/2,G[z+X++]=-N/2,G[z+X++]=Z,q++}for(const z of V){const{totalTime:t,timeSeed:n}=z;let V=null,N=null,j=null,G=null,O=null,q=null;for(let Z=0;Z<z.numberOfVertices;Z++){const X=F[4*(z.startVertex+Z)],J=F[4*(z.startVertex+Z)+1],H=F[4*(z.startVertex+Z)+2],K=F[4*(z.startVertex+Z)+3];let $=null,Y=null,Q=null,tt=null;if(Z>0){$=X-V,Y=J-N;const F=Math.sqrt($*$+Y*Y);if($/=F,Y/=F,Z>1){let t=$+O,n=Y+q;const F=Math.sqrt(t*t+n*n);t/=F,n/=F;const V=Math.min(1/(t*$+n*Y),e);t*=V,n*=V,Q=-n,tt=t}else Q=-Y,tt=$;null!==Q&&null!==tt&&(h(V,N,j,Q,tt,t,n,K),u())}V=X,N=J,j=H,O=$,q=Y,G=K}h(V,N,j,-q,O,t,n,G)}return{vertexData:G,indexData:O}}(J,Z):function w(t){const e=16,n=1,F=2,{lineVertices:V,lineDescriptors:N}=t;let j=0,G=0;for(const rt of N){const t=rt.numberOfVertices-1;j+=4*t*2,G+=6*t*2}const O=new Float32Array(j*e),q=new Uint32Array(G);let Z,z,X,J,H,K,$,Y,Q,tt,et,nt,it,lt,ot=0,st=0;function D(){q[st++]=ot-8,q[st++]=ot-7,q[st++]=ot-6,q[st++]=ot-7,q[st++]=ot-5,q[st++]=ot-6,q[st++]=ot-4,q[st++]=ot-3,q[st++]=ot-2,q[st++]=ot-3,q[st++]=ot-1,q[st++]=ot-2}function b(t,V,N,j,G,q,Z,z,X,J,H,K,$,Y){const Q=ot*e;let tt=0;for(const e of[n,F])for(const n of[1,2,3,4])O[Q+tt++]=t,O[Q+tt++]=V,O[Q+tt++]=N,O[Q+tt++]=j,O[Q+tt++]=Z,O[Q+tt++]=z,O[Q+tt++]=X,O[Q+tt++]=J,O[Q+tt++]=e,O[Q+tt++]=n,O[Q+tt++]=$,O[Q+tt++]=Y,O[Q+tt++]=G/2,O[Q+tt++]=q/2,O[Q+tt++]=H/2,O[Q+tt++]=K/2,ot++}function S(t,e){let n=Q+et,F=tt+nt;const V=Math.sqrt(n*n+F*F);n/=V,F/=V;const N=Q*n+tt*F;n/=N,F/=N;let j=et+it,G=nt+lt;const O=Math.sqrt(j*j+G*G);j/=O,G/=O;const q=et*j+nt*G;j/=q,G/=q,b(Z,z,X,J,-F,n,H,K,$,Y,-G,j,t,e),D()}function k(t,e,n,F,V,N){if(Q=et,tt=nt,et=it,nt=lt,null==Q&&null==tt&&(Q=et,tt=nt),null!=H&&null!=K){it=t-H,lt=e-K;const n=Math.sqrt(it*it+lt*lt);it/=n,lt/=n}null!=Q&&null!=tt&&S(V,N),Z=H,z=K,X=$,J=Y,H=t,K=e,$=n,Y=F}function L(t,e){Q=et,tt=nt,et=it,nt=lt,null==Q&&null==tt&&(Q=et,tt=nt),null!=Q&&null!=tt&&S(t,e)}for(const rt of N){Z=null,z=null,X=null,J=null,H=null,K=null,$=null,Y=null,Q=null,tt=null,et=null,nt=null,it=null,lt=null;const{totalTime:t,timeSeed:e}=rt;for(let n=0;n<rt.numberOfVertices;n++)k(V[4*(rt.startVertex+n)],V[4*(rt.startVertex+n)+1],V[4*(rt.startVertex+n)+2],V[4*(rt.startVertex+n)+3],t,e);L(t,e)}return{vertexData:O,indexData:q}}(J),$=performance.now();return(0,F.A)("esri-2d-profiler")&&(i().info("I.1","_createFlowFieldFromData (ms)",Math.round(q-N)),i().info("I.2","_getStreamlines (ms)",Math.round(X-q)),i().info("I.3","createAnimatedLinesData (ms)",Math.round(H-X)),i().info("I.4","create{Streamlines|Particles}Mesh (ms)",Math.round($-H)),i().info("I.5","createFlowMesh (ms)",Math.round($-N)),i().info("I.6","Mesh size (bytes)",K.vertexData.buffer.byteLength+K.indexData.buffer.byteLength)),await Promise.resolve(),(0,j.Te)(V),K}function c(t,e){const n=function h(t,e,n,F){if(0===F)return t;const V=Math.round(3*F),N=new Array(2*V+1);let j=0;for(let q=-V;q<=V;q++){const t=Math.exp(-q*q/(F*F));N[q+V]=t,j+=t}for(let q=-V;q<=V;q++)N[q+V]/=j;const G=new Float32Array(t.length);for(let q=0;q<n;q++)for(let n=0;n<e;n++){let F=0,j=0;for(let G=-V;G<=V;G++){if(n+G<0||n+G>=e)continue;const O=N[G+V];F+=O*t[2*(q*e+(n+G))],j+=O*t[2*(q*e+(n+G))+1]}G[2*(q*e+n)]=F,G[2*(q*e+n)+1]=j}const O=new Float32Array(t.length);for(let q=0;q<e;q++)for(let t=0;t<n;t++){let F=0,j=0;for(let O=-V;O<=V;O++){if(t+O<0||t+O>=n)continue;const Z=N[O+V];F+=Z*G[2*((t+O)*e+q)],j+=Z*G[2*((t+O)*e+q)+1]}O[2*(t*e+q)]=F,O[2*(t*e+q)+1]=j}return O}(e.data,e.width,e.height,t.smoothing);return t.interpolate?(t,F)=>{const V=Math.floor(t),N=Math.floor(F);if(V<0||V>=e.width)return[0,0];if(N<0||N>=e.height)return[0,0];const j=t-V,G=F-N,O=V,q=N,Z=V<e.width-1?V+1:V,z=N<e.height-1?N+1:N,X=n[2*(q*e.width+O)],J=n[2*(q*e.width+Z)],H=n[2*(z*e.width+O)],K=n[2*(z*e.width+Z)],$=n[2*(q*e.width+O)+1],Y=n[2*(q*e.width+Z)+1];return[(X*(1-G)+H*G)*(1-j)+(J*(1-G)+K*G)*j,($*(1-G)+n[2*(z*e.width+O)+1]*G)*(1-j)+(Y*(1-G)+n[2*(z*e.width+Z)+1]*G)*j]}:(t,F)=>{const V=Math.round(t),N=Math.round(F);return V<0||V>=e.width||N<0||N>=e.height?[0,0]:[n[2*(N*e.width+V)],n[2*(N*e.width+V)+1]]}}function f(t,e,n,F,V,N,j,G,O){const q=[];let Z=n,z=F,X=0,[J,H]=e(Z,z);J*=t.velocityScale,H*=t.velocityScale;const K=Math.sqrt(J*J+H*H);let $,Y;q.push({x:Z,y:z,t:X,speed:K});for(let Q=0;Q<t.verticesPerLine;Q++){let[n,F]=e(Z,z);n*=t.velocityScale,F*=t.velocityScale;const J=Math.sqrt(n*n+F*F);if(J<t.minSpeedThreshold)return q;const H=n/J,K=F/J;if(Z+=H*t.segmentLength,z+=K*t.segmentLength,X+=t.segmentLength/J,Math.acos(H*$+K*Y)>t.maxTurnAngle)return q;if(t.collisions){const t=Math.round(Z*O),e=Math.round(z*O);if(t<0||t>j-1||e<0||e>G-1)return q;const n=N[e*j+t];if(-1!==n&&n!==V)return q;N[e*j+t]=V}q.push({x:Z,y:z,t:X,speed:J}),$=H,Y=K}return q}function u(t,e,n,F){const V=[],N=new G.A,j=1/Math.max(t.lineCollisionWidth,1),O=Math.round(n*j),q=Math.round(F*j),Z=new Int32Array(O*q);for(let G=0;G<Z.length;G++)Z[G]=-1;const z=[];for(let G=0;G<F;G+=t.lineSpacing)for(let e=0;e<n;e+=t.lineSpacing)z.push({x:e,y:G,sort:N.getFloat()});z.sort(((t,e)=>t.sort-e.sort));for(const{x:G,y:X}of z)if(N.getFloat()<t.density){const n=f(t,e,G,X,V.length,Z,O,q,j);if(n.length<2)continue;V.push(n)}return V}function p(t,e){const n=e.pixels,{width:F,height:V}=e,j=new Float32Array(F*V*2),G=e.mask||new Uint8Array(F*V*2);if(e.mask||G.fill(255),"vector-uv"===t)for(let N=0;N<F*V;N++)j[2*N]=n[0][N],j[2*N+1]=-n[1][N];else if("vector-magdir"===t)for(let O=0;O<F*V;O++){const t=n[0][O],e=(0,N.kU)(n[1][O]),F=Math.cos(e-Math.PI/2),V=Math.sin(e-Math.PI/2);j[2*O]=F*t,j[2*O+1]=V*t}return{data:j,mask:G,width:F,height:V}}async function g(t,e,n,V,N,j){const G=performance.now(),Z=(0,O.Vp)(e.spatialReference);if(!Z){const O=await y(t,e,n,V,N,j);return(0,F.A)("esri-2d-profiler")&&i().info("I.7","loadImagery, early exit (ms)",Math.round(performance.now()-G)),(0,F.A)("esri-2d-profiler")&&i().info("I.9","Number of parts",1),O}const[z,X]=Z.valid,J=X-z,H=Math.ceil(e.width/J),K=e.width/H,$=Math.round(n/H);let Y=e.xmin;const Q=[],tt=performance.now();for(let F=0;F<H;F++){const n=new q.A({xmin:Y,xmax:Y+K,ymin:e.ymin,ymax:e.ymax,spatialReference:e.spatialReference});Q.push(y(t,n,$,V,N,j)),Y+=K}const et=await Promise.all(Q);(0,F.A)("esri-2d-profiler")&&i().info("I.8","All calls to _fetchPart (ms)",Math.round(performance.now()-tt)),(0,F.A)("esri-2d-profiler")&&i().info("I.9","Number of parts",et.length);const nt={data:new Float32Array(n*V*2),mask:new Uint8Array(n*V),width:n,height:V};let it=0;for(const F of et){for(let t=0;t<F.height;t++)for(let e=0;e<F.width;e++)it+e>=n||(nt.data[2*(t*n+it+e)]=F.data[2*(t*F.width+e)],nt.data[2*(t*n+it+e)+1]=F.data[2*(t*F.width+e)+1],nt.mask[t*n+it+e]=F.mask[t*F.width+e]);it+=F.width}return(0,F.A)("esri-2d-profiler")&&i().info("I.10","loadImagery, general exit (ms)",Math.round(performance.now()-G)),nt}async function y(t,e,n,F,V,N){const j={requestProjectedLocalDirections:!0,signal:N};if(null!=V&&(j.timeExtent=V),"imagery"===t.type){var G;await t.load({signal:N});const V=t.rasterInfo.dataType,O=await t.fetchImage(e,n,F,j);return null==(null===O||void 0===O||null===(G=O.pixelData)||void 0===G?void 0:G.pixelBlock)?{data:new Float32Array(n*F*2),mask:new Uint8Array(n*F),width:n,height:F}:p(V,O.pixelData.pixelBlock)}await t.load({signal:N});const O=t.serviceRasterInfo.dataType,q=await t.fetchPixels(e,n,F,j);return null==(null===q||void 0===q?void 0:q.pixelBlock)?{data:new Float32Array(n*F*2),mask:new Uint8Array(n*F),width:n,height:F}:p(O,q.pixelBlock)}}}]);
//# sourceMappingURL=398.811714d3.chunk.js.map