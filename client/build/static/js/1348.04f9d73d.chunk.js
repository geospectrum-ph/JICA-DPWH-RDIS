"use strict";(self.webpackChunkSEEDs_v2_0_Client=self.webpackChunkSEEDs_v2_0_Client||[]).push([[1348],{1372:(e,s,f)=>{f.d(s,{$1:()=>u,H2:()=>c,MT:()=>l,VP:()=>i,WF:()=>p,Wt:()=>r,XQ:()=>m,hK:()=>d,nS:()=>a,uh:()=>t,xY:()=>n});var h=f(4180);const g="upload-assets",o=()=>new Error;class r extends h.A{constructor(){super("".concat(g,":unsupported"),"Layer does not support asset uploads.",o())}}class t extends h.A{constructor(){super("".concat(g,":no-glb-support"),"Layer does not support glb.",o())}}class n extends h.A{constructor(){super("".concat(g,":no-supported-source"),"No supported external source found",o())}}class u extends h.A{constructor(){super("".concat(g,":not-base-64"),"Expected gltf data in base64 format after conversion.",o())}}class p extends h.A{constructor(){super("".concat(g,":unable-to-prepare-options"),"Unable to prepare uploadAsset request options.",o())}}class a extends h.A{constructor(e,s){super("".concat(g,":bad-response"),"Bad response. Uploaded ".concat(e," items and received ").concat(s," results."),o())}}class d extends h.A{constructor(e,s){var f,h;super("".concat(g,"-layer:upload-failed"),"Failed to upload mesh file ".concat(e,". Error code: ").concat(null!==(f=null===s||void 0===s?void 0:s.code)&&void 0!==f?f:"-1",". Error message: ").concat(null!==(h=null===s||void 0===s?void 0:s.messages)&&void 0!==h?h:"unknown"),o())}}class c extends h.A{constructor(e){super("".concat(g,"-layer:unsupported-format"),"The service allowed us to upload an asset of FormatID ".concat(e,", but it does not list it in its supported formats."),o())}}class l extends h.A{constructor(){super("".concat(g,":convert3D-failed"),"convert3D failed.")}}class i extends h.A{constructor(){super("invalid-input:no-model","No supported model found")}}class m extends h.A{constructor(){super("invalid-input:multiple-models","Multiple supported models found")}}},51348:(e,s,f)=>{f.d(s,{uploadAssets:()=>O});var h=f(53705),g=f(50886),w=f(89412),y=f(81618),T=f(73905),A=f(4270),P=f(51523),b=f(81581),j=f(1372);const x={upload:{createFromFiles:.8,loadMesh:.2},uploadAssetBlobs:{prepareAssetItems:.9,uploadAssetItems:.1},uploadConvertibleSource:{uploadEditSource:.5,serviceAssetsToGlb:.5},uploadLocalMesh:{meshToAssetBlob:.5,uploadAssetBlobs:.5}};var E=f(26128),F=f(58285),U=f(69719);function progressUtils_i(e){return new n(e,arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},arguments.length>2?arguments[2]:void 0)}class n{constructor(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e=>{},f=arguments.length>2?arguments[2]:void 0;if(this.onProgress=s,this.taskName=f,this._progressMap=new Map,this._startTime=void 0,this._timingsMap=new Map,"number"==typeof e){this._weights={};for(let s=0;s<e;s++){const f=s,h=1/e;this._weights[f]=h,this._progressMap.set(f,0)}}else this._weights=e;this.emitProgress()}emitProgress(){let e=0;for(const[h,g]of this._progressMap.entries())e+=g*this._weights[h];if(1===e&&(0,g.A)("enable-feature:esri-3dofl-upload-timings")){var s;const e=Math.round(performance.now()-(null!==(s=this._startTime)&&void 0!==s?s:0))/1e3;console.log("".concat(this.taskName," done in ").concat(e," sec"));for(const[s,h]of this._timingsMap){var f;const g=Math.round(h.end-h.start)/1e3,w=Math.round(g/e*100);console.log(null!==(f=this.taskName)&&void 0!==f?f:"Task",{stepKey:s,stepTime:g,relativeTime:w})}}this.onProgress(e)}setProgress(e,s){if(this._progressMap.set(e,s),(0,g.A)("enable-feature:esri-3dofl-upload-timings")){var f;const h=performance.now();null!==(f=this._startTime)&&void 0!==f||(this._startTime=h);const g=(0,U.tE)(this._timingsMap,e,(()=>({start:h,end:0})));1===s&&(g.end=h)}this.emitProgress()}simulate(e,s){return a((s=>this.setProgress(e,s)),s)}makeOnProgress(e){return s=>this.setProgress(e,s)}}function a(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:e=>{},s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:se;const f=performance.now();e(0);const h=setInterval((()=>{const h=performance.now()-f,g=1-Math.exp(-h/s);e(g)}),ee);return(0,F.hA)((()=>{clearInterval(h),e(1)}))}function progressUtils_h(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:S;return(0,T.gr)((0,T.Kp)(e*D/s))}const S=10,N=10,D=8e-6,ee=(0,T.l5)(50),se=(0,T.l5)(1e3),te=1e6,oe=20*te,re=2e9,ne=3;async function uploads_m(e,s,f){let{data:g,name:w,description:T}=e,P=null;try{const e=(0,A.fj)(s,"uploads"),j=(0,A.fj)(e,"info"),{data:x}=await(0,h.A)(j,{query:{f:"json"},responseType:"json"});(0,y.Te)(f);const F=(0,E.Wo)(s),U=x.maxUploadFileSize*te,S=F?re:U,N=F?Math.min(oe,U):oe;if(g.size>S)throw new Error("Data too large");const D=(0,A.fj)(e,"register"),{data:ee}=await(0,h.A)(D,{query:{f:"json",itemName:(b=w,b.replaceAll("/","_").replaceAll("\\","_")),description:T},responseType:"json",method:"post"});if((0,y.Te)(f),!ee.success)throw new Error("Registration failed");const{itemID:se}=ee.item;P=(0,A.fj)(e,se);const ae=(0,A.fj)(P,"uploadPart"),ie=Math.ceil(g.size/N),le=new Array;for(let s=0;s<ie;++s)le.push(g.slice(s*N,Math.min((s+1)*N,g.size)));const ce=le.slice().reverse(),ue=new Array,pe=progressUtils_i(ie,null===f||void 0===f?void 0:f.onProgress,"uploadItem"),_=async()=>{for(;0!==ce.length;){const e=le.length-ce.length,s=ce.pop(),g=new FormData,w=pe.simulate(e,progressUtils_h(s.size));try{g.append("f","json"),g.append("file",s),g.append("partId","".concat(e));const{data:w}=await(0,h.A)(ae,{timeout:0,body:g,responseType:"json",method:"post"});if((0,y.Te)(f),!w.success)throw new Error("Part upload failed")}finally{w.remove()}}};for(let s=0;s<ne&&0!==ce.length;++s)ue.push(_());await Promise.all(ue);const de=(0,A.fj)(P,"commit"),{data:me}=await(0,h.A)(de,{query:{f:"json",parts:le.map(((e,s)=>s)).join(",")},responseType:"json",method:"post"});if((0,y.Te)(f),!me.success)throw new Error("Commit failed");return me.item}catch(j){if(null!=P){const e=(0,A.fj)(P,"delete");await(0,h.A)(e,{query:{f:"json"},responseType:"json",method:"post"})}throw j}var b}var ae=f(35999);async function O(e,s,f){var h;const g=e.length;if(!g)return null!==f&&void 0!==f&&null!==(h=f.onProgress)&&void 0!==h&&h.call(f,1),[];const w=progressUtils_i(g,null===f||void 0===f?void 0:f.onProgress,"uploadAssets");return Promise.all(e.map(((e,h)=>async function v(e,s,f){var h;let{layer:g,ongoingUploads:w}=s;const A=w.get(e);if(A)return A;if(!function Z(e){return!!e.infoFor3D&&!!e.url}(g))throw new j.Wt;if(function I(e,s){const{parsedUrl:f}=s;return null!=f&&e.metadata.externalSources.some((e=>(0,b.eN)(e,f)))}(e,g))return null!==f&&void 0!==f&&null!==(h=f.onProgress)&&void 0!==h&&h.call(f,1),e;const E=async function k(e,s,f){const{metadata:h}=e,{displaySource:g}=h,w=H(null===g||void 0===g?void 0:g.source,s),A=!!w,b=h.externalSources.length>0,E=A?async function B(e,s,f){return{source:await G(e,s,f),original:!0}}(w,s,f):b?async function R(e,s,f){const h=_(s),{externalSources:g}=e.metadata,w=function q(e,s){for(const f of e){const e=H(f.source,s);if(e)return e}return null}(g,s);if(!w)throw new j.xY;const y=progressUtils_i(x.uploadConvertibleSource,null===f||void 0===f?void 0:f.onProgress,"uploadConvertibleSource"),A=await G(w,s,{onProgress:y.makeOnProgress("uploadEditSource")});e.addExternalSources([{source:A,original:!0}]);const P=w.reduce(((e,s)=>{let{asset:f}=s;return f instanceof File?e+f.size:e}),0),b=y.simulate("serviceAssetsToGlb",function m(e){let s=arguments.length>1&&void 0!==arguments[1]?arguments[1]:N;return(0,T.gr)((0,T.Kp)(e*D/s))}(P));try{return{source:await V(A,s,h)}}finally{b.remove()}}(e,s,f):async function C(e,s,f){const h=progressUtils_i(x.uploadLocalMesh,null===f||void 0===f?void 0:f.onProgress,"uploadLocalMesh"),g=async function L(e,s,f){const h=_(s),g=await e.load(f),w=await g.toBinaryGLTF({ignoreLocalTransform:!0});(0,y.Te)(f);const T=await w.buffer();return(0,y.Te)(f),{blob:new Blob([T.data],{type:T.type}),assetName:"".concat((0,P.yS)(),".glb"),assetType:h}}(e,s,{...f,onProgress:h.makeOnProgress("meshToAssetBlob")});return{source:await J([g],s,{...f,onProgress:h.makeOnProgress("uploadAssetBlobs")}),extent:e.extent.clone(),original:!0}}(e,s,f),F=await E;return(0,y.Te)(f),e.addExternalSources([F]),e}(e,g,f);w.set(e,E);try{await E}finally{w.delete(e)}return e}(e,s,{...f,onProgress:w.makeOnProgress(h)}))))}function H(e,s){if(!e)return null;const{infoFor3D:{supportedFormats:f,editFormats:h}}=s,g=(0,b.WN)(e),w=new Array;let y=!1;for(let T=0;T<g.length;++T){const e=$(g[T],f);if(!e)return null;h.includes(e.assetType)&&(y=!0),w.push(e)}return y?w:null}function $(e,s){const f=(0,b.fH)(e,s);return f?{asset:e,assetType:f}:null}async function G(e,s,f){return J(e.map((e=>async function M(e,s){const{asset:f,assetType:h}=e;if(f instanceof File)return{blob:f,assetName:f.name,assetType:h};const g=await f.toBlob(s);return(0,y.Te)(s),{blob:g,assetName:f.assetName,assetType:h}}(e,f))),s,f)}async function J(e,s,f){const h=progressUtils_i(x.uploadAssetBlobs,null===f||void 0===f?void 0:f.onProgress,"uploadAssetBlobs"),g=await function z(e,s,f){const h=progressUtils_i(e.length,null===f||void 0===f?void 0:f.onProgress,"prepareAssetItems");return Promise.all(e.map((async(e,g)=>{const T=async function W(e,s,f){const{blob:h,assetType:g,assetName:T}=e;let P=null;try{const e=await uploads_m({data:h,name:T},s.url,f);(0,y.Te)(f),P={assetType:g,assetUploadId:e.itemID}}catch(se){(0,y.QP)(se),function ss(){return w.A.getLogger("esri.layers.graphics.sources.support.uploadAssets")}().warnOnce("Service ".concat(s.url," does not support the REST Uploads API."))}if(!P){const e=await(0,A._0)(h);if((0,y.Te)(f),!e.isBase64)throw new j.$1;P={assetType:g,assetData:e.data}}if(!P)throw new j.WF;return{item:P,assetName:T}}(await e,s,{...f,onProgress:h.makeOnProgress(g)});return(0,y.Te)(f),T})))}(e,s,{...f,onProgress:h.makeOnProgress("prepareAssetItems")});(0,y.Te)(f);const T=g.map((e=>{let{item:s}=e;return s})),{uploadResults:P}=await K(T,s,{...f,onProgress:h.makeOnProgress("uploadAssetItems")});return(0,y.Te)(f),e.map(((e,f)=>function Q(e,s,f){const{success:h}=s;if(!h){const{error:f}=s;throw new j.hK(e.assetName,f)}const{assetHash:g}=s,{assetName:w,item:{assetType:y}}=e,{infoFor3D:{supportedFormats:T}}=f,A=(0,ae.Fm)(y,T);if(!A)throw new j.H2(y);return new b.Qp(w,A,[new b.Bq("".concat(f.parsedUrl.path,"/assets/").concat(g),g)])}(g[f],P[f],s)))}async function K(e,s,f){const g=a(null===f||void 0===f?void 0:f.onProgress);try{const g=await(0,h.A)((0,A.fj)(s.parsedUrl.path,"uploadAssets"),{timeout:0,query:{f:"json",assets:JSON.stringify(e)},method:"post",responseType:"json"});if((0,y.Te)(f),g.data.uploadResults.length!==e.length)throw new j.nS(e.length,g.data.uploadResults.length);return g.data}finally{g.remove()}}async function V(e,s,f){var h;const g=e.map((e=>{let{assetName:s,parts:f}=e;return{assetName:s,assetHash:f[0].partHash}})),w=null===(h=s.capabilities)||void 0===h?void 0:h.operations.supportsAsyncConvert3D,y={f:"json",assets:JSON.stringify(g),transportType:"esriTransportTypeUrl",targetFormat:f,async:w},T=(0,A.fj)(s.parsedUrl.path,"convert3D");let P;try{P=(await(w?Y:X)(T,{query:y,responseType:"json",timeout:0})).data}catch(se){throw new j.MT}const{supportedFormats:x}=s.infoFor3D;return P.assets.map((e=>{const s=(0,ae.R_)(e.contentType,x);if(!s)throw new j.H2(s);return new b.Qp(e.assetName,e.contentType,[new b.Bq(e.assetURL,e.assetHash)])}))}function X(e,s){return(0,h.A)(e,s)}async function Y(e,s){const f=(await(0,h.A)(e,s)).data.statusUrl;for(;;){const e=(await(0,h.A)(f,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return(0,h.A)(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new Error(e.status);case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new Error}await(0,y.Pl)(ie)}}function _(e){var s;const{infoFor3D:f}=e,h=null!==(s=(0,ae.R_)("model/gltf-binary",f.supportedFormats))&&void 0!==s?s:(0,ae.E1)("glb",f.supportedFormats);if(!h)throw new j.uh;return h}const ie=(0,T.l5)(1e3)}}]);
//# sourceMappingURL=1348.04f9d73d.chunk.js.map