"use strict";(self.webpackChunkSEEDs_v2_0_Client=self.webpackChunkSEEDs_v2_0_Client||[]).push([[4502],{34502:(e,a,r)=>{r.r(a),r.d(a,{default:()=>k});var n,i=r(80671),l=(r(30174),r(53705)),s=r(4180),u=r(40530),d=r(13132),p=r(57453),c=(r(50886),r(89412),r(76761),r(68682)),g=r(98664),y=r(84661),h=r(88965),b=r(78658),v=r(53200),w=r(68777),M=r(38362),m=r(3420),A=r(22179);const f=new(r(19156).U)("0/0/0",0,0,0,void 0);let _=n=class extends((0,v.d)((0,M.j)((0,w.J)(b.A)))){constructor(){super(...arguments),this.tileInfo=A.A.create({spatialReference:g.A.WebMercator,size:256}),this.type="base-tile",this.fullExtent=new y.A(-20037508.342787,-20037508.34278,20037508.34278,20037508.342787,g.A.WebMercator),this.spatialReference=g.A.WebMercator}getTileBounds(e,a,r,n){const i=n||(0,h.vt)();return f.level=e,f.row=a,f.col=r,f.extent=i,this.tileInfo.updateTileInfo(f),f.extent=void 0,i}fetchTile(e,a,r){let n=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{signal:i}=n,s=this.getTileUrl(e,a,r),u={responseType:"image",signal:i,query:{...this.refreshParameters}};return(0,l.A)(null!==s&&void 0!==s?s:"",u).then((e=>e.data))}async fetchImageBitmapTile(e,a,r){var i;let s=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};const{signal:u}=s;if(this.fetchTile!==n.prototype.fetchTile){const n=await this.fetchTile(e,a,r,s);return(0,m.C)(n,e,a,r,u)}const d=null!==(i=this.getTileUrl(e,a,r))&&void 0!==i?i:"",p={responseType:"blob",signal:u,query:{...this.refreshParameters}},{data:c}=await(0,l.A)(d,p);return(0,m.C)(c,e,a,r,u)}getTileUrl(){throw new s.A("basetilelayer:gettileurl-not-implemented","getTileUrl() is not implemented")}};(0,i._)([(0,p.MZ)({type:A.A})],_.prototype,"tileInfo",void 0),(0,i._)([(0,p.MZ)({type:["show","hide"]})],_.prototype,"listMode",void 0),(0,i._)([(0,p.MZ)({readOnly:!0,value:"base-tile"})],_.prototype,"type",void 0),(0,i._)([(0,p.MZ)({nonNullable:!0})],_.prototype,"fullExtent",void 0),(0,i._)([(0,p.MZ)()],_.prototype,"spatialReference",void 0),_=n=(0,i._)([(0,c.$)("esri.layers.BaseTileLayer")],_);const T=_;var S=r(1921),U=r(86168),Z=r(57264);const B=new u.J({BingMapsAerial:"aerial",BingMapsRoad:"road",BingMapsHybrid:"hybrid"});let j=class extends((0,v.d)((0,S.q)((0,d.P)(T)))){constructor(e){super(e),this.type="bing-maps",this.tileInfo=new A.A({size:[256,256],dpi:96,origin:new Z.A({x:-20037508.342787,y:20037508.342787,spatialReference:g.A.WebMercator}),spatialReference:g.A.WebMercator,lods:[new U.A({level:1,resolution:78271.5169639999,scale:295828763.795777}),new U.A({level:2,resolution:39135.7584820001,scale:147914381.897889}),new U.A({level:3,resolution:19567.8792409999,scale:73957190.948944}),new U.A({level:4,resolution:9783.93962049996,scale:36978595.474472}),new U.A({level:5,resolution:4891.96981024998,scale:18489297.737236}),new U.A({level:6,resolution:2445.98490512499,scale:9244648.868618}),new U.A({level:7,resolution:1222.99245256249,scale:4622324.434309}),new U.A({level:8,resolution:611.49622628138,scale:2311162.217155}),new U.A({level:9,resolution:305.748113140558,scale:1155581.108577}),new U.A({level:10,resolution:152.874056570411,scale:577790.554289}),new U.A({level:11,resolution:76.4370282850732,scale:288895.277144}),new U.A({level:12,resolution:38.2185141425366,scale:144447.638572}),new U.A({level:13,resolution:19.1092570712683,scale:72223.819286}),new U.A({level:14,resolution:9.55462853563415,scale:36111.909643}),new U.A({level:15,resolution:4.77731426794937,scale:18055.954822}),new U.A({level:16,resolution:2.38865713397468,scale:9027.977411}),new U.A({level:17,resolution:1.19432856685505,scale:4513.988705}),new U.A({level:18,resolution:.597164283559817,scale:2256.994353}),new U.A({level:19,resolution:.298582141647617,scale:1128.497176}),new U.A({level:20,resolution:.1492910708238085,scale:564.248588})]}),this.key=null,this.style="road",this.culture="en-US",this.region=null,this.portalUrl=null,this.hasAttributionData=!0}get bingMetadata(){return this._get("bingMetadata")}set bingMetadata(e){this._set("bingMetadata",e)}get copyright(){return null!=this.bingMetadata?this.bingMetadata.copyright:null}get operationalLayerType(){return B.toJSON(this.style)}get bingLogo(){return null!=this.bingMetadata?this.bingMetadata.brandLogoUri:null}load(e){return this.key?this.addResolvingPromise(this._getMetadata()):this.portalUrl?this.addResolvingPromise(this._getPortalBingKey().then((()=>this._getMetadata()))):this.addResolvingPromise(Promise.reject(new s.A("bingmapslayer:load","Bing layer must have bing key."))),Promise.resolve(this)}getTileUrl(e,a,r){if(!this.loaded||null==this.bingMetadata)return null;const n=this.bingMetadata.resourceSets[0].resources[0],i=n.imageUrlSubdomains[a%n.imageUrlSubdomains.length],l=this._getQuadKey(e,a,r);return n.imageUrl.replace("{subdomain}",i).replace("{quadkey}",l)}async fetchAttributionData(){return this.load().then((()=>null==this.bingMetadata?null:{contributors:this.bingMetadata.resourceSets[0].resources[0].imageryProviders.map((e=>({attribution:e.attribution,coverageAreas:e.coverageAreas.map((e=>({zoomMin:e.zoomMin,zoomMax:e.zoomMax,score:1,bbox:[e.bbox[0],e.bbox[1],e.bbox[2],e.bbox[3]]})))})))}))}_getMetadata(){const e={road:"roadOnDemand",aerial:"aerial",hybrid:"aerialWithLabelsOnDemand"}[this.style];return(0,l.A)("".concat("https://dev.virtualearth.net","/REST/v1/Imagery/Metadata/").concat(e),{responseType:"json",query:{include:"ImageryProviders",uriScheme:"https",key:this.key,suppressStatus:!0,output:"json",culture:this.culture,userRegion:this.region}}).then((e=>{const a=e.data;if(200!==a.statusCode)throw new s.A("bingmapslayer:getmetadata",a.statusDescription);if(this.bingMetadata=a,0===this.bingMetadata.resourceSets.length)throw new s.A("bingmapslayer:getmetadata","no bing resourcesets");if(0===this.bingMetadata.resourceSets[0].resources.length)throw new s.A("bingmapslayer:getmetadata","no bing resources")})).catch((e=>{throw new s.A("bingmapslayer:getmetadata",e.message)}))}_getPortalBingKey(){var e;return(0,l.A)(null!==(e=this.portalUrl)&&void 0!==e?e:"",{responseType:"json",authMode:"no-prompt",query:{f:"json"}}).then((e=>{if(!e.data.bingKey)throw new s.A("bingmapslayer:getportalbingkey","The referenced Portal does not contain a valid bing key");this.key=e.data.bingKey})).catch((e=>{throw new s.A("bingmapslayer:getportalbingkey",e.message)}))}_getQuadKey(e,a,r){let n="";for(let i=e;i>0;i--){let e=0;const l=1<<i-1;0!=(r&l)&&(e+=1),0!=(a&l)&&(e+=2),n+=e.toString()}return n}};(0,i._)([(0,p.MZ)({json:{read:!1,write:!1},value:null})],j.prototype,"bingMetadata",null),(0,i._)([(0,p.MZ)({json:{read:!1,write:!1},value:"bing-maps",readOnly:!0})],j.prototype,"type",void 0),(0,i._)([(0,p.MZ)({type:A.A})],j.prototype,"tileInfo",void 0),(0,i._)([(0,p.MZ)({type:String,readOnly:!0,json:{read:!1,write:!1}})],j.prototype,"copyright",null),(0,i._)([(0,p.MZ)({type:String,json:{write:!1,read:!1}})],j.prototype,"key",void 0),(0,i._)([(0,p.MZ)({type:B.apiValues,nonNullable:!0,json:{read:{source:"layerType",reader:B.read}}})],j.prototype,"style",void 0),(0,i._)([(0,p.MZ)({type:["BingMapsAerial","BingMapsHybrid","BingMapsRoad"]})],j.prototype,"operationalLayerType",null),(0,i._)([(0,p.MZ)({type:String,json:{write:!1,read:!1}})],j.prototype,"culture",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:!1,read:!1}})],j.prototype,"region",void 0),(0,i._)([(0,p.MZ)({type:String,json:{write:!0,read:!0}})],j.prototype,"portalUrl",void 0),(0,i._)([(0,p.MZ)({type:Boolean,json:{write:!1,read:!1}})],j.prototype,"hasAttributionData",void 0),(0,i._)([(0,p.MZ)({type:String,readOnly:!0})],j.prototype,"bingLogo",null),j=(0,i._)([(0,c.$)("esri.layers.BingMapsLayer")],j);const k=j},3420:(e,a,r)=>{r.d(a,{C:()=>o,m:()=>t});var n=r(4180),i=r(81618);async function t(e,a,r){let l;try{l=await createImageBitmap(e)}catch(s){throw new n.A("request:server","Unable to load ".concat(a),{url:a,error:s})}return(0,i.Te)(r),l}async function o(e,a,r,l,s){let u;try{u=await createImageBitmap(e)}catch(d){throw new n.A("request:server","Unable to load tile ".concat(a,"/").concat(r,"/").concat(l),{error:d,level:a,row:r,col:l})}return(0,i.Te)(s),u}}}]);
//# sourceMappingURL=4502.c24b6753.chunk.js.map