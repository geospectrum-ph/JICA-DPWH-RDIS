{"version":3,"file":"static/js/4946.61c2eab7.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/input-message/interfaces.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.scss?tag=calcite-input-message&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/functional/Validation.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input/common/input.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input/input.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input/input.scss?tag=calcite-input&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/progress/progress.scss?tag=calcite-progress&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/progress/progress.tsx"],"sourcesContent":["export enum StatusIconDefaults {\n  valid = \"check-circle\",\n  invalid = \"exclamation-mark-triangle\",\n  idle = \"information\",\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-input-message-spacing-value: The top margin spacing above the component.\n */\n\n:host {\n  @apply text-color-1 transition-default box-border flex h-auto w-full items-center font-medium opacity-100;\n  --calcite-input-message-spacing-value: theme(\"spacing.1\");\n  margin-block-start: var(--calcite-input-message-spacing-value);\n}\n\n.calcite-input-message-icon {\n  @apply transition-default pointer-events-none inline-flex flex-shrink-0;\n  margin-inline-end: theme(\"margin.2\");\n}\n\n:host([status=\"invalid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-danger);\n}\n\n:host([status=\"warning\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-warning);\n}\n\n:host([status=\"valid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-success);\n}\n\n:host([status=\"idle\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-brand);\n}\n\n:host([scale=\"s\"]) {\n  @apply text-n3h;\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n2h;\n}\n\n:host([scale=\"l\"]) {\n  @apply text-n1h;\n}\n\n@include base-component();\n","import { Component, Element, h, Host, Prop, VNode, Watch } from \"@stencil/core\";\nimport { setRequestedIcon } from \"../../utils/dom\";\nimport { Scale, Status } from \"../interfaces\";\nimport { StatusIconDefaults } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding text.\n */\n@Component({\n  tag: \"calcite-input-message\",\n  styleUrl: \"input-message.scss\",\n  shadow: true,\n})\nexport class InputMessage {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: boolean | string;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  @Watch(\"status\")\n  @Watch(\"icon\")\n  handleIconEl(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  render(): VNode {\n    const hidden = this.el.hidden;\n    return (\n      <Host calcite-hydrated-hidden={hidden}>\n        {this.renderIcon(this.requestedIcon)}\n        <slot />\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputMessageElement;\n\n  /** the computed icon to render */\n  private requestedIcon?: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private renderIcon(iconName: string): VNode {\n    if (iconName) {\n      return (\n        <calcite-icon\n          class=\"calcite-input-message-icon\"\n          flipRtl={this.iconFlipRtl}\n          icon={iconName}\n          scale=\"s\"\n        />\n      );\n    }\n  }\n}\n","import { FunctionalComponent, h } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\nimport { Scale, Status } from \"../interfaces\";\n\ninterface ValidationProps extends JSXBase.HTMLAttributes {\n  scale: Scale;\n  status: Status;\n  icon?: string | boolean;\n  message: string;\n}\n\nexport const CSS = {\n  validationContainer: \"validation-container\",\n};\n\nexport const Validation: FunctionalComponent<ValidationProps> = ({\n  scale,\n  status,\n  icon,\n  message,\n}) => (\n  <div class={CSS.validationContainer}>\n    <calcite-input-message icon={icon} scale={scale} status={status}>\n      {message}\n    </calcite-input-message>\n  </div>\n);\n","export type InputComponent = NumericInputComponent | TextualInputComponent;\n\nexport interface NumericInputComponent {\n  min: number;\n  max: number;\n  step: number | \"any\";\n}\n\nexport interface TextualInputComponent {\n  pattern?: string;\n  minLength: number;\n  maxLength: number;\n}\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxStepTypes = [\"date\", \"datetime-local\", \"month\", \"number\", \"range\", \"time\", \"week\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const patternTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"url\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxLengthTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"textarea\", \"url\"];\n\nfunction updateConstraintValidation(\n  inputComponent: InputComponent,\n  input: HTMLInputElement,\n  propName: string,\n  matchesType: boolean,\n): void {\n  const attributeName = propName.toLowerCase();\n  const value = inputComponent[propName];\n\n  if (matchesType && value != null) {\n    input.setAttribute(attributeName, `${value}`);\n  } else {\n    // we remove the attribute to ensure validation-constraints are properly reset\n    input.removeAttribute(attributeName);\n  }\n}\n\n/**\n * Synchronizes the hidden form input with the validation-related input properties.\n *\n * Note: loss of precision is expected due to the hidden input's value and validation-constraint props being strings.\n *\n * @param type - The input type.\n * @param inputComponent\n * @param hiddenFormInput\n */\nexport function syncHiddenFormInput(\n  type: HTMLInputElement[\"type\"] | \"textarea\",\n  inputComponent: InputComponent,\n  hiddenFormInput: HTMLInputElement,\n): void {\n  hiddenFormInput.type = type === \"textarea\" ? \"text\" : type;\n\n  const isMinMaxStepType = minMaxStepTypes.includes(type);\n  const numericInputComponent = inputComponent as NumericInputComponent;\n\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"min\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"max\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"step\", isMinMaxStepType);\n\n  const isMinMaxLengthType = minMaxLengthTypes.includes(type);\n\n  const textualInputComponent = inputComponent as TextualInputComponent;\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"minLength\", isMinMaxLengthType);\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"maxLength\", isMinMaxLengthType);\n\n  const isPatternType = patternTypes.includes(type);\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"pattern\", isPatternType);\n}\n","export const CSS = {\n  loader: \"loader\",\n  clearButton: \"clear-button\",\n  editingEnabled: \"editing-enabled\",\n  inlineChild: \"inline-child\",\n  inputIcon: \"icon\",\n  prefix: \"prefix\",\n  suffix: \"suffix\",\n  numberButtonWrapper: \"number-button-wrapper\",\n  buttonItemHorizontal: \"number-button-item--horizontal\",\n  wrapper: \"element-wrapper\",\n  inputWrapper: \"wrapper\",\n  actionWrapper: \"action-wrapper\",\n  resizeIconWrapper: \"resize-icon-wrapper\",\n  numberButtonItem: \"number-button-item\",\n};\n\nexport const INPUT_TYPE_ICONS = {\n  tel: \"phone\",\n  password: \"lock\",\n  email: \"email-address\",\n  date: \"calendar\",\n  time: \"clock\",\n  search: \"search\",\n};\n\nexport const SLOTS = {\n  action: \"action\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getSlotted,\n  isPrimaryPointerButton,\n  setRequestedIcon,\n} from \"../../utils/dom\";\nimport { Scale, Status, Alignment } from \"../interfaces\";\n\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  internalHiddenInputInputEvent,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\n\nimport {\n  addLocalizedTrailingDecimalZeros,\n  BigDecimal,\n  isValidNumber,\n  parseNumberString,\n  sanitizeNumberString,\n} from \"../../utils/number\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { InputMessages } from \"./assets/input/t9n\";\nimport { InputPlacement, NumberNudgeDirection, SetValueOrigin } from \"./interfaces\";\nimport { CSS, INPUT_TYPE_ICONS, SLOTS } from \"./resources\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport { NumericInputComponent, syncHiddenFormInput, TextualInputComponent } from \"./common/input\";\n\n/**\n * @slot action - A slot for positioning a `calcite-button` next to the component.\n */\n@Component({\n  tag: \"calcite-input\",\n  styleUrl: \"input.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Input\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    T9nComponent,\n    LocalizedComponent,\n    LoadableComponent,\n    NumericInputComponent,\n    TextualInputComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the text alignment of the component's value. */\n  @Prop({ reflect: true }) alignment: Extract<\"start\" | \"end\", Alignment> = \"start\";\n\n  /**\n   * When `true`, the component is focused on page load. Only one element can contain `autofocus`. If multiple elements have `autofocus`, the first element will receive focus.\n   *\n   * @mdn [autofocus](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/autofocus)\n   */\n  @Prop({ reflect: true }) autofocus = false;\n\n  /**\n   * When `true`, a clear button is displayed when the component has a value. The clear button shows by default for `\"search\"`, `\"time\"`, and `\"date\"` types, and will not display for the `\"textarea\"` type.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   *\n   * @mdn [disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledWatcher(): void {\n    this.setDisabledAction();\n  }\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /**\n   * When `true`, shows a default recommended icon. Alternatively, pass a Calcite UI Icon name to display a specific icon.\n   */\n  @Prop({ reflect: true }) icon: string | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** When `true`, a busy indicator is displayed. */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   *\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * When `true`, uses locale formatting for numbers.\n   *\n   * @internal\n   */\n  @Prop() localeFormat = false;\n\n  /**\n   * Specifies the maximum value for type \"number\".\n   *\n   * @mdn [max](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max)\n   */\n  @Prop({ reflect: true }) max: number;\n\n  /** watcher to update number-to-string for max */\n  @Watch(\"max\")\n  maxWatcher(): void {\n    this.maxString = this.max?.toString() || null;\n  }\n\n  /**\n   * Specifies the minimum value for `type=\"number\"`.\n   *\n   * @mdn [min](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min)\n   */\n  @Prop({ reflect: true }) min: number;\n\n  /** watcher to update number-to-string for min */\n  @Watch(\"min\")\n  minWatcher(): void {\n    this.minString = this.min?.toString() || null;\n  }\n\n  /**\n   * Specifies the maximum length of text for the component's value.\n   *\n   * @mdn [maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength)\n   */\n  @Prop({ reflect: true }) maxLength: number;\n\n  /**\n   * Specifies the minimum length of text for the component's value.\n   *\n   * @mdn [minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength)\n   */\n  @Prop({ reflect: true }) minLength: number;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: string | boolean;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   *\n   * @mdn [name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name)\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Specifies the placement of the buttons for `type=\"number\"`. */\n  @Prop({ reflect: true }) numberButtonType: InputPlacement = \"vertical\";\n\n  /**\n   * Specifies placeholder text for the component.\n   *\n   * @mdn [placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder)\n   */\n  @Prop() placeholder: string;\n\n  /** Adds text to the start of the component. */\n  @Prop() prefixText: string;\n\n  /**\n   * When `true`, the component's value can be read, but cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the granularity the component's `value` must adhere to.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step)\n   */\n  @Prop({ reflect: true }) step: number | \"any\";\n\n  /**\n   * Specifies the type of content to autocomplete, for use in forms.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n   */\n  @Prop() autocomplete: string;\n\n  /**\n   * Specifies a regex pattern the component's `value` must match for validation.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)\n   */\n  @Prop() pattern: string;\n\n  /**\n   * Specifies a comma separated list of unique file type specifiers for limiting accepted file types.\n   * This property only has an effect when `type` is \"file\".\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)\n   */\n  @Prop() accept: string;\n\n  /**\n   * When `true`, the component can accept more than one value.\n   * This property only has an effect when `type` is \"email\" or \"file\".\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/multiple)\n   */\n  @Prop() multiple = false;\n\n  /**\n   * Specifies the type of content to help devices display an appropriate virtual keyboard.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/inputmode)\n   */\n  @Prop() inputMode = \"text\";\n\n  /**\n   * Specifies the action label or icon for the Enter key on virtual keyboards.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/enterkeyhint)\n   */\n  @Prop() enterKeyHint: string;\n\n  /** Adds text to the end of the component. */\n  @Prop() suffixText: string;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) editingEnabled = false;\n\n  /**\n   * Specifies the component type.\n   *\n   * Note that the following `type`s add type-specific icons by default: `\"date\"`, `\"email\"`, `\"password\"`, `\"search\"`, `\"tel\"`, `\"time\"`.\n   */\n  @Prop({ reflect: true }) type:\n    | \"color\"\n    | \"date\"\n    | \"datetime-local\"\n    | \"email\"\n    | \"file\"\n    | \"image\"\n    | \"month\"\n    | \"number\"\n    | \"password\"\n    | \"search\"\n    | \"tel\"\n    | \"text\"\n    | \"textarea\"\n    | \"time\"\n    | \"url\"\n    | \"week\" = \"text\";\n\n  /** The component's value. */\n  @Prop({ mutable: true }) value = \"\";\n\n  /**\n   * When `type` is `\"file\"`, specifies the component's selected files.\n   *\n   * @mdn https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/files\n   */\n  @Prop() files: FileList | undefined;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string, previousValue: string): void {\n    if (!this.userChangedValue) {\n      if (this.type === \"number\" && (newValue === \"Infinity\" || newValue === \"-Infinity\")) {\n        this.displayedValue = newValue;\n        this.previousEmittedValue = newValue;\n        return;\n      }\n\n      this.setValue({\n        origin: \"direct\",\n        previousValue,\n        value:\n          newValue == null || newValue == \"\"\n            ? \"\"\n            : this.type === \"number\"\n              ? isValidNumber(newValue)\n                ? newValue\n                : this.previousValue || \"\"\n              : newValue,\n      });\n      this.warnAboutInvalidNumberValue(newValue);\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"icon\")\n  @Watch(\"type\")\n  updateRequestedIcon(): void {\n    this.requestedIcon = setRequestedIcon(INPUT_TYPE_ICONS, this.icon, this.type);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Input[\"value\"];\n\n  inlineEditableEl: HTMLCalciteInlineEditableElement;\n\n  /** keep track of the rendered child type */\n  private childEl?: HTMLInputElement | HTMLTextAreaElement;\n\n  /** keep track of the rendered child type */\n  private childElType?: \"input\" | \"textarea\" = \"input\";\n\n  /** number text input element for locale */\n  private childNumberEl?: HTMLInputElement;\n\n  get isClearable(): boolean {\n    return !this.isTextarea && (this.clearable || this.type === \"search\") && this.value?.length > 0;\n  }\n\n  get isTextarea(): boolean {\n    return this.childElType === \"textarea\";\n  }\n\n  private minString?: string;\n\n  private maxString?: string;\n\n  private previousEmittedValue: string;\n\n  private previousValue: string;\n\n  private previousValueOrigin: SetValueOrigin = \"initial\";\n\n  /** the computed icon to render */\n  private requestedIcon?: string;\n\n  private nudgeNumberValueIntervalId: number;\n\n  mutationObserver = createObserver(\"mutation\", () => this.setDisabledAction());\n\n  private userChangedValue = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  State\n  //\n  //--------------------------------------------------------------------------\n\n  @State() defaultMessages: InputMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() displayedValue: string;\n\n  @State() slottedActionElDisabledInternally = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n\n    this.inlineEditableEl = this.el.closest(\"calcite-inline-editable\");\n    if (this.inlineEditableEl) {\n      this.editingEnabled = this.inlineEditableEl.editingEnabled || false;\n    }\n    connectLabel(this);\n    connectForm(this);\n\n    this.setPreviousEmittedValue(this.value);\n    this.setPreviousValue(this.value);\n\n    if (this.type === \"number\") {\n      if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n        this.displayedValue = this.value;\n        this.previousEmittedValue = this.value;\n      } else {\n        this.warnAboutInvalidNumberValue(this.value);\n        this.setValue({\n          origin: \"connected\",\n          value: isValidNumber(this.value) ? this.value : \"\",\n        });\n      }\n    }\n\n    this.mutationObserver?.observe(this.el, { childList: true });\n\n    this.setDisabledAction();\n    this.el.addEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n\n    this.mutationObserver?.disconnect();\n    this.el.removeEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.childElType = this.type === \"textarea\" ? \"textarea\" : \"input\";\n    this.maxString = this.max?.toString();\n    this.minString = this.min?.toString();\n    this.requestedIcon = setRequestedIcon(INPUT_TYPE_ICONS, this.icon, this.type);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentShouldUpdate(newValue: string, oldValue: string, property: string): boolean {\n    if (this.type === \"number\" && property === \"value\" && newValue && !isValidNumber(newValue)) {\n      this.setValue({\n        origin: \"reset\",\n        value: oldValue,\n      });\n      return false;\n    }\n    return true;\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputFocus: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputBlur: EventEmitter<void>;\n\n  /**\n   * Fires each time a new `value` is typed.\n   */\n  @Event({ cancelable: true }) calciteInputInput: EventEmitter<void>;\n\n  /**\n   * Fires each time a new `value` is typed and committed.\n   */\n  @Event({ cancelable: false }) calciteInputChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    if (this.type === \"number\") {\n      this.childNumberEl?.focus();\n    } else {\n      this.childEl?.focus();\n    }\n  }\n\n  /** Selects the text of the component's `value`. */\n  @Method()\n  async selectText(): Promise<void> {\n    if (this.type === \"number\") {\n      this.childNumberEl?.select();\n    } else {\n      this.childEl?.select();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.readOnly || this.disabled) {\n      return;\n    }\n    if (this.isClearable && event.key === \"Escape\") {\n      this.clearInputValue(event);\n      event.preventDefault();\n    }\n    if (event.key === \"Enter\" && !event.defaultPrevented) {\n      if (submitForm(this)) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  incrementOrDecrementNumberValue(\n    direction: NumberNudgeDirection,\n    inputMax: number | null,\n    inputMin: number | null,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void {\n    const { value } = this;\n\n    if (value === \"Infinity\" || value === \"-Infinity\") {\n      return;\n    }\n\n    const adjustment = direction === \"up\" ? 1 : -1;\n    const inputStep = this.step === \"any\" ? 1 : Math.abs(this.step || 1);\n    const inputVal = new BigDecimal(value !== \"\" ? value : \"0\");\n    const nudgedValue = inputVal.add(`${inputStep * adjustment}`);\n\n    const nudgedValueBelowInputMin = () =>\n      typeof inputMin === \"number\" &&\n      !isNaN(inputMin) &&\n      nudgedValue.subtract(`${inputMin}`).isNegative;\n\n    const nudgedValueAboveInputMax = () =>\n      typeof inputMax === \"number\" &&\n      !isNaN(inputMax) &&\n      !nudgedValue.subtract(`${inputMax}`).isNegative;\n\n    const finalValue = nudgedValueBelowInputMin()\n      ? `${inputMin}`\n      : nudgedValueAboveInputMax()\n        ? `${inputMax}`\n        : nudgedValue.toString();\n\n    this.setValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: finalValue,\n    });\n  }\n\n  private clearInputValue = (nativeEvent: KeyboardEvent | MouseEvent): void => {\n    this.setValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: \"\",\n    });\n  };\n\n  private emitChangeIfUserModified = (): void => {\n    if (this.previousValueOrigin === \"user\" && this.value !== this.previousEmittedValue) {\n      this.calciteInputChange.emit();\n      this.setPreviousEmittedValue(this.value);\n    }\n  };\n\n  private inputBlurHandler = () => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n    this.calciteInternalInputBlur.emit();\n    this.emitChangeIfUserModified();\n  };\n\n  private clickHandler = (event: MouseEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    const slottedActionEl = getSlotted(this.el, \"action\");\n    if (event.target !== slottedActionEl) {\n      this.setFocus();\n    }\n  };\n\n  private inputFocusHandler = (): void => {\n    this.calciteInternalInputFocus.emit();\n  };\n\n  private inputChangeHandler = (): void => {\n    if (this.type === \"file\") {\n      this.files = (this.childEl as HTMLInputElement).files;\n    }\n  };\n\n  private inputInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n    this.setValue({\n      nativeEvent,\n      origin: \"user\",\n      value: (nativeEvent.target as HTMLInputElement).value,\n    });\n  };\n\n  private inputKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n    if (event.key === \"Enter\") {\n      this.emitChangeIfUserModified();\n    }\n  };\n\n  private inputNumberInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      return;\n    }\n\n    const value = (nativeEvent.target as HTMLInputElement).value;\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n    const delocalizedValue = numberStringFormatter.delocalize(value);\n    if (nativeEvent.inputType === \"insertFromPaste\") {\n      if (!isValidNumber(delocalizedValue)) {\n        nativeEvent.preventDefault();\n      }\n      this.setValue({\n        nativeEvent,\n        origin: \"user\",\n        value: parseNumberString(delocalizedValue),\n      });\n      this.childNumberEl.value = this.displayedValue;\n    } else {\n      this.setValue({\n        nativeEvent,\n        origin: \"user\",\n        value: delocalizedValue,\n      });\n    }\n  };\n\n  private inputNumberKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.type !== \"number\" || this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      event.preventDefault();\n      if (event.key === \"Backspace\" || event.key === \"Delete\") {\n        this.clearInputValue(event);\n      }\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      /* prevent default behavior of moving cursor to the beginning of the input when holding down ArrowUp */\n      event.preventDefault();\n      this.nudgeNumberValue(\"up\", event);\n      return;\n    }\n    if (event.key === \"ArrowDown\") {\n      this.nudgeNumberValue(\"down\", event);\n      return;\n    }\n    const supportedKeys = [\n      ...numberKeys,\n      \"ArrowLeft\",\n      \"ArrowRight\",\n      \"Backspace\",\n      \"Delete\",\n      \"Enter\",\n      \"Escape\",\n      \"Tab\",\n    ];\n    if (event.altKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n    const isShiftTabEvent = event.shiftKey && event.key === \"Tab\";\n    if (supportedKeys.includes(event.key) || isShiftTabEvent) {\n      if (event.key === \"Enter\") {\n        this.emitChangeIfUserModified();\n      }\n      return;\n    }\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n    if (event.key === numberStringFormatter.decimal) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.indexOf(numberStringFormatter.decimal) === -1) {\n        return;\n      }\n    }\n    if (/[eE]/.test(event.key)) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && !/[eE]/.test(this.childNumberEl.value)) {\n        return;\n      }\n    }\n\n    if (event.key === \"-\") {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.split(\"-\").length <= 2) {\n        return;\n      }\n    }\n    event.preventDefault();\n  };\n\n  private nudgeNumberValue = (\n    direction: NumberNudgeDirection,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void => {\n    if ((nativeEvent instanceof KeyboardEvent && nativeEvent.repeat) || this.type !== \"number\") {\n      return;\n    }\n\n    const inputMax = this.maxString ? parseFloat(this.maxString) : null;\n    const inputMin = this.minString ? parseFloat(this.minString) : null;\n    const valueNudgeDelayInMs = 150;\n\n    this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n\n    if (this.nudgeNumberValueIntervalId) {\n      window.clearInterval(this.nudgeNumberValueIntervalId);\n    }\n    let firstValueNudge = true;\n    this.nudgeNumberValueIntervalId = window.setInterval(() => {\n      if (firstValueNudge) {\n        firstValueNudge = false;\n        return;\n      }\n\n      this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n    }, valueNudgeDelayInMs);\n  };\n\n  private numberButtonPointerUpAndOutHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private numberButtonPointerDownHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    event.preventDefault();\n    const direction = (event.target as HTMLDivElement).dataset.adjustment as NumberNudgeDirection;\n    if (!this.disabled) {\n      this.nudgeNumberValue(direction, event);\n    }\n  };\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(this.type, this, input);\n  }\n\n  private onHiddenFormInputInput = (event: Event): void => {\n    if ((event.target as HTMLInputElement).name === this.name) {\n      this.setValue({\n        value: (event.target as HTMLInputElement).value,\n        origin: \"direct\",\n      });\n    }\n    this.setFocus();\n    event.stopPropagation();\n  };\n\n  private setChildElRef = (el: HTMLInputElement | HTMLTextAreaElement) => {\n    this.childEl = el;\n  };\n\n  private setChildNumberElRef = (el: HTMLInputElement) => {\n    this.childNumberEl = el;\n  };\n\n  private setDisabledAction(): void {\n    const slottedActionEl = getSlotted(this.el, \"action\");\n\n    if (!slottedActionEl) {\n      return;\n    }\n\n    if (this.disabled) {\n      if (slottedActionEl.getAttribute(\"disabled\") == null) {\n        this.slottedActionElDisabledInternally = true;\n      }\n      slottedActionEl.setAttribute(\"disabled\", \"\");\n    } else if (this.slottedActionElDisabledInternally) {\n      slottedActionEl.removeAttribute(\"disabled\");\n      this.slottedActionElDisabledInternally = false;\n    }\n  }\n\n  private setInputValue = (newInputValue: string): void => {\n    if (this.type === \"text\" && !this.childEl) {\n      return;\n    }\n    if (this.type === \"number\" && !this.childNumberEl) {\n      return;\n    }\n    this[`child${this.type === \"number\" ? \"Number\" : \"\"}El`].value = newInputValue;\n  };\n\n  private setPreviousEmittedValue = (value: string): void => {\n    this.previousEmittedValue = this.normalizeValue(value);\n  };\n\n  private normalizeValue(value: string): string {\n    return this.type === \"number\" ? (isValidNumber(value) ? value : \"\") : value;\n  }\n\n  private setPreviousValue = (value: string): void => {\n    this.previousValue = this.normalizeValue(value);\n  };\n\n  private setValue = ({\n    committing = false,\n    nativeEvent,\n    origin,\n    previousValue,\n    value,\n  }: {\n    committing?: boolean;\n    nativeEvent?: MouseEvent | KeyboardEvent | InputEvent;\n    origin: SetValueOrigin;\n    previousValue?: string;\n    value: string;\n  }): void => {\n    this.setPreviousValue(previousValue ?? this.value);\n    this.previousValueOrigin = origin;\n\n    if (this.type === \"number\") {\n      numberStringFormatter.numberFormatOptions = {\n        locale: this.effectiveLocale,\n        numberingSystem: this.numberingSystem,\n        useGrouping: this.groupSeparator,\n        signDisplay: \"never\",\n      };\n\n      const isValueDeleted =\n        this.previousValue?.length > value.length || this.value?.length > value.length;\n      const hasTrailingDecimalSeparator = value.charAt(value.length - 1) === \".\";\n      const sanitizedValue =\n        hasTrailingDecimalSeparator && isValueDeleted ? value : sanitizeNumberString(value);\n\n      const newValue =\n        value && !sanitizedValue\n          ? isValidNumber(this.previousValue)\n            ? this.previousValue\n            : \"\"\n          : sanitizedValue;\n\n      let newLocalizedValue = numberStringFormatter.localize(newValue);\n\n      if (origin !== \"connected\" && !hasTrailingDecimalSeparator) {\n        newLocalizedValue = addLocalizedTrailingDecimalZeros(\n          newLocalizedValue,\n          newValue,\n          numberStringFormatter,\n        );\n      }\n\n      // adds localized trailing decimal separator\n      this.displayedValue =\n        hasTrailingDecimalSeparator && isValueDeleted\n          ? `${newLocalizedValue}${numberStringFormatter.decimal}`\n          : newLocalizedValue;\n\n      this.userChangedValue = origin === \"user\" && this.value !== newValue;\n      // don't sanitize the start of negative/decimal numbers, but\n      // don't set value to an invalid number\n      this.value = [\"-\", \".\"].includes(newValue) ? \"\" : newValue;\n    } else {\n      this.userChangedValue = origin === \"user\" && this.value !== value;\n      this.value = value;\n    }\n\n    if (origin === \"direct\") {\n      this.setInputValue(value);\n      this.previousEmittedValue = value;\n    }\n\n    if (nativeEvent) {\n      const calciteInputInputEvent = this.calciteInputInput.emit();\n      if (calciteInputInputEvent.defaultPrevented) {\n        this.value = this.previousValue;\n        this.displayedValue =\n          this.type === \"number\"\n            ? numberStringFormatter.localize(this.previousValue)\n            : this.previousValue;\n      } else if (committing) {\n        this.emitChangeIfUserModified();\n      }\n    }\n  };\n\n  private inputKeyUpHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private warnAboutInvalidNumberValue(value: string): void {\n    if (this.type === \"number\" && value && !isValidNumber(value)) {\n      console.warn(`The specified value \"${value}\" cannot be parsed, or is out of range.`);\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const loader = (\n      <div class={CSS.loader}>\n        <calcite-progress label={this.messages.loading} type=\"indeterminate\" />\n      </div>\n    );\n\n    const inputClearButton = (\n      <button\n        aria-label={this.messages.clear}\n        class={CSS.clearButton}\n        disabled={this.disabled || this.readOnly}\n        onClick={this.clearInputValue}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n    const iconEl = (\n      <calcite-icon\n        class={CSS.inputIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.requestedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const isHorizontalNumberButton = this.numberButtonType === \"horizontal\";\n\n    const numberButtonsHorizontalUp = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"up\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.numberButtonPointerDownHandler}\n        onPointerOut={this.numberButtonPointerUpAndOutHandler}\n        onPointerUp={this.numberButtonPointerUpAndOutHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-up\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsHorizontalDown = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"down\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.numberButtonPointerDownHandler}\n        onPointerOut={this.numberButtonPointerUpAndOutHandler}\n        onPointerUp={this.numberButtonPointerUpAndOutHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsVertical = (\n      <div class={CSS.numberButtonWrapper}>\n        {numberButtonsHorizontalUp}\n        {numberButtonsHorizontalDown}\n      </div>\n    );\n\n    const prefixText = <div class={CSS.prefix}>{this.prefixText}</div>;\n\n    const suffixText = <div class={CSS.suffix}>{this.suffixText}</div>;\n\n    const localeNumberInput =\n      this.type === \"number\" ? (\n        <input\n          accept={this.accept}\n          aria-label={getLabelText(this)}\n          autocomplete={this.autocomplete}\n          autofocus={this.autofocus ? true : null}\n          defaultValue={this.defaultValue}\n          disabled={this.disabled ? true : null}\n          enterKeyHint={this.enterKeyHint}\n          inputMode={this.inputMode}\n          key=\"localized-input\"\n          maxLength={this.maxLength}\n          minLength={this.minLength}\n          multiple={this.multiple}\n          name={undefined}\n          onBlur={this.inputBlurHandler}\n          onFocus={this.inputFocusHandler}\n          onInput={this.inputNumberInputHandler}\n          onKeyDown={this.inputNumberKeyDownHandler}\n          onKeyUp={this.inputKeyUpHandler}\n          pattern={this.pattern}\n          placeholder={this.placeholder || \"\"}\n          readOnly={this.readOnly}\n          type=\"text\"\n          value={this.displayedValue}\n          // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n          ref={this.setChildNumberElRef}\n        />\n      ) : null;\n\n    const childEl =\n      this.type !== \"number\"\n        ? [\n            <this.childElType\n              accept={this.accept}\n              aria-label={getLabelText(this)}\n              autocomplete={this.autocomplete}\n              autofocus={this.autofocus ? true : null}\n              class={{\n                [CSS.editingEnabled]: this.editingEnabled,\n                [CSS.inlineChild]: !!this.inlineEditableEl,\n              }}\n              defaultValue={this.defaultValue}\n              disabled={this.disabled ? true : null}\n              enterKeyHint={this.enterKeyHint}\n              inputMode={this.inputMode}\n              max={this.maxString}\n              maxLength={this.maxLength}\n              min={this.minString}\n              minLength={this.minLength}\n              multiple={this.multiple}\n              name={this.name}\n              onBlur={this.inputBlurHandler}\n              onChange={this.inputChangeHandler}\n              onFocus={this.inputFocusHandler}\n              onInput={this.inputInputHandler}\n              onKeyDown={this.inputKeyDownHandler}\n              onKeyUp={this.inputKeyUpHandler}\n              pattern={this.pattern}\n              placeholder={this.placeholder || \"\"}\n              readOnly={this.readOnly}\n              required={this.required ? true : null}\n              step={this.step}\n              tabIndex={\n                this.disabled || (this.inlineEditableEl && !this.editingEnabled) ? -1 : null\n              }\n              type={this.type}\n              value={this.value}\n              // eslint-disable-next-line react/jsx-sort-props -- ref should be last so node attrs/props are in sync (see https://github.com/Esri/calcite-design-system/pull/6530)\n              ref={this.setChildElRef}\n            />,\n            this.isTextarea ? (\n              <div class={CSS.resizeIconWrapper}>\n                <calcite-icon icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n              </div>\n            ) : null,\n          ]\n        : null;\n\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div class={{ [CSS.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}>\n            {this.type === \"number\" && this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalDown\n              : null}\n            {this.prefixText ? prefixText : null}\n            <div class={CSS.wrapper}>\n              {localeNumberInput}\n              {childEl}\n              {this.isClearable ? inputClearButton : null}\n              {this.requestedIcon ? iconEl : null}\n              {this.loading ? loader : null}\n            </div>\n            <div class={CSS.actionWrapper}>\n              <slot name={SLOTS.action} />\n            </div>\n            {this.type === \"number\" && this.numberButtonType === \"vertical\" && !this.readOnly\n              ? numberButtonsVertical\n              : null}\n            {this.suffixText ? suffixText : null}\n            {this.type === \"number\" && this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalUp\n              : null}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n",":host {\n  @apply block;\n}\n\n// scales\n:host([scale=\"s\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n2h h-6 px-2;\n  }\n  & textarea {\n    @apply h-6;\n    min-block-size: theme(\"spacing.6\");\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-6;\n  }\n  & input[type=\"file\"] {\n    @apply h-6;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.6\");\n    min-inline-size: theme(\"spacing.6\");\n  }\n  & textarea {\n    @apply text-n2h\n    h-auto\n    py-1\n    px-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n1h h-8 px-3;\n  }\n  & textarea {\n    min-block-size: theme(\"spacing.8\");\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-8;\n  }\n  & input[type=\"file\"] {\n    @apply h-8;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.8\");\n    min-inline-size: theme(\"spacing.8\");\n  }\n  & textarea {\n    @apply text-n1h\n      h-auto\n      py-2\n      px-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-0h h-11 px-4;\n  }\n  & textarea {\n    min-block-size: theme(\"spacing.11\");\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-11;\n  }\n  & input[type=\"file\"] {\n    @apply h-11;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.11\");\n    min-inline-size: theme(\"spacing.11\");\n  }\n  & textarea {\n    @apply text-0h\n      h-auto\n      py-3\n      px-4;\n  }\n}\n\n@include disabled() {\n  & textarea {\n    resize: none;\n  }\n}\n\ntextarea,\ninput {\n  transition:\n    var(--calcite-animation-timing),\n    block-size 0,\n    outline-offset 0s;\n  -webkit-appearance: none;\n  @apply font-inherit\n    text-color-1\n    bg-foreground-1\n    relative\n    m-0\n    box-border\n    flex\n    max-h-full\n    w-full\n    max-w-full\n    flex-1\n    rounded-none\n    font-normal;\n}\n\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n// states\ninput,\ntextarea {\n  @apply border\n    border-color-input\n    border-solid\n    text-color-1\n    text-ellipsis;\n  &::placeholder,\n  &:-ms-input-placeholder,\n  &::-ms-input-placeholder {\n    @apply text-color-3 font-normal;\n  }\n  &:placeholder-shown {\n    @apply text-ellipsis;\n  }\n}\ninput:focus,\ntextarea:focus {\n  @apply border-color-brand text-color-1;\n}\ninput[readonly],\ntextarea[readonly] {\n  @apply bg-background font-medium;\n}\ninput[readonly]:focus,\ntextarea[readonly]:focus {\n  @apply text-color-1;\n}\ncalcite-icon {\n  @apply text-color-3;\n}\n\n//focus\ntextarea,\ninput {\n  @apply focus-base;\n}\ntextarea:focus,\ninput:focus {\n  @apply focus-inset;\n}\n\n:host([status=\"invalid\"]) {\n  & input,\n  & textarea {\n    @apply border-color-danger;\n  }\n  & input:focus,\n  & textarea:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n// ICONS\n\n// position icons\n\n:host([scale=\"s\"]) .icon {\n  inset-inline-start: theme(\"spacing.2\");\n}\n\n:host([scale=\"m\"]) .icon {\n  inset-inline-start: theme(\"spacing.3\");\n}\n\n:host([scale=\"l\"]) .icon {\n  inset-inline-start: theme(\"spacing.4\");\n}\n\n// position placeholder/value text in relation to icons\n\n:host([icon][scale=\"s\"]) input {\n  padding-inline-start: theme(\"padding.8\");\n}\n\n:host([icon][scale=\"m\"]) input {\n  padding-inline-start: theme(\"padding.10\");\n}\n\n:host([icon][scale=\"l\"]) input {\n  padding-inline-start: theme(\"padding.14\");\n}\n\n// positioning wrapper for icon and loader\n\n.element-wrapper {\n  @apply relative\n    order-3\n    inline-flex\n    flex-1\n    items-center;\n}\n\n.icon {\n  @apply transition-default\n    pointer-events-none\n    absolute\n    block;\n}\n\n.icon,\n.resize-icon-wrapper {\n  @apply z-default; // needed for firefox to display the icon properly\n}\n\n// hide browser default clear\n\ninput[type=\"text\"]::-ms-clear,\ninput[type=\"text\"]::-ms-reveal {\n  @apply hidden\n    h-0\n    w-0;\n}\ninput[type=\"search\"]::-webkit-search-decoration,\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-results-button,\ninput[type=\"search\"]::-webkit-search-results-decoration,\ninput[type=\"date\"]::-webkit-clear-button,\ninput[type=\"time\"]::-webkit-clear-button {\n  @apply hidden;\n}\n\n.clear-button {\n  pointer-events: initial;\n  @apply focus-base\n    border-color-input\n    bg-foreground-1\n    order-4\n    m-0\n    box-border\n    flex\n    min-h-full\n    cursor-pointer\n    items-center\n    justify-center\n    self-stretch\n    border\n    border-solid;\n\n  border-inline-start-width: theme(\"borderWidth.0\");\n\n  &:hover {\n    @apply bg-foreground-2 transition-default;\n    calcite-icon {\n      @apply text-color-1 transition-default;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:disabled {\n    @apply opacity-disabled;\n  }\n}\n\n// loading\n.loader {\n  inset-block-start: 1px;\n  inset-inline: 1px;\n  @apply pointer-events-none\n    absolute\n    block;\n}\n\n// slotted action\n.action-wrapper {\n  @apply order-7 flex;\n}\n\n// prefix and suffix\n.prefix,\n.suffix {\n  @apply border-color-input\n    bg-background\n    text-color-2\n    box-border\n    flex\n    h-auto\n    min-h-full\n    select-none\n    content-center\n    items-center\n    break-words\n    border\n    border-solid\n    font-medium\n    leading-none;\n}\n\n.prefix {\n  @apply order-2;\n  border-inline-end-width: theme(\"borderWidth.0\");\n}\n.suffix {\n  @apply order-5;\n  border-inline-start-width: theme(\"borderWidth.0\");\n}\n\n// alignment type\n:host([alignment=\"start\"]) {\n  & textarea,\n  & input {\n    text-align: start;\n  }\n}\n\n:host([alignment=\"end\"]) {\n  & textarea,\n  & input {\n    text-align: end;\n  }\n}\n\n// number buttons\ninput[type=\"number\"] {\n  -moz-appearance: textfield;\n\n  &::-webkit-inner-spin-button,\n  &::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    -moz-appearance: textfield;\n    @apply m-0;\n  }\n}\n\n.number-button-wrapper {\n  @apply transition-default\n    pointer-events-none\n    order-6\n    box-border\n    flex\n    flex-col;\n}\n\n:host([number-button-type=\"vertical\"]) .wrapper {\n  flex-direction: row;\n  display: flex;\n}\n\n:host([number-button-type=\"vertical\"]) {\n  & input,\n  textarea {\n    @apply order-2;\n  }\n}\n\n:host([number-button-type=\"horizontal\"]) .calcite--rtl {\n  & .number-button-item[data-adjustment=\"down\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n  & .number-button-item[data-adjustment=\"up\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n}\n\n.number-button-item.number-button-item--horizontal {\n  &[data-adjustment=\"down\"],\n  &[data-adjustment=\"up\"] {\n    @apply order-1\n      max-h-full\n      min-h-full\n      self-stretch;\n    & calcite-icon {\n      transform: rotate(90deg);\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"down\"] {\n  @apply border-color-input\n    border\n    border-solid;\n  border-inline-end-width: theme(\"borderWidth.0\");\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"up\"] {\n  @apply order-5;\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"up\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"] {\n  @apply border-t-0;\n}\n\n.number-button-item {\n  max-block-size: 50%;\n  min-block-size: 50%;\n  pointer-events: initial;\n  @apply border-color-input\n    bg-foreground-1\n    transition-default\n    m-0\n    box-border\n    flex\n    cursor-pointer\n    items-center\n    self-center\n    border\n    border-solid\n    py-0\n    px-2;\n  border-inline-start-width: theme(\"borderWidth.0\");\n  & calcite-icon {\n    @apply transition-default pointer-events-none;\n  }\n  &:focus {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n  }\n  &:disabled {\n    @apply pointer-events-none;\n  }\n}\n\n.wrapper {\n  @apply relative\n    flex\n    flex-row\n    items-center;\n}\n\n// hide the default date picker\n:input::-webkit-calendar-picker-indicator {\n  @apply hidden;\n}\n\ninput[type=\"date\"]::-webkit-input-placeholder {\n  visibility: hidden !important;\n}\n\n// textarea resize icon\ntextarea::-webkit-resizer {\n  @apply absolute\n    bottom-0\n    box-border\n    py-0\n    px-1;\n  inset-inline-end: 0;\n}\n\n.resize-icon-wrapper {\n  inset-block-end: 2px;\n  inset-inline-end: 2px;\n\n  @apply bg-foreground-1\n    text-color-3\n    pointer-events-none\n    absolute\n    h-3\n    w-3;\n\n  & calcite-icon {\n    inset-block-end: theme(\"spacing.1\");\n    inset-inline-end: theme(\"spacing.1\");\n    transform: rotate(-45deg);\n  }\n}\n\n.calcite--rtl {\n  .resize-icon-wrapper {\n    & calcite-icon {\n      transform: rotate(45deg);\n    }\n  }\n}\n\n:host([type=\"color\"]) input {\n  @apply p-1;\n}\n\n// file input\n:host([type=\"file\"]) input {\n  @apply bg-foreground-1\n    border-color-input\n    cursor-pointer\n    border\n    border-dashed\n    text-center;\n}\n\n:host([type=\"file\"][scale=\"s\"]) input {\n  @apply py-px px-2;\n}\n\n:host([type=\"file\"][scale=\"m\"]) input {\n  @apply py-1 px-3;\n}\n\n:host([type=\"file\"][scale=\"l\"]) input {\n  @apply py-2 px-4;\n}\n\n:host(.no-bottom-border) input {\n  @apply border-b-0;\n}\n\n:host(.border-top-color-one) input {\n  @apply border-t-color-1;\n}\n\n// input needed for higher specificity of these overrides\ninput {\n  &.inline-child {\n    @apply transition-default bg-transparent;\n    .editing-enabled {\n      background-color: inherit;\n    }\n  }\n\n  &.inline-child:not(.editing-enabled) {\n    @apply border-color-transparent\n      flex\n      cursor-pointer text-ellipsis;\n    padding-inline-start: 0;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n","@import \"../../assets/styles/animation\";\n\n:host {\n  @apply relative block w-full;\n}\n\n.track,\n.bar {\n  @apply absolute top-0;\n  block-size: 2px;\n}\n\n.track {\n  @apply z-default w-full overflow-hidden;\n  background: theme(\"borderColor.color.3\");\n}\n\n.bar {\n  @apply bg-brand z-default;\n}\n\n@media (forced-colors: active) {\n  .track {\n    background-color: highlightText;\n  }\n  .bar {\n    background-color: linkText;\n  }\n}\n\n.indeterminate {\n  @apply w-1/5;\n  animation: looping-progress-bar-ani scaleDuration(--calcite-internal-animation-timing-medium, 11) linear infinite;\n  &.calcite--rtl {\n    animation-name: looping-progress-bar-ani-rtl;\n  }\n}\n\n.reversed {\n  animation-direction: reverse;\n}\n\n.text {\n  @apply text-n2h px-0 pt-4 pb-0 text-center font-medium;\n  color: var(--calcite-color-text-2);\n}\n\n@keyframes looping-progress-bar-ani {\n  0% {\n    transform: translate3d(-100%, 0, 0);\n  }\n  50% {\n    inline-size: 40%;\n  }\n  100% {\n    transform: translate3d(600%, 0, 0);\n  }\n}\n\n@keyframes looping-progress-bar-ani-rtl {\n  0% {\n    transform: translate3d(100%, 0, 0);\n  }\n  50% {\n    inline-size: 40%;\n  }\n  100% {\n    transform: translate3d(-600%, 0, 0);\n  }\n}\n\n@include base-component();\n","import { Component, Element, h, Prop, VNode } from \"@stencil/core\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\n@Component({\n  tag: \"calcite-progress\",\n  styleUrl: \"progress.scss\",\n  shadow: true,\n})\nexport class Progress {\n  @Element() el: HTMLCalciteProgressElement;\n\n  /**\n   * Specifies the component type.\n   *\n   * Use `\"indeterminate\"` if finding actual progress value is impossible.\n   *\n   */\n  @Prop({ reflect: true }) type: \"indeterminate\" | \"determinate\" = \"determinate\";\n\n  /** When `type` is `\"determinate\"`, the component's progress value with a range of 0.0 - 1.0. */\n  @Prop() value = 0;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** Text that displays under the component's indicator. */\n  @Prop() text: string;\n\n  /** When `true` and for `\"indeterminate\"` progress bars, reverses the animation direction. */\n  @Prop({ reflect: true }) reversed = false;\n\n  render(): VNode {\n    const isDeterminate = this.type === \"determinate\";\n    const barStyles = isDeterminate ? { width: `${this.value * 100}%` } : {};\n    const dir = getElementDir(this.el);\n    return (\n      <div\n        aria-label={this.label || this.text}\n        aria-valuemax={1}\n        aria-valuemin={0}\n        aria-valuenow={this.value}\n        role=\"progressbar\"\n      >\n        <div class=\"track\">\n          <div\n            class={{\n              bar: true,\n              indeterminate: this.type === \"indeterminate\",\n              [CSS_UTILITY.rtl]: dir === \"rtl\",\n              reversed: this.reversed,\n            }}\n            style={barStyles}\n          />\n        </div>\n        {this.text ? <div class=\"text\">{this.text}</div> : null}\n      </div>\n    );\n  }\n}\n"],"names":["StatusIconDefaults","InputMessage","proxyCustomElement","HTMLElement","handleIconEl","this","requestedIcon","setRequestedIcon","icon","status","connectedCallback","render","hidden","el","h","Host","renderIcon","iconName","class","flipRtl","iconFlipRtl","scale","CSS","Validation","_ref","message","minMaxStepTypes","patternTypes","minMaxLengthTypes","updateConstraintValidation","inputComponent","input","propName","matchesType","attributeName","toLowerCase","value","setAttribute","concat","removeAttribute","INPUT_TYPE_ICONS","tel","password","email","date","time","search","SLOTS","Input","childElType","previousValueOrigin","mutationObserver","createObserver","setDisabledAction","userChangedValue","keyDownHandler","event","readOnly","disabled","isClearable","key","clearInputValue","preventDefault","defaultPrevented","submitForm","nativeEvent","setValue","committing","origin","emitChangeIfUserModified","previousEmittedValue","calciteInputChange","emit","setPreviousEmittedValue","inputBlurHandler","window","clearInterval","nudgeNumberValueIntervalId","calciteInternalInputBlur","clickHandler","slottedActionEl","getSlotted","target","setFocus","inputFocusHandler","calciteInternalInputFocus","inputChangeHandler","type","files","childEl","inputInputHandler","inputKeyDownHandler","inputNumberInputHandler","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","delocalizedValue","delocalize","inputType","isValidNumber","parseNumberString","childNumberEl","displayedValue","inputNumberKeyDownHandler","nudgeNumberValue","supportedKeys","numberKeys","altKey","ctrlKey","metaKey","isShiftTabEvent","shiftKey","includes","decimal","indexOf","test","split","length","direction","KeyboardEvent","repeat","inputMax","maxString","parseFloat","inputMin","minString","incrementOrDecrementNumberValue","firstValueNudge","setInterval","numberButtonPointerUpAndOutHandler","numberButtonPointerDownHandler","isPrimaryPointerButton","dataset","adjustment","onHiddenFormInputInput","name","stopPropagation","setChildElRef","setChildNumberElRef","setInputValue","newInputValue","normalizeValue","setPreviousValue","previousValue","_this$previousValue","_this$value","signDisplay","isValueDeleted","hasTrailingDecimalSeparator","charAt","sanitizedValue","sanitizeNumberString","newValue","newLocalizedValue","localize","addLocalizedTrailingDecimalZeros","calciteInputInput","inputKeyUpHandler","disabledWatcher","maxWatcher","_this$max","max","toString","minWatcher","_this$min","min","onMessagesChange","valueWatcher","warnAboutInvalidNumberValue","updateRequestedIcon","_this$value2","isTextarea","clearable","effectiveLocaleChange","updateMessages","_this$mutationObserve","connectInteractive","connectLocalized","connectMessages","inlineEditableEl","closest","editingEnabled","connectLabel","connectForm","observe","childList","addEventListener","internalHiddenInputInputEvent","disconnectedCallback","_this$mutationObserve2","disconnectInteractive","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","disconnect","removeEventListener","componentWillLoad","_this$max2","_this$min2","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentShouldUpdate","oldValue","property","componentDidRender","updateHostInteraction","_this$childNumberEl","_this$childEl","componentFocusable","focus","selectText","_this$childNumberEl2","_this$childEl2","select","onLabelClick","inputStep","step","Math","abs","nudgedValue","BigDecimal","add","finalValue","isNaN","subtract","isNegative","syncHiddenFormInput","hiddenFormInput","isMinMaxStepType","numericInputComponent","isMinMaxLengthType","textualInputComponent","getAttribute","slottedActionElDisabledInternally","console","warn","dir","getElementDir","loader","label","messages","loading","inputClearButton","clear","onClick","tabIndex","getIconScale","iconEl","isHorizontalNumberButton","numberButtonType","numberButtonsHorizontalUp","onPointerDown","onPointerOut","onPointerUp","numberButtonsHorizontalDown","numberButtonsVertical","prefixText","suffixText","localeNumberInput","accept","getLabelText","autocomplete","autofocus","defaultValue","enterKeyHint","inputMode","maxLength","minLength","multiple","undefined","onBlur","onFocus","onInput","onKeyDown","onKeyUp","pattern","placeholder","ref","onChange","required","InteractiveContainer","CSS_UTILITY","rtl","HiddenFormInputSlot","component","validationMessage","validationIcon","Progress","barStyles","width","text","role","bar","indeterminate","reversed","style"],"sourceRoot":""}