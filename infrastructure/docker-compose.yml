version: '3.7'

services:
  db:
    image: postgres:15.4-alpine3.18 
    env_file:
      - .env.db.dev
    ports:
      - "5432:5432"
  api:
    build: 
      context: ../api
      dockerfile: Dockerfile
    container_name: rdis_api
    volumes:
      - ../api:/app
      - node_modules_api:/app/node_modules
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=PathPrefix(`/api`)"
      - "traefik.http.services.api.loadbalancer.server.port=3001"
    restart: always
    depends_on:
      - db
      - traefik
    env_file:
      - .env.dev
    command: npm run dev
  web:
    build: ../web
    container_name: rdis_web
    volumes:
      - ../web:/app
      - node_modules_web:/app/node_modules
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.web.rule=PathPrefix(`/`)"
      - "traefik.http.services.web.loadbalancer.server.port=3000"
    environment:
      - NODE_ENV=development
    depends_on:
      - api
      - traefik
    command: npm start

  traefik:
    image: traefik:v2.4
    ports:
      - "80:80"
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml
      - /var/run/docker.sock:/var/run/docker.sock
    command: --log.level=DEBUG

volumes:
  node_modules_api:
  node_modules_web:
