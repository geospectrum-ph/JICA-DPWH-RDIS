"use strict";(self.webpackChunkRDIS_Web_Application=self.webpackChunkRDIS_Web_Application||[]).push([[156],{10156:(e,t,r)=>{r.r(t),r.d(t,{assetMapFromAssetMapsJSON:()=>y,extractMesh:()=>A,meshFeatureSetFromJSON:()=>E});var n=r(39356),s=r(76460),a=r(87663),o=r(76797),i=r(23141),u=r(19247),c=r(13312),l=r(32186),f=r(57045),p=r(19463),m=r(77725);const h=()=>s.A.getLogger("esri.rest.support.meshFeatureSet");function E(e,t,r){const s=r.features;r.features=[],delete r.geometryType;const a=m.A.fromJSON(r);if(a.geometryType="mesh",!r.assetMaps)return a;const o=y(t,r.assetMaps),i=e.sourceSpatialReference??c.A.WGS84,u=r.globalIdFieldName,{outFields:l}=e,f=null!=l&&l.length>0?(p=l.includes("*")?null:new Set(l),e=>{let{attributes:t}=e;if(!t)return{};if(!p)return t;for(const r in t)p.has(r)||delete t[r];return t}):()=>({});var p;for(const c of s){const e=A(c,u,i,t,o);a.features.push(new n.A({geometry:e,attributes:f(c)}))}return a}function A(e,t,r,n,s){const a=e.attributes[t],c=s.get(a);if(null==c||!e.geometry)return null;const p=function(e,t,r){let{attributes:n}=e,{transformFieldRoles:s}=r;const a=n[s.originX],o=n[s.originY],i=n[s.originZ];return new u.A({x:a,y:o,z:i,spatialReference:t})}(e,r,n),m=o.A.fromJSON(e.geometry);m.spatialReference=r;const h=function(e,t){let{transformFieldRoles:r}=t;return new l.A({translation:[e[r.translationX],-e[r.translationZ],e[r.translationY]],rotationAxis:[e[r.rotationX],-e[r.rotationZ],e[r.rotationY]],rotationAngle:e[r.rotationDeg],scale:[e[r.scaleX],e[r.scaleZ],e[r.scaleY]]})}(e.attributes,n),E=r.isGeographic?"local":"georeferenced",A=function(e){const t=Array.from(e.files.values()),r=new Array;for(const n of t){if(n.status!==S.COMPLETED)return null;const e=new Array;for(const t of n.parts){if(!t)return null;e.push(new f.Bq(t.url,t.hash))}r.push(new f.Qp(n.name,n.mimeType,e))}return r}(c);return A?i.A.createWithExternalSource(p,A,{extent:m,transform:h,vertexSpace:E}):i.A.createIncomplete(p,{extent:m,transform:h,vertexSpace:E})}var S,g;function y(e,t){const r=new Map;for(const n of t){const t=n.parentGlobalId;if(null==t)continue;const s=n.assetName,o=n.assetType,i=n.assetHash,u=n.assetURL,c=n.conversionStatus,l=n.seqNo,f=(0,p.Fm)(o,e.supportedFormats);if(!f){h().error("mesh-feature-set:unknown-format",`Service returned an asset of type ${o}, but it does not list it as a supported type`);continue}const m=(0,a.tE)(r,t,(()=>({files:new Map})));(0,a.tE)(m.files,s,(()=>({name:s,type:o,mimeType:f,status:d(c),parts:[]}))).parts[l]={hash:i,url:u}}return r}function d(e){switch(e){case"COMPLETED":case"SUBMITTED":return S.COMPLETED;case"INPROGRESS":return S.PENDING;default:return S.FAILED}}(g=S||(S={}))[g.FAILED=0]="FAILED",g[g.PENDING=1]="PENDING",g[g.COMPLETED=2]="COMPLETED"}}]);
//# sourceMappingURL=156.b86e0156.chunk.js.map