"use strict";(self.webpackChunkRDIS_Web_Application=self.webpackChunkRDIS_Web_Application||[]).push([[2951],{82951:(e,t,r)=>{r.r(t),r.d(t,{default:()=>q});var i=r(35143),s=r(3825),a=r(82111),o=r(50076),n=r(27741),l=r(77717),p=r(50346),d=r(46053),u=r(40565),h=(r(47249),r(81806),r(28379)),c=r(85842),y=r(17707),m=r(49140),v=r(76797),g=r(68002),b=r(80963),f=r(25515),_=r(12406),x=r(36648),M=r(19502),S=r(65624),I=r(31362),w=r(11270),Z=r(94729),P=r(21617),O=r(5682),A=r(73907),T=r(78817),E=r(95363),L=r(1420),R=r(16852),F=r(39568),j=r(65419),J=r(38278),N=r(67478);let k=class extends((0,S.dM)((0,T.e)((0,O.j)((0,A.I)((0,x.V)((0,M.b)((0,w.q)((0,Z.A)((0,l.P)((0,P.J)((0,_.p)((0,I.d)(f.A))))))))))))){constructor(){super(...arguments),this._exportImageParameters=new L.g({layer:this}),this.dateFieldsTimeZone=null,this.datesInUnknownTimezone=!1,this.dpi=96,this.gdbVersion=null,this.imageFormat="png24",this.imageMaxHeight=2048,this.imageMaxWidth=2048,this.imageTransparency=!0,this.isReference=null,this.labelsVisible=!1,this.operationalLayerType="ArcGISMapServiceLayer",this.preferredTimeZone=null,this.sourceJSON=null,this.sublayers=null,this.type="map-image",this.url=null}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}load(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(p.QP).then((()=>this._fetchService(t)))),Promise.resolve(this)}destroy(){this._exportImageParameters.destroy()}readImageFormat(e,t){const r=t.supportedImageFormatTypes;return r&&r.includes("PNG32")?"png32":"png24"}writeSublayers(e,t,r,i){var s,a;if(!this.loaded||!e)return;const o=e.slice().reverse().flatten((e=>{let{sublayers:t}=e;return t&&t.toArray().reverse()})).toArray();let n=!1;const l=(0,m.aB)(i.origin);if(null!==(s=this.capabilities)&&void 0!==s&&s.operations.supportsExportMap&&null!==(a=this.capabilities)&&void 0!==a&&null!==(a=a.exportMap)&&void 0!==a&&a.supportsDynamicLayers)if(l===m.Gr.PORTAL_ITEM){const e=this.createSublayersForOrigin("service").sublayers;n=(0,j.Zx)(o,e,m.Gr.SERVICE)}else if(l>m.Gr.PORTAL_ITEM){const e=this.createSublayersForOrigin("portal-item");n=(0,j.Zx)(o,e.sublayers,(0,m.aB)(e.origin))}const p=[],d={writeSublayerStructure:n,...i};let u=n||this.hasVisibleLayersForOrigin(l);o.forEach((e=>{const t=e.write({},d);p.push(t),u=u||"user"===e.originOf("visible")})),p.some((e=>Object.keys(e).length>1))&&(t.layers=p),u&&(t.visibleLayers=o.filter((e=>e.visible)).map((e=>e.id)))}createExportImageParameters(e,t,r,i){var s,a;const o=(null===i||void 0===i?void 0:i.pixelRatio)||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian()),this._exportImageParameters.floors=null!==(s=null===i||void 0===i?void 0:i.floors)&&void 0!==s?s:null,this._exportImageParameters.scale=(0,g.X_)({extent:e,width:t})*o;const n=this._exportImageParameters.toJSON(),l=null===i||void 0===i||!i.rotation||this.version<10.3?{}:{rotation:-i.rotation},p=null===(a=e)||void 0===a?void 0:a.spatialReference,d=(0,b.YX)(p);n.dpi*=o;const u={};if(null!==i&&void 0!==i&&i.timeExtent){const{start:e,end:t}=i.timeExtent.toJSON();u.time=e&&t&&e===t?""+e:"".concat(null!==e&&void 0!==e?e:"null",",").concat(null!==t&&void 0!==t?t:"null")}else this.timeInfo&&!this.timeInfo.hasLiveData&&(u.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:d,imageSR:d,size:t+","+r,...n,...l,...u}}async fetchImage(e,t,r,i){const{data:s}=await this._fetchImage("image",e,t,r,i);return s}async fetchImageBitmap(e,t,r,i){const{data:s,url:a}=await this._fetchImage("blob",e,t,r,i);return(0,R.m)(s,a,null===i||void 0===i?void 0:i.signal)}async fetchRecomputedExtents(){const e={...arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:t}=await(0,s.A)(this.url,e),{extent:r,fullExtent:i,timeExtent:o}=t,n=r||i;return{fullExtent:n&&v.A.fromJSON(n),timeExtent:o&&a.A.fromJSON({start:o[0],end:o[1]})}}loadAll(){return(0,n.g)(this,(e=>{e(this.allSublayers),e(this.subtables)}))}serviceSupportsSpatialReference(e){return(0,J.D)(this,e)}async _fetchImage(e,t,r,i,a){var n,l,d;const u={responseType:e,signal:null!==(n=null===a||void 0===a?void 0:a.signal)&&void 0!==n?n:null,query:{...this.parsedUrl.query,...this.createExportImageParameters(t,r,i,a),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},h=this.parsedUrl.path+"/export";if(null!=(null===(l=u.query)||void 0===l?void 0:l.dynamicLayers)&&(null===(d=this.capabilities)||void 0===d||null===(d=d.exportMap)||void 0===d||!d.supportsDynamicLayers))throw new o.A("mapimagelayer:dynamiclayer-not-supported","service ".concat(this.url," doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source."),{query:u.query});try{const{data:e}=await(0,s.A)(h,u);return{data:e,url:h}}catch(c){if((0,p.zf)(c))throw c;throw new o.A("mapimagelayer:image-fetch-error","Unable to load image: ".concat(h),{error:c})}}async _fetchService(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:t,ssl:r}=await(0,s.A)(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});r&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=t,this.read(t,{origin:"service",url:this.parsedUrl})}hasVisibleLayersForOrigin(e){var t;return!(null==e||null===(t=this.sublayersSourceJSON[e])||void 0===t||!t.visibleLayers)}};(0,i._)([(0,d.MZ)((0,N.P6)("dateFieldsTimeReference"))],k.prototype,"dateFieldsTimeZone",void 0),(0,i._)([(0,d.MZ)({type:Boolean})],k.prototype,"datesInUnknownTimezone",void 0),(0,i._)([(0,d.MZ)()],k.prototype,"dpi",void 0),(0,i._)([(0,d.MZ)()],k.prototype,"gdbVersion",void 0),(0,i._)([(0,d.MZ)()],k.prototype,"imageFormat",void 0),(0,i._)([(0,h.w)("imageFormat",["supportedImageFormatTypes"])],k.prototype,"readImageFormat",null),(0,i._)([(0,d.MZ)({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],k.prototype,"imageMaxHeight",void 0),(0,i._)([(0,d.MZ)({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],k.prototype,"imageMaxWidth",void 0),(0,i._)([(0,d.MZ)()],k.prototype,"imageTransparency",void 0),(0,i._)([(0,d.MZ)({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],k.prototype,"isReference",void 0),(0,i._)([(0,d.MZ)({json:{read:!1,write:!1}})],k.prototype,"labelsVisible",void 0),(0,i._)([(0,d.MZ)({type:["ArcGISMapServiceLayer"]})],k.prototype,"operationalLayerType",void 0),(0,i._)([(0,d.MZ)({json:{read:!1,write:!1}})],k.prototype,"popupEnabled",void 0),(0,i._)([(0,d.MZ)((0,N.P6)("preferredTimeReference"))],k.prototype,"preferredTimeZone",void 0),(0,i._)([(0,d.MZ)()],k.prototype,"sourceJSON",void 0),(0,i._)([(0,d.MZ)({json:{write:{ignoreOrigin:!0}}})],k.prototype,"sublayers",void 0),(0,i._)([(0,y.K)("sublayers",{layers:{type:[F.A]},visibleLayers:{type:[u.jz]}})],k.prototype,"writeSublayers",null),(0,i._)([(0,d.MZ)({type:["show","hide","hide-children"]})],k.prototype,"listMode",void 0),(0,i._)([(0,d.MZ)({json:{read:!1},readOnly:!0,value:"map-image"})],k.prototype,"type",void 0),(0,i._)([(0,d.MZ)(E.OZ)],k.prototype,"url",void 0),k=(0,i._)([(0,c.$)("esri.layers.MapImageLayer")],k);const q=k}}]);
//# sourceMappingURL=2951.d6ce6a38.chunk.js.map