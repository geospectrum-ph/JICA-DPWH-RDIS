"use strict";(self.webpackChunkweb=self.webpackChunkweb||[]).push([[904],{74e3:(e,t,s)=>{s.d(t,{CI:()=>n,fk:()=>o});s(81806);var r=s(15941),i=s(80963);function n(e,t){return e===t||null!=e&&null!=t&&(0,i.aI)(e.spatialReference,t.spatialReference)&&e.x===t.x&&e.y===t.y&&e.z===t.z&&e.m===t.m}function o(e,t,s){var n,o,a,l;return e===t||null!=e&&null!=t&&(0,i.aI)(e.spatialReference,t.spatialReference)&&(0,r.Sp)(e.x,t.x,s)&&(0,r.Sp)(e.y,t.y,s)&&(0,r.Sp)(null!==(n=e.z)&&void 0!==n?n:0,null!==(o=t.z)&&void 0!==o?o:0,s)&&(0,r.Sp)(null!==(a=e.m)&&void 0!==a?a:0,null!==(l=t.m)&&void 0!==l?l:0,s)}},99784:(e,t,s)=>{s.d(t,{HP:()=>n,N3:()=>o,RW:()=>u,Uz:()=>c,iQ:()=>h,jy:()=>a,w9:()=>l});s(81806),s(78393),s(13312);var r=s(42294),i=s(2413);s(76279),s(31608),s(44135),s(74e3);class n{constructor(e,t,s){this.uid=e,this.geometry=t,this.attributes=s,this.visible=!0,this.objectId=null,this.centroid=null}}function o(e){return null!=e.geometry}class a{constructor(){this.exceededTransferLimit=!1,this.features=[],this.fields=[],this.hasM=!1,this.hasZ=!1,this.geometryType=null,this.objectIdFieldName=null,this.globalIdFieldName=null,this.geometryProperties=null,this.geohashFieldName=null,this.spatialReference=null,this.transform=null}}function l(e,t){switch((0,r.Ie)(t),"mesh"===e.type&&(e=e.extent),e.type){case"point":t[0]=t[3]=e.x,t[1]=t[4]=e.y,e.hasZ&&(t[2]=t[5]=e.z);break;case"polyline":for(let s=0;s<e.paths.length;s++)(0,r.Jf)(t,e.paths[s],!!e.hasZ);break;case"polygon":for(let s=0;s<e.rings.length;s++)(0,r.Jf)(t,e.rings[s],!!e.hasZ);break;case"multipoint":(0,r.Jf)(t,e.points,!!e.hasZ);break;case"extent":t[0]=e.xmin,t[1]=e.ymin,t[3]=e.xmax,t[4]=e.ymax,null!=e.zmin&&(t[2]=e.zmin),null!=e.zmax&&(t[5]=e.zmax)}}function h(e,t){switch((0,i.Ie)(t),"mesh"===e.type&&(e=e.extent),e.type){case"point":t[0]=t[2]=e.x,t[1]=t[3]=e.y;break;case"polyline":for(let s=0;s<e.paths.length;s++)(0,i.Jf)(t,e.paths[s]);break;case"polygon":for(let s=0;s<e.rings.length;s++)(0,i.Jf)(t,e.rings[s]);break;case"multipoint":(0,i.Jf)(t,e.points);break;case"extent":t[0]=e.xmin,t[1]=e.ymin,t[2]=e.xmax,t[3]=e.ymax}}function u(e,t){return null!=e.objectId?e.objectId:e.attributes&&t?e.attributes[t]:null}function c(e,t,s,r){if(null!==t&&void 0!==t&&t.size&&null!=s&&e)for(const i in e){if(!t.has(i))continue;const n=e[i];"string"==typeof n&&n.length>s&&(r(i),e[i]="")}}},20904:(e,t,s)=>{s.r(t),s.d(t,{default:()=>b});var r=s(4212),i=s(90632),n=s(13312),o=s(86729),a=s(99784),l=s(98618),h=s(44135);function u(e,t){return t}function c(e,t,s,r){switch(s){case 0:return m(e,t+r,0);case 1:return"lowerLeft"===e.originPosition?m(e,t+r,1):function(e,t,s){let{translate:r,scale:i}=e;return r[s]-t*i[s]}(e,t+r,1)}}function d(e,t,s,r){return 2===s?m(e,t,2):c(e,t,s,r)}function p(e,t,s,r){return 2===s?m(e,t,3):c(e,t,s,r)}function f(e,t,s,r){return 3===s?m(e,t,3):d(e,t,s,r)}function m(e,t,s){let{translate:r,scale:i}=e;return r[s]+t*i[s]}class y{constructor(e){this._options=e,this.geometryTypes=["point","multipoint","polyline","polygon"],this._previousCoordinate=[0,0],this._transform=null,this._applyTransform=u,this._lengths=[],this._currentLengthIndex=0,this._toAddInCurrentPath=0,this._vertexDimension=0,this._coordinateBuffer=null,this._coordinateBufferPtr=0,this._attributesConstructor=class{},this._missingAttributes=[]}get missingAttributes(){return this._missingAttributes}createFeatureResult(){return new a.jy}finishFeatureResult(e){if(this._options.applyTransform&&(e.transform=null),this._attributesConstructor=class{},this._coordinateBuffer=null,this._lengths.length=0,!e.hasZ)return;const t=(0,o.N)(e.geometryType,this._options.sourceSpatialReference,e.spatialReference);if(null!=t)for(const s of e.features)t(s.geometry)}createSpatialReference(){return new n.A}addField(e,t){e.fields.push(h.A.fromJSON(t));const s=e.fields.map((e=>e.name));this._attributesConstructor=function(){for(const e of s)this[e]=null}}addFeature(e,t){const s=this._options.maxStringAttributeLength,r=this._options.maxStringAttributeFields;(0,a.Uz)(t.attributes,r,s,(s=>{const r=t.attributes[e.objectIdFieldName];null!=r&&this._missingAttributes.push({objectId:r,attribute:s})})),e.features.push(t)}addQueryGeometry(e,t){const{queryGeometry:s,queryGeometryType:r}=t,i=(0,l.Ch)(s.clone(),s,!1,!1,this._transform),n=(0,l.zv)(i,r,!1,!1);let o=null;switch(r){case"esriGeometryPoint":o="point";break;case"esriGeometryPolygon":o="polygon";break;case"esriGeometryPolyline":o="polyline";break;case"esriGeometryMultipoint":o="multipoint"}n.type=o,e.queryGeometryType=r,e.queryGeometry=n}prepareFeatures(e){var t;switch(this._transform=null!==(t=e.transform)&&void 0!==t?t:null,this._options.applyTransform&&e.transform&&(this._applyTransform=this._deriveApplyTransform(e)),this._vertexDimension=2,e.hasZ&&this._vertexDimension++,e.hasM&&this._vertexDimension++,e.geometryType){case"point":this.addCoordinate=(e,t,s)=>this.addCoordinatePoint(e,t,s),this.createGeometry=e=>this.createPointGeometry(e);break;case"polygon":this.addCoordinate=(e,t,s)=>this._addCoordinatePolygon(e,t,s),this.createGeometry=e=>this._createPolygonGeometry(e);break;case"polyline":this.addCoordinate=(e,t,s)=>this._addCoordinatePolyline(e,t,s),this.createGeometry=e=>this._createPolylineGeometry(e);break;case"multipoint":this.addCoordinate=(e,t,s)=>this._addCoordinateMultipoint(e,t,s),this.createGeometry=e=>this._createMultipointGeometry(e);break;case"mesh":case"extent":break;default:(0,r.Xb)(e.geometryType)}}createFeature(){return this._lengths.length=0,this._currentLengthIndex=0,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0,new a.HP((0,i.c)(),null,new this._attributesConstructor)}allocateCoordinates(){const e=this._lengths.reduce(((e,t)=>e+t),0);this._coordinateBuffer=new Float64Array(e*this._vertexDimension),this._coordinateBufferPtr=0}addLength(e,t){0===this._lengths.length&&(this._toAddInCurrentPath=t),this._lengths.push(t)}createPointGeometry(e){const t={type:"point",x:0,y:0,spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM};return t.hasZ&&(t.z=0),t.hasM&&(t.m=0),t}addCoordinatePoint(e,t,s){const r=this._transform?this._applyTransform(this._transform,t,s,0):t;if(null!=r)switch(s){case 0:e.x=r;break;case 1:e.y=r;break;case 2:e.hasZ?e.z=r:e.m=r;break;case 3:e.m=r}}_transformPathLikeValue(e,t){let s=0;return t<=1&&(s=this._previousCoordinate[t],this._previousCoordinate[t]+=e),this._transform?this._applyTransform(this._transform,e,t,s):e}_addCoordinatePolyline(e,t,s){this._dehydratedAddPointsCoordinate(e.paths,t,s)}_addCoordinatePolygon(e,t,s){this._dehydratedAddPointsCoordinate(e.rings,t,s)}_addCoordinateMultipoint(e,t,s){0===s&&e.points.push([]);const r=this._transformPathLikeValue(t,s);e.points[e.points.length-1].push(r)}_createPolygonGeometry(e){return{type:"polygon",rings:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createPolylineGeometry(e){return{type:"polyline",paths:[[]],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_createMultipointGeometry(e){return{type:"multipoint",points:[],spatialReference:e.spatialReference,hasZ:!!e.hasZ,hasM:!!e.hasM}}_dehydratedAddPointsCoordinate(e,t,s){0===s&&0==this._toAddInCurrentPath--&&(e.push([]),this._toAddInCurrentPath=this._lengths[++this._currentLengthIndex]-1,this._previousCoordinate[0]=0,this._previousCoordinate[1]=0);const r=this._transformPathLikeValue(t,s),i=e[e.length-1],n=this._coordinateBuffer;if(n){if(0===s){const e=this._coordinateBufferPtr*Float64Array.BYTES_PER_ELEMENT;i.push(new Float64Array(n.buffer,e,this._vertexDimension))}n[this._coordinateBufferPtr++]=r}}_deriveApplyTransform(e){const{hasZ:t,hasM:s}=e;return t&&s?f:t?d:s?p:c}}var _=s(89122);class g{_parseFeatureQuery(e){var t;const s=new y(e.options),r=(0,_.m)(e.buffer,s),i={...r,spatialReference:null===(t=r.spatialReference)||void 0===t?void 0:t.toJSON(),fields:r.fields?r.fields.map((e=>e.toJSON())):void 0,missingAttributes:s.missingAttributes};return Promise.resolve(i)}}function b(){return new g}}}]);
//# sourceMappingURL=904.c4f4b585.chunk.js.map