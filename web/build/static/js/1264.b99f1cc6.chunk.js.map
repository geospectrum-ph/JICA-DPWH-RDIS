{"version":3,"file":"static/js/1264.b99f1cc6.chunk.js","mappings":"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","sources":["../node_modules/@arcgis/core/views/interactive/snapping/featureSources/sceneLayerSource/sceneLayerSnappingUtils.js","../node_modules/@arcgis/core/views/interactive/snapping/featureSources/sceneLayerSource/SceneLayerSnappingSourceWorker.js"],"sourcesContent":["/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{r as s,p as r,g as o}from\"../../../../../chunks/vec32.js\";import{c,g as n}from\"../../../../../chunks/sphere.js\";const t=1e3;function e(t,e,a){const p=c(),m=n(p);return s(m,m,t,.5),s(m,m,e,.5),p[3]=r(m,t),o(m,m,a),p}export{e as boundsFromEdge,t as maxCandidateCount};\n","/*\nAll material copyright ESRI, All Rights Reserved, unless otherwise specified.\nSee https://js.arcgis.com/4.30/esri/copyright.txt for details.\n*/\nimport{_ as e}from\"../../../../../chunks/tslib.es6.js\";import{throwIfAborted as t}from\"../../../../../core/promiseUtils.js\";import\"../../../../../core/Logger.js\";import\"../../../../../core/has.js\";import\"../../../../../core/RandomLCG.js\";import\"../../../../../core/Error.js\";import{subclass as o}from\"../../../../../core/accessorSupport/decorators/subclass.js\";import{g as s,p as n}from\"../../../../../chunks/vec32.js\";import{create as i,clone as r}from\"../../../../../core/libs/gl-matrix-2/factories/vec3f64.js\";import{create as c,fromPoints as d,projectPoint as a}from\"../../../../../geometry/support/lineSegment.js\";import{g as p,n as m}from\"../../../../../chunks/sphere.js\";import u from\"../../../../3d/webgl-engine/lib/Octree.js\";import{extractComponentsEdgeLocationsLayout as h}from\"../../../../3d/webgl-engine/lib/edgeRendering/edgeProcessing.js\";import{maxCandidateCount as g,boundsFromEdge as l}from\"./sceneLayerSnappingUtils.js\";let f=class{constructor(){this._idToComponent=new Map,this._components=new u((e=>e.bounds)),this._edges=new u((e=>e.bounds)),this._tmpLineSegment=c(),this._tmpP1=i(),this._tmpP2=i(),this._tmpP3=i(),this.remoteClient=null}async fetchCandidates(e,o){await Promise.resolve(),t(o),await this._ensureEdgeLocations(e,o);const s=[];return this._edges.forEachNeighbor((t=>(this._addCandidates(e,t,s),s.length<g)),e.bounds),{result:{candidates:s}}}async _ensureEdgeLocations(e,t){const o=[];if(this._components.forEachNeighbor((e=>{if(null==e.info){const{id:t,uid:s}=e;o.push({id:t,uid:s})}return!0}),e.bounds),!o.length)return;const s={components:o},n=await this.remoteClient.invoke(\"fetchAllEdgeLocations\",s,t??{});for(const i of n.components)this._setFetchEdgeLocations(i)}async add(e){const t=new j(e.id,e.bounds);return this._idToComponent.set(t.id,t),this._components.add([t]),{result:{}}}async remove(e){const t=this._idToComponent.get(e.id);if(t){const e=[];this._edges.forEachNeighbor((o=>(o.component===t&&e.push(o),!0)),t.bounds),this._edges.remove(e),this._components.remove([t]),this._idToComponent.delete(t.id)}return{result:{}}}_setFetchEdgeLocations(e){const t=this._idToComponent.get(e.id);if(null==t||e.uid!==t.uid)return;const o=h.createView(e.locations),s=new Array(o.count),n=i(),r=i();for(let i=0;i<o.count;i++){o.position0.getVec(i,n),o.position1.getVec(i,r);const c=l(n,r,e.origin),d=new w(t,i,c);s[i]=d}this._edges.add(s);const{objectIds:c,origin:d}=e;t.info={locations:o,objectIds:c,origin:d}}_addCandidates(e,t,o){const{info:n}=t.component,{origin:i,objectIds:r}=n,c=n.locations,d=c.position0.getVec(t.index,this._tmpP1),a=c.position1.getVec(t.index,this._tmpP2);s(d,d,i),s(a,a,i);const p=r[c.componentIndex.get(t.index)];this._addEdgeCandidate(e,p,d,a,o),b(e,p,d,o),b(e,p,a,o)}_addEdgeCandidate(e,t,o,s,i){if(!e.returnEdge)return;const c=p(e.bounds),u=d(o,s,this._tmpLineSegment),h=a(u,c,this._tmpP3);m(e.bounds,h)&&i.push({type:\"edge\",objectId:t,target:r(h),distance:n(c,h),start:r(o),end:r(s)})}};f=e([o(\"esri.views.interactive.snapping.featureSources.sceneLayerSource.SceneLayerSnappingSourceWorker\")],f);const _=f;function b(e,t,o,s){if(!e.returnVertex||!m(e.bounds,o))return;const i=p(e.bounds);s.push({type:\"vertex\",objectId:t,target:r(o),distance:n(i,o)})}class j{constructor(e,t){this.id=e,this.bounds=t,this.info=null,this.uid=++j.uid}}j.uid=0;class w{constructor(e,t,o){this.component=e,this.index=t,this.bounds=o}}export{_ as default};\n"],"names":["e","t","a","p","c","m","n","s","r","o","f","constructor","this","_idToComponent","Map","_components","u","bounds","_edges","_tmpLineSegment","_tmpP1","i","_tmpP2","_tmpP3","remoteClient","fetchCandidates","Promise","resolve","_ensureEdgeLocations","forEachNeighbor","_addCandidates","length","result","candidates","info","id","uid","push","components","invoke","_setFetchEdgeLocations","add","j","set","remove","get","component","delete","h","createView","locations","Array","count","position0","getVec","position1","l","origin","d","w","objectIds","index","componentIndex","_addEdgeCandidate","b","returnEdge","type","objectId","target","distance","start","end","_","returnVertex"],"sourceRoot":""}