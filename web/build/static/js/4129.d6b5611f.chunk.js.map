{"version":3,"file":"static/js/4129.d6b5611f.chunk.js","mappings":";0HAQA,MAAMA,EACG,4BADHA,EAES,oCAGTC,EAAW,CACfC,MAAO,GACPC,OAAQ,EACRC,YAAa,GAeFC,EAAyDC,IAIrE,IAJsE,eACrEC,EAAc,IACdC,EAAG,IACHC,GACDH,EACC,MAAM,MAAEJ,EAAK,OAAEC,EAAM,YAAEC,GAAgBH,EACjCS,EAAOR,EAAQ,EACfS,EAAgC,aAAnBJ,EAEbK,EACJ,OAAM,KAAAC,OACDX,GAAO,KAAAW,OACPX,EAAQQ,EAAI,KAAAG,OAAIV,GAAQ,KAAAU,OACxBH,EAAI,KAAAG,OAAIV,EAAM,KAAAU,OAAIH,EAAI,KAAAG,OAAIV,GAC/B,KAEF,OACEW,EAAAA,EAAAA,GAAA,qBACc,OACZC,MAAOf,EACPG,OAAQD,EACRM,IAAKA,EACLC,IAAKA,EACLO,QAAO,OAAAH,OAASX,EAAK,KAAAW,OAAIX,GAAUS,EAA2B,EAAdP,IAChDF,MAAOA,GAASS,EAAaP,EAAc,IAE1CA,EAAc,IACbU,EAAAA,EAAAA,GAAA,QACEC,MAAOf,EACPiB,EAAGL,EACHM,KAAK,OAAM,eAEGd,EAAc,KAKhCU,EAAAA,EAAAA,GAAA,QAAMG,EAAGL,EAAQO,OAAO,SACpB,4FClEV,MAAAC,EAFkC,iBAAVC,QAAsBA,QAAUA,OAAOC,SAAWA,QAAUD,OCEpF,IAAIE,EAA0B,iBAARC,MAAoBA,MAAQA,KAAKF,SAAWA,QAAUE,KAK5E,MAAAC,EAFWL,GAAcG,GAAYG,SAAS,cAATA,GCDrC,MAAAC,EAFaF,EAAKG,OCAlB,IAAIC,EAAcP,OAAOQ,UAGrBC,EAAiBF,EAAYE,eAO7BC,EAAuBH,EAAYI,SAGnCC,EAAiBP,EAASA,EAAOQ,iBAAcC,ECfnD,IAOIC,EAPcf,OAAOQ,UAOcG,SCHvC,IAAIK,EAAU,gBACVC,EAAe,qBAGfC,EAAiBb,EAASA,EAAOQ,iBAAcC,EASnD,SAASK,EAAWC,GAClB,OAAa,MAATA,OACeN,IAAVM,EAAsBH,EAAeD,EAEtCE,GAAkBA,KAAkBlB,OAAOoB,GFGrD,SAAmBA,GACjB,IAAIC,EAAQZ,EAAea,KAAKF,EAAOR,GACnCW,EAAMH,EAAMR,GAEhB,IACEQ,EAAMR,QAAkBE,EACxB,IAAIU,GAAW,CACnB,CAAI,MAAOC,GAAI,CAEb,IAAIC,EAAShB,EAAqBY,KAAKF,GAQvC,OAPII,IACEH,EACFD,EAAMR,GAAkBW,SAEjBH,EAAMR,IAGVc,CACT,CEpBMC,CAAUP,GDNhB,SAAwBA,GACtB,OAAOL,EAAqBO,KAAKF,EACnC,CCKMQ,CAAeR,EACrB,CCDA,SAASS,EAAaT,GACpB,OAAgB,MAATA,GAAiC,iBAATA,CACjC,CCtBA,IAAIU,EAAY,kBAmBhB,SAASC,EAASX,GAChB,MAAuB,iBAATA,GACXS,EAAaT,IAAUD,EAAWC,IAAUU,CACjD,CCzBA,IAAIE,EAAe,KCEnB,IAAIC,EAAc,OASlB,SAASC,EAASC,GAChB,OAAOA,EACHA,EAAOC,MAAM,EDHnB,SAAyBD,GAGvB,IAFA,IAAIE,EAAQF,EAAOG,OAEZD,KAAWL,EAAaO,KAAKJ,EAAOK,OAAOH,MAClD,OAAOA,CACT,CCFsBI,CAAgBN,GAAU,GAAGO,QAAQT,EAAa,IAClEE,CACN,CCSA,SAASQ,EAASvB,GAChB,IAAIwB,SAAcxB,EAClB,OAAgB,MAATA,IAA0B,UAARwB,GAA4B,YAARA,EAC/C,CCvBA,IAAIC,EAAM,IAGNC,EAAa,qBAGbC,EAAa,aAGbC,EAAY,cAGZC,EAAeC,SAyBnB,SAASC,EAAS/B,GAChB,GAAoB,iBAATA,EACT,OAAOA,EAET,GAAIW,EAASX,GACX,OAAOyB,EAET,GAAIF,EAASvB,GAAQ,CACnB,IAAIgC,EAAgC,mBAAjBhC,EAAMiC,QAAwBjC,EAAMiC,UAAYjC,EACnEA,EAAQuB,EAASS,GAAUA,EAAQ,GAAMA,CAC7C,CACE,GAAoB,iBAAThC,EACT,OAAiB,IAAVA,EAAcA,GAASA,EAEhCA,EAAQc,EAASd,GACjB,IAAIkC,EAAWP,EAAWR,KAAKnB,GAC/B,OAAQkC,GAAYN,EAAUT,KAAKnB,GAC/B6B,EAAa7B,EAAMgB,MAAM,GAAIkB,EAAW,EAAI,GAC3CR,EAAWP,KAAKnB,GAASyB,GAAOzB,CACvC,CCvCA,MAAAmC,EAJU,WACR,OAAOpD,EAAKqD,KAAKC,KACnB,ECfA,IAAIC,EAAkB,sBAGlBC,EAAYC,KAAKC,IACjBC,EAAYF,KAAKG,IAwDrB,SAASC,EAASC,EAAMC,EAAMC,GAC5B,IAAIC,EACAC,EACAC,EACA5C,EACA6C,EACAC,EACAC,EAAiB,EACjBC,GAAU,EACVC,GAAS,EACTC,GAAW,EAEf,GAAmB,mBAARX,EACT,MAAM,IAAIY,UAAUnB,GAUtB,SAASoB,EAAWC,GAClB,IAAIC,EAAOZ,EACPa,EAAUZ,EAKd,OAHAD,EAAWC,OAAWvD,EACtB2D,EAAiBM,EACjBrD,EAASuC,EAAKiB,MAAMD,EAASD,EAEjC,CAqBE,SAASG,EAAaJ,GACpB,IAAIK,EAAoBL,EAAOP,EAM/B,YAAyB1D,IAAjB0D,GAA+BY,GAAqBlB,GACzDkB,EAAoB,GAAOT,GANJI,EAAON,GAM8BH,CACnE,CAEE,SAASe,IACP,IAAIN,EAAOxB,IACX,GAAI4B,EAAaJ,GACf,OAAOO,EAAaP,GAGtBR,EAAUgB,WAAWF,EA3BvB,SAAuBN,GACrB,IAEIS,EAActB,GAFMa,EAAOP,GAI/B,OAAOG,EACHb,EAAU0B,EAAalB,GAJDS,EAAON,IAK7Be,CACR,CAmBuCC,CAAcV,GACrD,CAEE,SAASO,EAAaP,GAKpB,OAJAR,OAAUzD,EAIN8D,GAAYR,EACPU,EAAWC,IAEpBX,EAAWC,OAAWvD,EACfY,EACX,CAcE,SAASgE,IACP,IAAIX,EAAOxB,IACPoC,EAAaR,EAAaJ,GAM9B,GAJAX,EAAWwB,UACXvB,EAAWwB,KACXrB,EAAeO,EAEXY,EAAY,CACd,QAAgB7E,IAAZyD,EACF,OAzEN,SAAqBQ,GAMnB,OAJAN,EAAiBM,EAEjBR,EAAUgB,WAAWF,EAAcnB,GAE5BQ,EAAUI,EAAWC,GAAQrD,CACxC,CAkEeoE,CAAYtB,GAErB,GAAIG,EAIF,OAFAoB,aAAaxB,GACbA,EAAUgB,WAAWF,EAAcnB,GAC5BY,EAAWN,EAE1B,CAII,YAHgB1D,IAAZyD,IACFA,EAAUgB,WAAWF,EAAcnB,IAE9BxC,CACX,CAGE,OA3GAwC,EAAOf,EAASe,IAAS,EACrBvB,EAASwB,KACXO,IAAYP,EAAQO,QAEpBJ,GADAK,EAAS,YAAaR,GACHR,EAAUR,EAASgB,EAAQG,UAAY,EAAGJ,GAAQI,EACrEM,EAAW,aAAcT,IAAYA,EAAQS,SAAWA,GAoG1Dc,EAAUM,OApCV,gBACkBlF,IAAZyD,GACFwB,aAAaxB,GAEfE,EAAiB,EACjBL,EAAWI,EAAeH,EAAWE,OAAUzD,CACnD,EA+BE4E,EAAUO,MA7BV,WACE,YAAmBnF,IAAZyD,EAAwB7C,EAAS4D,EAAa/B,IACzD,EA4BSmC,CACT,kICvLA,MAAMQ,EAAQ,CAAC,MAAO,QAAS,SAAU,QACnCC,EAAa,CAAC,QAAS,OACvBC,EAA0BF,EAAMG,QAAO,CAACC,EAAKC,IAASD,EAAI/G,OAAOgH,EAAMA,EAAO,IAAMJ,EAAW,GAAII,EAAO,IAAMJ,EAAW,KAAK,IAChIpC,EAAMH,KAAKG,IACXF,EAAMD,KAAKC,IACX2C,EAAQ5C,KAAK4C,MACbC,EAAQ7C,KAAK6C,MACbC,EAAeC,IAAK,CACxBC,EAAGD,EACHE,EAAGF,IAECG,EAAkB,CACtBC,KAAM,QACNC,MAAO,OACPC,OAAQ,MACRC,IAAK,UAEDC,EAAuB,CAC3BC,MAAO,MACPC,IAAK,SAEP,SAASC,EAAMF,EAAOhG,EAAOiG,GAC3B,OAAOxD,EAAIuD,EAAOrD,EAAI3C,EAAOiG,GAC/B,CACA,SAASE,EAASnG,EAAOoG,GACvB,MAAwB,oBAAVpG,EAAuBA,EAAMoG,GAASpG,CACtD,CACA,SAASqG,EAAQC,GACf,OAAOA,EAAUC,MAAM,KAAK,EAC9B,CACA,SAASC,EAAaF,GACpB,OAAOA,EAAUC,MAAM,KAAK,EAC9B,CACA,SAASE,EAAgBC,GACvB,MAAgB,MAATA,EAAe,IAAM,GAC9B,CACA,SAASC,EAAcD,GACrB,MAAgB,MAATA,EAAe,SAAW,OACnC,CACA,SAASE,EAAYN,GACnB,MAAO,CAAC,MAAO,UAAUO,SAASR,EAAQC,IAAc,IAAM,GAChE,CACA,SAASQ,EAAiBR,GACxB,OAAOG,EAAgBG,EAAYN,GACrC,CACA,SAASS,EAAkBT,EAAWU,EAAOC,QAC/B,IAARA,IACFA,GAAM,GAER,MAAMC,EAAYV,EAAaF,GACzBa,EAAgBL,EAAiBR,GACjCpF,EAASyF,EAAcQ,GAC7B,IAAIC,EAAsC,MAAlBD,EAAwBD,KAAeD,EAAM,MAAQ,SAAW,QAAU,OAAuB,UAAdC,EAAwB,SAAW,MAI9I,OAHIF,EAAMK,UAAUnG,GAAU8F,EAAMM,SAASpG,KAC3CkG,EAAoBG,EAAqBH,IAEpC,CAACA,EAAmBG,EAAqBH,GAClD,CAKA,SAASI,EAA8BlB,GACrC,OAAOA,EAAUhF,QAAQ,cAAc4F,GAAanB,EAAqBmB,IAC3E,CA6BA,SAASK,EAAqBjB,GAC5B,OAAOA,EAAUhF,QAAQ,0BAA0B6D,GAAQO,EAAgBP,IAC7E,CAUA,SAASsC,EAAiBC,GACxB,MAA0B,kBAAZA,EAVhB,SAA6BA,GAC3B,MAAO,CACL5B,IAAK,EACLF,MAAO,EACPC,OAAQ,EACRF,KAAM,KACH+B,EAEP,CAEuCC,CAAoBD,GAAW,CAClE5B,IAAK4B,EACL9B,MAAO8B,EACP7B,OAAQ6B,EACR/B,KAAM+B,EAEV,CACA,SAASE,EAAiBC,GACxB,MAAM,EACJrC,EAAC,EACDC,EAAC,MACDjI,EAAK,OACLC,GACEoK,EACJ,MAAO,CACLrK,QACAC,SACAqI,IAAKL,EACLE,KAAMH,EACNI,MAAOJ,EAAIhI,EACXqI,OAAQJ,EAAIhI,EACZ+H,IACAC,IAEJ,CCpIA,SAASqC,EAA2BlK,EAAM0I,EAAWW,GACnD,IAAI,UACFI,EAAS,SACTC,GACE1J,EACJ,MAAMmK,EAAWnB,EAAYN,GACvBa,EAAgBL,EAAiBR,GACjC0B,EAAcrB,EAAcQ,GAC5BhC,EAAOkB,EAAQC,GACfrI,EAA0B,MAAb8J,EACbE,EAAUZ,EAAU7B,EAAI6B,EAAU7J,MAAQ,EAAI8J,EAAS9J,MAAQ,EAC/D0K,EAAUb,EAAU5B,EAAI4B,EAAU5J,OAAS,EAAI6J,EAAS7J,OAAS,EACjE0K,EAAcd,EAAUW,GAAe,EAAIV,EAASU,GAAe,EACzE,IAAII,EACJ,OAAQjD,GACN,IAAK,MACHiD,EAAS,CACP5C,EAAGyC,EACHxC,EAAG4B,EAAU5B,EAAI6B,EAAS7J,QAE5B,MACF,IAAK,SACH2K,EAAS,CACP5C,EAAGyC,EACHxC,EAAG4B,EAAU5B,EAAI4B,EAAU5J,QAE7B,MACF,IAAK,QACH2K,EAAS,CACP5C,EAAG6B,EAAU7B,EAAI6B,EAAU7J,MAC3BiI,EAAGyC,GAEL,MACF,IAAK,OACHE,EAAS,CACP5C,EAAG6B,EAAU7B,EAAI8B,EAAS9J,MAC1BiI,EAAGyC,GAEL,MACF,QACEE,EAAS,CACP5C,EAAG6B,EAAU7B,EACbC,EAAG4B,EAAU5B,GAGnB,OAAQe,EAAaF,IACnB,IAAK,QACH8B,EAAOjB,IAAkBgB,GAAelB,GAAOhJ,GAAc,EAAI,GACjE,MACF,IAAK,MACHmK,EAAOjB,IAAkBgB,GAAelB,GAAOhJ,GAAc,EAAI,GAGrE,OAAOmK,CACT,CAqGAC,eAAeC,EAAeC,EAAOxF,GACnC,IAAIyF,OACY,IAAZzF,IACFA,EAAU,CAAC,GAEb,MAAM,EACJyC,EAAC,EACDC,EAAC,SACDgD,EAAQ,MACRzB,EAAK,SACL0B,EAAQ,SACRC,GACEJ,GACE,SACJK,EAAW,oBAAmB,aAC9BC,EAAe,WAAU,eACzBC,EAAiB,WAAU,YAC3BC,GAAc,EAAK,QACnBrB,EAAU,GACRvB,EAASpD,EAASwF,GAChBS,EAAgBvB,EAAiBC,GAEjCuB,EAAUP,EAASK,EADa,aAAnBD,EAAgC,YAAc,WACbA,GAC9CI,EAAqBtB,QAAuBa,EAASU,gBAAgB,CACzEF,QAAiH,OAAtGT,QAAqD,MAAtBC,EAASW,eAAoB,EAASX,EAASW,UAAUH,MAAqBT,EAAgCS,EAAUA,EAAQI,sBAAyD,MAA/BZ,EAASa,wBAA6B,EAASb,EAASa,mBAAmBZ,EAASpB,WACxRsB,WACAC,eACAF,cAEId,EAA0B,aAAnBiB,EAAgC,CAC3CtD,IACAC,IACAjI,MAAOwJ,EAAMM,SAAS9J,MACtBC,OAAQuJ,EAAMM,SAAS7J,QACrBuJ,EAAMK,UACJkC,QAAkD,MAA5Bd,EAASe,qBAA0B,EAASf,EAASe,gBAAgBd,EAASpB,WACpGmC,QAA4C,MAAtBhB,EAASW,eAAoB,EAASX,EAASW,UAAUG,WAA+C,MAArBd,EAASiB,cAAmB,EAASjB,EAASiB,SAASH,KAGlK,CACF/D,EAAG,EACHC,EAAG,GAECkE,EAAoB/B,EAAiBa,EAASmB,4DAA8DnB,EAASmB,sDAAsD,CAC/KlB,WACAb,OACA0B,eACAZ,aACGd,GACL,MAAO,CACL/B,KAAMoD,EAAmBpD,IAAM6D,EAAkB7D,IAAMkD,EAAclD,KAAO2D,EAAYhE,EACxFI,QAAS8D,EAAkB9D,OAASqD,EAAmBrD,OAASmD,EAAcnD,QAAU4D,EAAYhE,EACpGE,MAAOuD,EAAmBvD,KAAOgE,EAAkBhE,KAAOqD,EAAcrD,MAAQ8D,EAAYjE,EAC5FI,OAAQ+D,EAAkB/D,MAAQsD,EAAmBtD,MAAQoD,EAAcpD,OAAS6D,EAAYjE,EAEpG,CA8SA,SAASqE,EAAeC,EAAUjC,GAChC,MAAO,CACL/B,IAAKgE,EAAShE,IAAM+B,EAAKpK,OACzBmI,MAAOkE,EAASlE,MAAQiC,EAAKrK,MAC7BqI,OAAQiE,EAASjE,OAASgC,EAAKpK,OAC/BkI,KAAMmE,EAASnE,KAAOkC,EAAKrK,MAE/B,CACA,SAASuM,EAAsBD,GAC7B,OAAOhF,EAAMkF,MAAK7E,GAAQ2E,EAAS3E,IAAS,GAC9C,CC7gBA,SAAS8E,EAAYC,GACnB,OAAIC,EAAOD,IACDA,EAAKE,UAAY,IAAIC,cAKxB,WACT,CACA,SAASC,EAAUJ,GACjB,IAAIK,EACJ,OAAgB,MAARL,GAA8D,OAA7CK,EAAsBL,EAAKM,oBAAyB,EAASD,EAAoBE,cAAgBC,MAC5H,CACA,SAASpB,EAAmBY,GAC1B,IAAItM,EACJ,OAA0F,OAAlFA,GAAQuM,EAAOD,GAAQA,EAAKM,cAAgBN,EAAKS,WAAaD,OAAOC,eAAoB,EAAS/M,EAAKgN,eACjH,CACA,SAAST,EAAOnK,GACd,OAAOA,aAAiB6K,MAAQ7K,aAAiBsK,EAAUtK,GAAO6K,IACpE,CACA,SAASzB,EAAUpJ,GACjB,OAAOA,aAAiB8K,SAAW9K,aAAiBsK,EAAUtK,GAAO8K,OACvE,CACA,SAASC,EAAc/K,GACrB,OAAOA,aAAiBgL,aAAehL,aAAiBsK,EAAUtK,GAAOgL,WAC3E,CACA,SAASC,EAAajL,GAEpB,MAA0B,qBAAfkL,aAGJlL,aAAiBkL,YAAclL,aAAiBsK,EAAUtK,GAAOkL,WAC1E,CACA,SAASC,EAAkBlC,GACzB,MAAM,SACJa,EAAQ,UACRsB,EAAS,UACTC,EAAS,QACTC,GACEC,EAAiBtC,GACrB,MAAO,kCAAkC9H,KAAK2I,EAAWuB,EAAYD,KAAe,CAAC,SAAU,YAAYvE,SAASyE,EACtH,CACA,SAASE,EAAevC,GACtB,MAAO,CAAC,QAAS,KAAM,MAAMpC,SAASoD,EAAYhB,GACpD,CACA,SAASwC,EAAWxC,GAClB,MAAO,CAAC,gBAAiB,UAAUe,MAAK0B,IACtC,IACE,OAAOzC,EAAQ0C,QAAQD,EAC7B,CAAM,MAAOrL,GACP,OAAO,CACb,IAEA,CACA,SAASuL,EAAkBC,GACzB,MAAMC,EAASC,IACTC,EAAM5C,EAAUyC,GAAgBN,EAAiBM,GAAgBA,EAGvE,MAAyB,SAAlBG,EAAIC,WAA4C,SAApBD,EAAIE,eAA2BF,EAAIG,eAAsC,WAAtBH,EAAIG,gBAAwCL,KAAWE,EAAII,gBAAwC,SAAvBJ,EAAII,iBAAuCN,KAAWE,EAAIK,QAAwB,SAAfL,EAAIK,QAA8B,CAAC,YAAa,cAAe,UAAUrC,MAAKhK,IAAUgM,EAAIM,YAAc,IAAIzF,SAAS7G,MAAW,CAAC,QAAS,SAAU,SAAU,WAAWgK,MAAKhK,IAAUgM,EAAIO,SAAW,IAAI1F,SAAS7G,IAC7b,CAaA,SAAS+L,IACP,QAAmB,qBAARzO,MAAwBA,IAAIkP,WAChClP,IAAIkP,SAAS,0BAA2B,OACjD,CACA,SAASC,EAAsBvC,GAC7B,MAAO,CAAC,OAAQ,OAAQ,aAAarD,SAASoD,EAAYC,GAC5D,CACA,SAASqB,EAAiBtC,GACxB,OAAOqB,EAAUrB,GAASyD,iBAAiBzD,EAC7C,CACA,SAAS0D,EAAc1D,GACrB,OAAIG,EAAUH,GACL,CACL2D,WAAY3D,EAAQ2D,WACpBC,UAAW5D,EAAQ4D,WAGhB,CACLD,WAAY3D,EAAQ6D,QACpBD,UAAW5D,EAAQ8D,QAEvB,CACA,SAASC,EAAc9C,GACrB,GAA0B,SAAtBD,EAAYC,GACd,OAAOA,EAET,MAAM5J,EAEN4J,EAAK+C,cAEL/C,EAAKgD,YAELjC,EAAaf,IAASA,EAAKiD,MAE3B7D,EAAmBY,GACnB,OAAOe,EAAa3K,GAAUA,EAAO6M,KAAO7M,CAC9C,CACA,SAAS8M,EAA2BlD,GAClC,MAAMgD,EAAaF,EAAc9C,GACjC,OAAIuC,EAAsBS,GACjBhD,EAAKM,cAAgBN,EAAKM,cAAc6C,KAAOnD,EAAKmD,KAEzDtC,EAAcmC,IAAe/B,EAAkB+B,GAC1CA,EAEFE,EAA2BF,EACpC,CACA,SAASI,EAAqBpD,EAAMqD,EAAMC,GACxC,IAAIC,OACS,IAATF,IACFA,EAAO,SAEe,IAApBC,IACFA,GAAkB,GAEpB,MAAME,EAAqBN,EAA2BlD,GAChDyD,EAASD,KAAuE,OAA9CD,EAAuBvD,EAAKM,oBAAyB,EAASiD,EAAqBJ,MACrHO,EAAMtD,EAAUoD,GACtB,OAAIC,EACKJ,EAAKpP,OAAOyP,EAAKA,EAAIC,gBAAkB,GAAI1C,EAAkBuC,GAAsBA,EAAqB,GAAIE,EAAIE,cAAgBN,EAAkBF,EAAqBM,EAAIE,cAAgB,IAE7LP,EAAKpP,OAAOuP,EAAoBJ,EAAqBI,EAAoB,GAAIF,GACtF,CClIA,SAASO,EAAiB9E,GACxB,MAAM+C,EAAMT,EAAiBtC,GAG7B,IAAIzL,EAAQwQ,WAAWhC,EAAIxO,QAAU,EACjCC,EAASuQ,WAAWhC,EAAIvO,SAAW,EACvC,MAAMwQ,EAAYlD,EAAc9B,GAC1BiF,EAAcD,EAAYhF,EAAQiF,YAAc1Q,EAChD2Q,EAAeF,EAAYhF,EAAQkF,aAAe1Q,EAClD2Q,EAAiBhJ,EAAM5H,KAAW0Q,GAAe9I,EAAM3H,KAAY0Q,EAKzE,OAJIC,IACF5Q,EAAQ0Q,EACRzQ,EAAS0Q,GAEJ,CACL3Q,QACAC,SACA4Q,EAAGD,EAEP,CAEA,SAASE,EAAcrF,GACrB,OAAQG,EAAUH,GAAoCA,EAAzBA,EAAQI,cACvC,CAEA,SAASK,GAAST,GAChB,MAAMsF,EAAaD,EAAcrF,GACjC,IAAK8B,EAAcwD,GACjB,OAAOjJ,EAAa,GAEtB,MAAMuC,EAAO0G,EAAWC,yBAClB,MACJhR,EAAK,OACLC,EAAM,EACN4Q,GACEN,EAAiBQ,GACrB,IAAI/I,GAAK6I,EAAIjJ,EAAMyC,EAAKrK,OAASqK,EAAKrK,OAASA,EAC3CiI,GAAK4I,EAAIjJ,EAAMyC,EAAKpK,QAAUoK,EAAKpK,QAAUA,EAUjD,OANK+H,GAAMiJ,OAAOC,SAASlJ,KACzBA,EAAI,GAEDC,GAAMgJ,OAAOC,SAASjJ,KACzBA,EAAI,GAEC,CACLD,IACAC,IAEJ,CAEA,MAAMkJ,GAAyBrJ,EAAa,GAC5C,SAASsJ,GAAiB3F,GACxB,MAAM2E,EAAMtD,EAAUrB,GACtB,OAAK8C,KAAe6B,EAAIC,eAGjB,CACLrI,EAAGoI,EAAIC,eAAegB,WACtBpJ,EAAGmI,EAAIC,eAAeiB,WAJfH,EAMX,CAWA,SAASH,GAAsBvF,EAAS8F,EAAcC,EAAiBzF,QAChD,IAAjBwF,IACFA,GAAe,QAEO,IAApBC,IACFA,GAAkB,GAEpB,MAAMC,EAAahG,EAAQuF,wBACrBD,EAAaD,EAAcrF,GACjC,IAAIiG,EAAQ5J,EAAa,GACrByJ,IACExF,EACEH,EAAUG,KACZ2F,EAAQxF,GAASH,IAGnB2F,EAAQxF,GAAST,IAGrB,MAAMkG,EA7BR,SAAgClG,EAASmG,EAASC,GAIhD,YAHgB,IAAZD,IACFA,GAAU,MAEPC,GAAwBD,GAAWC,IAAyB/E,EAAUrB,KAGpEmG,CACT,CAqBwBE,CAAuBf,EAAYS,EAAiBzF,GAAgBqF,GAAiBL,GAAcjJ,EAAa,GACtI,IAAIE,GAAKyJ,EAAWtJ,KAAOwJ,EAAc3J,GAAK0J,EAAM1J,EAChDC,GAAKwJ,EAAWnJ,IAAMqJ,EAAc1J,GAAKyJ,EAAMzJ,EAC/CjI,EAAQyR,EAAWzR,MAAQ0R,EAAM1J,EACjC/H,EAASwR,EAAWxR,OAASyR,EAAMzJ,EACvC,GAAI8I,EAAY,CACd,MAAMX,EAAMtD,EAAUiE,GAChBgB,EAAYhG,GAAgBH,EAAUG,GAAgBe,EAAUf,GAAgBA,EACtF,IAAIiG,EAAa5B,EACb6B,EAAgBD,EAAW1B,aAC/B,KAAO2B,GAAiBlG,GAAgBgG,IAAcC,GAAY,CAChE,MAAME,EAAchG,GAAS+F,GACvBE,EAAaF,EAAcjB,wBAC3BxC,EAAMT,EAAiBkE,GACvB9J,EAAOgK,EAAWhK,MAAQ8J,EAAcG,WAAa5B,WAAWhC,EAAI6D,cAAgBH,EAAYlK,EAChGM,EAAM6J,EAAW7J,KAAO2J,EAAcK,UAAY9B,WAAWhC,EAAI+D,aAAeL,EAAYjK,EAClGD,GAAKkK,EAAYlK,EACjBC,GAAKiK,EAAYjK,EACjBjI,GAASkS,EAAYlK,EACrB/H,GAAUiS,EAAYjK,EACtBD,GAAKG,EACLF,GAAKK,EACL0J,EAAalF,EAAUmF,GACvBA,EAAgBD,EAAW1B,YACjC,CACA,CACE,OAAOlG,EAAiB,CACtBpK,QACAC,SACA+H,IACAC,KAEJ,CA6CA,SAASuK,GAAoB/G,GAG3B,OAAOuF,GAAsBlF,EAAmBL,IAAUtD,KAAOgH,EAAc1D,GAAS2D,UAC1F,CAiEA,SAASqD,GAAkChH,EAASiH,EAAkBvH,GACpE,IAAId,EACJ,GAAyB,aAArBqI,EACFrI,EA7CJ,SAAyBoB,EAASN,GAChC,MAAMiF,EAAMtD,EAAUrB,GAChBkH,EAAO7G,EAAmBL,GAC1B4E,EAAiBD,EAAIC,eAC3B,IAAIrQ,EAAQ2S,EAAKC,YACb3S,EAAS0S,EAAKE,aACd7K,EAAI,EACJC,EAAI,EACR,GAAIoI,EAAgB,CAClBrQ,EAAQqQ,EAAerQ,MACvBC,EAASoQ,EAAepQ,OACxB,MAAM6S,EAAsBvE,MACvBuE,GAAuBA,GAAoC,UAAb3H,KACjDnD,EAAIqI,EAAegB,WACnBpJ,EAAIoI,EAAeiB,UAEzB,CACE,MAAO,CACLtR,QACAC,SACA+H,IACAC,IAEJ,CAsBW8K,CAAgBtH,EAASN,QAC3B,GAAyB,aAArBuH,EACTrI,EAlEJ,SAAyBoB,GACvB,MAAMkH,EAAO7G,EAAmBL,GAC1BuH,EAAS7D,EAAc1D,GACvBoE,EAAOpE,EAAQuB,cAAc6C,KAC7B7P,EAAQiF,EAAI0N,EAAKM,YAAaN,EAAKC,YAAa/C,EAAKoD,YAAapD,EAAK+C,aACvE3S,EAASgF,EAAI0N,EAAKO,aAAcP,EAAKE,aAAchD,EAAKqD,aAAcrD,EAAKgD,cACjF,IAAI7K,GAAKgL,EAAO5D,WAAaoD,GAAoB/G,GACjD,MAAMxD,GAAK+K,EAAO3D,UAIlB,MAHyC,QAArCtB,EAAiB8B,GAAMsD,YACzBnL,GAAK/C,EAAI0N,EAAKC,YAAa/C,EAAK+C,aAAe5S,GAE1C,CACLA,QACAC,SACA+H,IACAC,IAEJ,CAiDWmL,CAAgBtH,EAAmBL,SACrC,GAAIG,EAAU8G,GACnBrI,EAvBJ,SAAoCoB,EAASN,GAC3C,MAAMsG,EAAaT,GAAsBvF,GAAS,EAAmB,UAAbN,GAClD7C,EAAMmJ,EAAWnJ,IAAMmD,EAAQ6G,UAC/BnK,EAAOsJ,EAAWtJ,KAAOsD,EAAQ2G,WACjCV,EAAQnE,EAAc9B,GAAWS,GAAST,GAAW3D,EAAa,GAKxE,MAAO,CACL9H,MALYyL,EAAQmH,YAAclB,EAAM1J,EAMxC/H,OALawL,EAAQoH,aAAenB,EAAMzJ,EAM1CD,EALQG,EAAOuJ,EAAM1J,EAMrBC,EALQK,EAAMoJ,EAAMzJ,EAOxB,CAQWoL,CAA2BX,EAAkBvH,OAC/C,CACL,MAAMwG,EAAgBP,GAAiB3F,GACvCpB,EAAO,IACFqI,EACH1K,EAAG0K,EAAiB1K,EAAI2J,EAAc3J,EACtCC,EAAGyK,EAAiBzK,EAAI0J,EAAc1J,EAE5C,CACE,OAAOmC,EAAiBC,EAC1B,CACA,SAASiJ,GAAyB7H,EAAS8H,GACzC,MAAM7D,EAAaF,EAAc/D,GACjC,QAAIiE,IAAe6D,IAAa3H,EAAU8D,IAAeT,EAAsBS,MAG9B,UAA1C3B,EAAiB2B,GAAY8D,UAAwBF,GAAyB5D,EAAY6D,GACnG,CA2EA,SAASE,GAA8BhI,EAASM,EAAcZ,GAC5D,MAAMuI,EAA0BnG,EAAcxB,GACxCqB,EAAkBtB,EAAmBC,GACrC6F,EAAuB,UAAbzG,EACVd,EAAO2G,GAAsBvF,GAAS,EAAMmG,EAAS7F,GAC3D,IAAIiH,EAAS,CACX5D,WAAY,EACZC,UAAW,GAEb,MAAMsE,EAAU7L,EAAa,GAC7B,GAAI4L,IAA4BA,IAA4B9B,EAI1D,IAHkC,SAA9BnF,EAAYV,IAA4B4B,EAAkBP,MAC5D4F,EAAS7D,EAAcpD,IAErB2H,EAAyB,CAC3B,MAAME,EAAa5C,GAAsBjF,GAAc,EAAM6F,EAAS7F,GACtE4H,EAAQ3L,EAAI4L,EAAW5L,EAAI+D,EAAaqG,WACxCuB,EAAQ1L,EAAI2L,EAAW3L,EAAI8D,EAAauG,SAC9C,MAAelF,IACTuG,EAAQ3L,EAAIwK,GAAoBpF,IAKpC,MAAO,CACLpF,EAHQqC,EAAKlC,KAAO6K,EAAO5D,WAAauE,EAAQ3L,EAIhDC,EAHQoC,EAAK/B,IAAM0K,EAAO3D,UAAYsE,EAAQ1L,EAI9CjI,MAAOqK,EAAKrK,MACZC,OAAQoK,EAAKpK,OAEjB,CAEA,SAAS4T,GAAmBpI,GAC1B,MAA8C,WAAvCsC,EAAiBtC,GAAS+H,QACnC,CAEA,SAASM,GAAoBrI,EAASsI,GACpC,OAAKxG,EAAc9B,IAAmD,UAAvCsC,EAAiBtC,GAAS+H,SAGrDO,EACKA,EAAStI,GAEXA,EAAQM,aALN,IAMX,CAIA,SAASC,GAAgBP,EAASsI,GAChC,MAAM3D,EAAMtD,EAAUrB,GACtB,GAAIwC,EAAWxC,GACb,OAAO2E,EAET,IAAK7C,EAAc9B,GAAU,CAC3B,IAAIuI,EAAkBxE,EAAc/D,GACpC,KAAOuI,IAAoB/E,EAAsB+E,IAAkB,CACjE,GAAIpI,EAAUoI,KAAqBH,GAAmBG,GACpD,OAAOA,EAETA,EAAkBxE,EAAcwE,EACtC,CACI,OAAO5D,CACX,CACE,IAAIrE,EAAe+H,GAAoBrI,EAASsI,GAChD,KAAOhI,GAAgBiC,EAAejC,IAAiB8H,GAAmB9H,IACxEA,EAAe+H,GAAoB/H,EAAcgI,GAEnD,OAAIhI,GAAgBkD,EAAsBlD,IAAiB8H,GAAmB9H,KAAkBqC,EAAkBrC,GACzGqE,EAEFrE,GDhWT,SAA4BN,GAC1B,IAAIwI,EAAczE,EAAc/D,GAChC,KAAO8B,EAAc0G,KAAiBhF,EAAsBgF,IAAc,CACxE,GAAI7F,EAAkB6F,GACpB,OAAOA,EACF,GAAIhG,EAAWgG,GACpB,OAAO,KAETA,EAAczE,EAAcyE,EAChC,CACE,OAAO,IACT,CCqVyBC,CAAmBzI,IAAY2E,CACxD,CAqBA,MAAMnF,GAAW,CACfmB,sDAhTF,SAA+DhM,GAC7D,IAAI,SACF8K,EAAQ,KACRb,EAAI,aACJ0B,EAAY,SACZZ,GACE/K,EACJ,MAAMwR,EAAuB,UAAbzG,EACViC,EAAkBtB,EAAmBC,GACrCoI,IAAWjJ,GAAW+C,EAAW/C,EAASpB,UAChD,GAAIiC,IAAiBqB,GAAmB+G,GAAYvC,EAClD,OAAOvH,EAET,IAAI2I,EAAS,CACX5D,WAAY,EACZC,UAAW,GAETqC,EAAQ5J,EAAa,GACzB,MAAM6L,EAAU7L,EAAa,GACvB4L,EAA0BnG,EAAcxB,GAC9C,IAAI2H,IAA4BA,IAA4B9B,MACxB,SAA9BnF,EAAYV,IAA4B4B,EAAkBP,MAC5D4F,EAAS7D,EAAcpD,IAErBwB,EAAcxB,IAAe,CAC/B,MAAM6H,EAAa5C,GAAsBjF,GACzC2F,EAAQxF,GAASH,GACjB4H,EAAQ3L,EAAI4L,EAAW5L,EAAI+D,EAAaqG,WACxCuB,EAAQ1L,EAAI2L,EAAW3L,EAAI8D,EAAauG,SAC9C,CAEE,MAAO,CACLtS,MAAOqK,EAAKrK,MAAQ0R,EAAM1J,EAC1B/H,OAAQoK,EAAKpK,OAASyR,EAAMzJ,EAC5BD,EAAGqC,EAAKrC,EAAI0J,EAAM1J,EAAIgL,EAAO5D,WAAasC,EAAM1J,EAAI2L,EAAQ3L,EAC5DC,EAAGoC,EAAKpC,EAAIyJ,EAAMzJ,EAAI+K,EAAO3D,UAAYqC,EAAMzJ,EAAI0L,EAAQ1L,EAE/D,EA4QE6D,qBACAH,gBApIF,SAAyBvL,GACvB,IAAI,QACFqL,EAAO,SACPL,EAAQ,aACRC,EAAY,SACZF,GACE/K,EACJ,MACMgU,EAAoB,IADoB,sBAAbhJ,EAAmC6C,EAAWxC,GAAW,GAxC5F,SAAqCA,EAAS4I,GAC5C,MAAMC,EAAeD,EAAME,IAAI9I,GAC/B,GAAI6I,EACF,OAAOA,EAET,IAAIxR,EAASgN,EAAqBrE,EAAS,IAAI,GAAOoD,QAAO2F,GAAM5I,EAAU4I,IAA2B,SAApB/H,EAAY+H,KAC5FC,EAAsC,KAC1C,MAAMC,EAAwD,UAAvC3G,EAAiBtC,GAAS+H,SACjD,IAAIS,EAAcS,EAAiBlF,EAAc/D,GAAWA,EAG5D,KAAOG,EAAUqI,KAAiBhF,EAAsBgF,IAAc,CACpE,MAAMU,EAAgB5G,EAAiBkG,GACjCW,EAA0BxG,EAAkB6F,GAC7CW,GAAsD,UAA3BD,EAAcnB,WAC5CiB,EAAsC,OAEVC,GAAkBE,IAA4BH,GAAuCG,GAAsD,WAA3BD,EAAcnB,UAA2BiB,GAAuC,CAAC,WAAY,SAASpL,SAASoL,EAAoCjB,WAAa7F,EAAkBsG,KAAiBW,GAA2BtB,GAAyB7H,EAASwI,IAG5YnR,EAASA,EAAO+L,QAAOgG,GAAYA,IAAaZ,IAGhDQ,EAAsCE,EAExCV,EAAczE,EAAcyE,EAChC,CAEE,OADAI,EAAMS,IAAIrJ,EAAS3I,GACZA,CACT,CAWiGiS,CAA4BtJ,EAASxE,KAAK+N,IAAM,GAAGrU,OAAOyK,GACjGC,GAClD4J,EAAwBb,EAAkB,GAC1Cc,EAAed,EAAkB3M,QAAO,CAAC0N,EAASzC,KACtD,MAAMrI,EAAOoI,GAAkChH,EAASiH,EAAkBvH,GAK1E,OAJAgK,EAAQ7M,IAAMrD,EAAIoF,EAAK/B,IAAK6M,EAAQ7M,KACpC6M,EAAQ/M,MAAQjD,EAAIkF,EAAKjC,MAAO+M,EAAQ/M,OACxC+M,EAAQ9M,OAASlD,EAAIkF,EAAKhC,OAAQ8M,EAAQ9M,QAC1C8M,EAAQhN,KAAOlD,EAAIoF,EAAKlC,KAAMgN,EAAQhN,MAC/BgN,CAAO,GACb1C,GAAkChH,EAASwJ,EAAuB9J,IACrE,MAAO,CACLnL,MAAOkV,EAAa9M,MAAQ8M,EAAa/M,KACzClI,OAAQiV,EAAa7M,OAAS6M,EAAa5M,IAC3CN,EAAGkN,EAAa/M,KAChBF,EAAGiN,EAAa5M,IAEpB,EA6GE0D,mBACAoJ,gBAxBsBvK,eAAgBwK,GACtC,MAAMC,EAAoBrO,KAAK+E,iBAAmBA,GAC5CuJ,EAAkBtO,KAAKuO,cACvBC,QAA2BF,EAAgBF,EAAKvL,UACtD,MAAO,CACLD,UAAW4J,GAA8B4B,EAAKxL,gBAAiByL,EAAkBD,EAAKvL,UAAWuL,EAAKlK,UACtGrB,SAAU,CACR9B,EAAG,EACHC,EAAG,EACHjI,MAAOyV,EAAmBzV,MAC1BC,OAAQwV,EAAmBxV,QAGjC,EAYEyV,eA9QF,SAAwBjK,GACtB,OAAOkK,MAAMC,KAAKnK,EAAQiK,iBAC5B,EA6QEF,cA9GF,SAAuB/J,GACrB,MAAM,MACJzL,EAAK,OACLC,GACEsQ,EAAiB9E,GACrB,MAAO,CACLzL,QACAC,SAEJ,EAsGEiM,YACAN,YACAiK,MAdF,SAAepK,GACb,MAA+C,QAAxCsC,EAAiBtC,GAAS0H,SACnC,GAoGA,SAAS2C,GAAWjM,EAAWC,EAAUiM,EAAQxQ,QAC/B,IAAZA,IACFA,EAAU,CAAC,GAEb,MAAM,eACJyQ,GAAiB,EAAI,eACrBC,GAAiB,EAAI,cACrBC,EAA0C,oBAAnBC,eAA6B,YACpDC,EAA8C,oBAAzBC,qBAAmC,eACxDC,GAAiB,GACf/Q,EACEgR,EAAczF,EAAcjH,GAC5B2M,EAAYR,GAAkBC,EAAiB,IAAKM,EAAczG,EAAqByG,GAAe,MAAQzG,EAAqBhG,IAAa,GACtJ0M,EAAUC,SAAQ5B,IAChBmB,GAAkBnB,EAAS6B,iBAAiB,SAAUX,EAAQ,CAC5DY,SAAS,IAEXV,GAAkBpB,EAAS6B,iBAAiB,SAAUX,EAAO,IAE/D,MAAMa,EAAYL,GAAeH,EAvGnC,SAAqB3K,EAASoL,GAC5B,IACIC,EADAC,EAAK,KAET,MAAMC,EAAOlL,EAAmBL,GAChC,SAASwL,IACP,IAAIC,EACJ/P,aAAa2P,GACC,OAAbI,EAAMH,IAAeG,EAAIC,aAC1BJ,EAAK,IACT,CAgEE,OA/DA,SAASK,EAAQC,EAAMC,QACR,IAATD,IACFA,GAAO,QAES,IAAdC,IACFA,EAAY,GAEdL,IACA,MAAM,KACJ9O,EAAI,IACJG,EAAG,MACHtI,EAAK,OACLC,GACEwL,EAAQuF,wBAIZ,GAHKqG,GACHR,KAEG7W,IAAUC,EACb,OAEF,MAKMsF,EAAU,CACdgS,YANe1P,EAAMS,GAIQ,OAHZT,EAAMmP,EAAKpE,aAAezK,EAAOnI,IAGC,OAFjC6H,EAAMmP,EAAKnE,cAAgBvK,EAAMrI,IAEuB,OAD1D4H,EAAMM,GACyE,KAG/FmP,UAAWrS,EAAI,EAAGE,EAAI,EAAGmS,KAAe,GAE1C,IAAIE,GAAgB,EACpB,SAASC,EAAcC,GACrB,MAAMC,EAAQD,EAAQ,GAAGE,kBACzB,GAAID,IAAUL,EAAW,CACvB,IAAKE,EACH,OAAOJ,IAEJO,EAOHP,GAAQ,EAAOO,GAJfb,EAAYnQ,YAAW,KACrByQ,GAAQ,EAAO,KAAK,GACnB,IAIb,CACMI,GAAgB,CACtB,CAII,IACET,EAAK,IAAIV,qBAAqBoB,EAAe,IACxClS,EAEHyR,KAAMA,EAAKhK,eAEnB,CAAM,MAAOnK,GACPkU,EAAK,IAAIV,qBAAqBoB,EAAelS,EACnD,CACIwR,EAAGc,QAAQpM,EACf,CACE2L,EAAQ,GACDH,CACT,CA6BiDa,CAAYvB,EAAaR,GAAU,KAClF,IAsBIgC,EAtBAC,GAAkB,EAClBC,EAAiB,KACjB/B,IACF+B,EAAiB,IAAI9B,gBAAe/V,IAClC,IAAK8X,GAAc9X,EACf8X,GAAcA,EAAWC,SAAW5B,GAAe0B,IAGrDA,EAAeG,UAAUtO,GACzBuO,qBAAqBL,GACrBA,EAAiBM,uBAAsB,KACrC,IAAIC,EACkC,OAArCA,EAAkBN,IAA2BM,EAAgBV,QAAQ/N,EAAS,KAGnFiM,GAAQ,IAENQ,IAAgBD,GAClB2B,EAAeJ,QAAQtB,GAEzB0B,EAAeJ,QAAQ/N,IAGzB,IAAI0O,EAAclC,EAAiBtF,GAAsBnH,GAAa,KAatE,OAZIyM,GAGJ,SAASmC,IACP,MAAMC,EAAc1H,GAAsBnH,IACtC2O,GAAgBE,EAAY1Q,IAAMwQ,EAAYxQ,GAAK0Q,EAAYzQ,IAAMuQ,EAAYvQ,GAAKyQ,EAAY1Y,QAAUwY,EAAYxY,OAAS0Y,EAAYzY,SAAWuY,EAAYvY,QACtK8V,IAEFyC,EAAcE,EACdX,EAAUO,sBAAsBG,EACpC,CATIA,GAUF1C,IACO,KACL,IAAI4C,EACJnC,EAAUC,SAAQ5B,IAChBmB,GAAkBnB,EAAS+D,oBAAoB,SAAU7C,GACzDE,GAAkBpB,EAAS+D,oBAAoB,SAAU7C,EAAO,IAErD,MAAba,GAAqBA,IACkB,OAAtC+B,EAAmBV,IAA2BU,EAAiBxB,aAChEc,EAAiB,KACb3B,GACF+B,qBAAqBN,EAC3B,CAEA,CAmBA,MAAMc,GFiJS,SAAUtT,GAIvB,YAHgB,IAAZA,IACFA,EAAU,GAEL,CACLuT,KAAM,SACNvT,UACA,QAAMwT,CAAGhO,GACP,IAAIiO,EAAuBC,EAC3B,MAAM,EACJjR,EAAC,EACDC,EAAC,UACDa,EAAS,eACToQ,GACEnO,EACEoO,QA/DZtO,eAAoCE,EAAOxF,GACzC,MAAM,UACJuD,EAAS,SACTmC,EAAQ,SACRC,GACEH,EACEtB,QAA+B,MAAlBwB,EAAS4K,WAAgB,EAAS5K,EAAS4K,MAAM3K,EAASpB,WACvEnC,EAAOkB,EAAQC,GACfY,EAAYV,EAAaF,GACzBrI,EAAwC,MAA3B2I,EAAYN,GACzBsQ,EAAgB,CAAC,OAAQ,OAAO/P,SAAS1B,IAAS,EAAI,EACtD0R,EAAiB5P,GAAOhJ,GAAc,EAAI,EAC1C6Y,EAAW3Q,EAASpD,EAASwF,GAGnC,IAAI,SACFwO,EAAQ,UACRC,EAAS,cACT7P,GACsB,kBAAb2P,EAAwB,CACjCC,SAAUD,EACVE,UAAW,EACX7P,cAAe,MACb,CACF4P,SAAU,EACVC,UAAW,EACX7P,cAAe,QACZ2P,GAKL,OAHI5P,GAAsC,kBAAlBC,IACtB6P,EAA0B,QAAd9P,GAAuC,EAAjBC,EAAqBA,GAElDlJ,EAAa,CAClBuH,EAAGwR,EAAYH,EACfpR,EAAGsR,EAAWH,GACZ,CACFpR,EAAGuR,EAAWH,EACdnR,EAAGuR,EAAYH,EAEnB,CAwB+BI,CAAqB1O,EAAOxF,GAIrD,OAAIuD,KAAkE,OAAlDkQ,EAAwBE,EAAeL,aAAkB,EAASG,EAAsBlQ,YAAgE,OAAjDmQ,EAAwBC,EAAeQ,QAAkBT,EAAsBU,gBACjM,CAAC,EAEH,CACL3R,EAAGA,EAAImR,EAAWnR,EAClBC,EAAGA,EAAIkR,EAAWlR,EAClBoN,KAAM,IACD8D,EACHrQ,aAGV,EAEA,EEzKM8Q,GF7TgB,SAAUrU,GAI9B,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLuT,KAAM,gBACNvT,UACA,QAAMwT,CAAGhO,GACP,IAAI8O,EAAuBC,EAAwBC,EACnD,MAAM,MACJvQ,EAAK,eACL0P,EAAc,UACdpQ,EAAS,SACTmC,EAAQ,SACRC,GACEH,GACE,UACJyO,GAAY,EAAK,UACjB9P,EAAS,kBACTsQ,EAAoBxS,EAAU,cAC9ByS,GAAgB,KACbC,GACDvR,EAASpD,EAASwF,GAChBoP,OAA6BjY,IAAdwH,GAA2BsQ,IAAsBxS,EAtC5E,SAA0BkC,EAAWuQ,EAAeD,GAElD,OAD2CtQ,EAAY,IAAIsQ,EAAkBnL,QAAO/F,GAAaE,EAAaF,KAAeY,OAAesQ,EAAkBnL,QAAO/F,GAAaE,EAAaF,KAAeY,KAAcsQ,EAAkBnL,QAAO/F,GAAaD,EAAQC,KAAeA,KAC/O+F,QAAO/F,IAC3CY,GACKV,EAAaF,KAAeY,KAAcuQ,GAAgBjQ,EAA8BlB,KAAeA,GAIpH,CA8ByFsR,CAAiB1Q,GAAa,KAAMuQ,EAAeD,GAAqBA,EACrJ1N,QAAiBxB,EAAeC,EAAOmP,GACvCG,GAA0E,OAAzDR,EAAwBX,EAAeU,oBAAyB,EAASC,EAAsBpW,QAAU,EAC1H6W,EAAmBH,EAAaE,GACtC,GAAwB,MAApBC,EACF,MAAO,CAAC,EAEV,MAAMC,EAAiBhR,EAAkB+Q,EAAkB9Q,QAAgC,MAAlByB,EAAS4K,WAAgB,EAAS5K,EAAS4K,MAAM3K,EAASpB,YAGnI,GAAIhB,IAAcwR,EAChB,MAAO,CACLE,MAAO,CACL1R,UAAWqR,EAAa,KAI9B,MAAMM,EAAmB,CAACnO,EAASzD,EAAQyR,IAAoBhO,EAASiO,EAAe,IAAKjO,EAASiO,EAAe,KAC9GG,EAAe,KAAiE,OAA1DZ,EAAyBZ,EAAeU,oBAAyB,EAASE,EAAuBa,YAAc,GAAK,CAC9I7R,UAAWwR,EACXK,UAAWF,IAEPG,EAAgBT,EAAaE,EAAe,GAGlD,GAAIO,EACF,MAAO,CACLvF,KAAM,CACJ5R,MAAO4W,EAAe,EACtBM,UAAWD,GAEbF,MAAO,CACL1R,UAAW8R,IAIjB,MAAMC,EAA8BH,EAAaI,KAAI/Z,IACnD,MAAM2I,EAAYV,EAAajI,EAAE+H,WACjC,MAAO,CAAC/H,EAAE+H,UAAWY,GAAa8P,EAElCzY,EAAE4Z,UAAUnX,MAAM,EAAG,GAAGiE,QAAO,CAACC,EAAKK,IAAML,EAAMK,GAAG,GAEpDhH,EAAE4Z,UAAU,GAAI5Z,EAAE4Z,UAAU,IAC3BI,MAAK,CAACC,EAAGC,IAAMD,EAAE,GAAKC,EAAE,KAKrBC,GAA8E,OAA3DnB,EAJWc,EAA4BhM,QAAO9N,GAAKA,EAAE,GAAGyC,MAAM,EAGvFwF,EAAajI,EAAE,IAAM,EAAI,GAAGoa,OAAMpT,GAAKA,GAAK,MACiC,SAAc,EAASgS,EAAsB,KAAOc,EAA4B,GAAG,GAChK,OAAIK,IAAmBpS,EACd,CACLuM,KAAM,CACJ5R,MAAO4W,EAAe,EACtBM,UAAWD,GAEbF,MAAO,CACL1R,UAAWoS,IAIV,CAAC,CACd,EAEA,EE8OME,GFyKQ,SAAU7V,GAItB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLuT,KAAM,QACNvT,UACA,QAAMwT,CAAGhO,GACP,MAAM,EACJ/C,EAAC,EACDC,EAAC,UACDa,GACEiC,GAEFwO,SAAU8B,GAAgB,EAC1B7B,UAAW8B,GAAiB,EAAK,QACjCC,EAAU,CACRxC,GAAI3Y,IACF,IAAI,EACF4H,EAAC,EACDC,GACE7H,EACJ,MAAO,CACL4H,IACAC,IACD,MAGFiS,GACDvR,EAASpD,EAASwF,GAChBH,EAAS,CACb5C,IACAC,KAEIqE,QAAiBxB,EAAeC,EAAOmP,GACvCV,EAAYpQ,EAAYP,EAAQC,IAChCyQ,EAAWtQ,EAAgBuQ,GACjC,IAAIgC,EAAgB5Q,EAAO2O,GACvBkC,EAAiB7Q,EAAO4O,GAC5B,GAAI6B,EAAe,CACjB,MACMK,EAAuB,MAAbnC,EAAmB,SAAW,QAG9CiC,EAAgB9S,EAFJ8S,EAAgBlP,EAFC,MAAbiN,EAAmB,MAAQ,QAIhBiC,EADfA,EAAgBlP,EAASoP,GAE7C,CACM,GAAIJ,EAAgB,CAClB,MACMI,EAAwB,MAAdlC,EAAoB,SAAW,QAG/CiC,EAAiB/S,EAFL+S,EAAiBnP,EAFC,MAAdkN,EAAoB,MAAQ,QAIhBiC,EADhBA,EAAiBnP,EAASoP,GAE9C,CACM,MAAMC,EAAgBJ,EAAQxC,GAAG,IAC5BhO,EACH,CAACwO,GAAWiC,EACZ,CAAChC,GAAYiC,IAEf,MAAO,IACFE,EACHtG,KAAM,CACJrN,EAAG2T,EAAc3T,EAAIA,EACrBC,EAAG0T,EAAc1T,EAAIA,GAG/B,EAEA,EEpOM2T,GF9OO,SAAUrW,GAIrB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLuT,KAAM,OACNvT,UACA,QAAMwT,CAAGhO,GACP,IAAIkO,EAAuB4C,EAC3B,MAAM,UACJ/S,EAAS,eACToQ,EAAc,MACd1P,EAAK,iBACLsS,EAAgB,SAChB7Q,EAAQ,SACRC,GACEH,GAEFwO,SAAU8B,GAAgB,EAC1B7B,UAAW8B,GAAiB,EAC5BS,mBAAoBC,EAA2B,iBAC/CC,EAAmB,UAAS,0BAC5BC,EAA4B,OAAM,cAClCC,GAAgB,KACbjC,GACDvR,EAASpD,EAASwF,GAMtB,GAAsD,OAAjDkO,EAAwBC,EAAeQ,QAAkBT,EAAsBU,gBAClF,MAAO,CAAC,EAEV,MAAMhS,EAAOkB,EAAQC,GACfsT,EAAkBvT,EAAQiT,KAAsBA,EAChDrS,QAA+B,MAAlBwB,EAAS4K,WAAgB,EAAS5K,EAAS4K,MAAM3K,EAASpB,WACvEiS,EAAqBC,IAAgCI,IAAoBD,EAAgB,CAACpS,EAAqB+R,ID5X3H,SAA+BhT,GAC7B,MAAMuT,EAAoBtS,EAAqBjB,GAC/C,MAAO,CAACkB,EAA8BlB,GAAYuT,EAAmBrS,EAA8BqS,GACrG,CCyXgJC,CAAsBR,IAC3JE,GAA6D,SAA9BE,GAClCH,EAAmBQ,QDtW3B,SAAmCzT,EAAWqT,EAAehJ,EAAW1J,GACtE,MAAMC,EAAYV,EAAaF,GAC/B,IAAIiH,EAnBN,SAAqBpI,EAAM6U,EAAS/S,GAClC,MAAMgT,EAAK,CAAC,OAAQ,SACdC,EAAK,CAAC,QAAS,QACfC,EAAK,CAAC,MAAO,UACbC,EAAK,CAAC,SAAU,OACtB,OAAQjV,GACN,IAAK,MACL,IAAK,SACH,OAAI8B,EAAY+S,EAAUE,EAAKD,EACxBD,EAAUC,EAAKC,EACxB,IAAK,OACL,IAAK,QACH,OAAOF,EAAUG,EAAKC,EACxB,QACE,MAAO,GAEb,CAGaC,CAAYhU,EAAQC,GAA0B,UAAdqK,EAAuB1J,GAOlE,OANIC,IACFqG,EAAOA,EAAK+K,KAAInT,GAAQA,EAAO,IAAM+B,IACjCyS,IACFpM,EAAOA,EAAKpP,OAAOoP,EAAK+K,IAAI9Q,MAGzB+F,CACT,CC4VmC+M,CAA0BhB,EAAkBK,EAAeD,EAA2BzS,IAEnH,MAAMjC,EAAa,CAACsU,KAAqBC,GACnCzP,QAAiBxB,EAAeC,EAAOmP,GACvCS,EAAY,GAClB,IAAIoC,GAAiE,OAA/ClB,EAAuB3C,EAAe0C,WAAgB,EAASC,EAAqBlB,YAAc,GAIxH,GAHIU,GACFV,EAAU4B,KAAKjQ,EAAS3E,IAEtB2T,EAAgB,CAClB,MAAMhU,EAAQiC,EAAkBT,EAAWU,EAAOC,GAClDkR,EAAU4B,KAAKjQ,EAAShF,EAAM,IAAKgF,EAAShF,EAAM,IAC1D,CAOM,GANAyV,EAAgB,IAAIA,EAAe,CACjCjU,YACA6R,eAIGA,EAAUQ,OAAMxT,GAAQA,GAAQ,IAAI,CACvC,IAAIqV,EAAuBC,EAC3B,MAAMC,IAA+D,OAAhDF,EAAwB9D,EAAe0C,WAAgB,EAASoB,EAAsBvZ,QAAU,GAAK,EACpHmX,EAAgBpT,EAAW0V,GACjC,GAAItC,EAEF,MAAO,CACLvF,KAAM,CACJ5R,MAAOyZ,EACPvC,UAAWoC,GAEbvC,MAAO,CACL1R,UAAW8R,IAOjB,IAAIM,EAAgJ,OAA9H+B,EAAwBF,EAAclO,QAAO9N,GAAKA,EAAE4Z,UAAU,IAAM,IAAGI,MAAK,CAACC,EAAGC,IAAMD,EAAEL,UAAU,GAAKM,EAAEN,UAAU,KAAI,SAAc,EAASsC,EAAsBnU,UAG1L,IAAKoS,EACH,OAAQe,GACN,IAAK,UACH,CACE,IAAIkB,EACJ,MAAMrU,EAAyM,OAA5LqU,EAAwBJ,EAAcjC,KAAI/Z,GAAK,CAACA,EAAE+H,UAAW/H,EAAE4Z,UAAU9L,QAAOvC,GAAYA,EAAW,IAAG7E,QAAO,CAACC,EAAK4E,IAAa5E,EAAM4E,GAAU,MAAKyO,MAAK,CAACC,EAAGC,IAAMD,EAAE,GAAKC,EAAE,KAAI,SAAc,EAASkC,EAAsB,GACjPrU,IACFoS,EAAiBpS,GAEnB,KAChB,CACY,IAAK,mBACHoS,EAAiBY,EAIvB,GAAIhT,IAAcoS,EAChB,MAAO,CACLV,MAAO,CACL1R,UAAWoS,GAIzB,CACM,MAAO,CAAC,CACd,EAEA,EEkJMkC,GFhIO,SAAU7X,GAIrB,YAHgB,IAAZA,IACFA,EAAU,CAAC,GAEN,CACLuT,KAAM,OACNvT,UACA,QAAMwT,CAAGhO,GACP,MAAM,MACJvB,GACEuB,GACE,SACJI,EAAW,qBACR+O,GACDvR,EAASpD,EAASwF,GACtB,OAAQI,GACN,IAAK,kBACH,CACE,MAIMwI,EAAUtH,QAJOvB,EAAeC,EAAO,IACxCmP,EACH5O,eAAgB,cAEuB9B,EAAMK,WAC/C,MAAO,CACLwL,KAAM,CACJgI,uBAAwB1J,EACxB2J,gBAAiB/Q,EAAsBoH,IAGvD,CACQ,IAAK,UACH,CACE,MAIMA,EAAUtH,QAJOvB,EAAeC,EAAO,IACxCmP,EACH3O,aAAa,IAE0B/B,EAAMM,UAC/C,MAAO,CACLuL,KAAM,CACJkI,eAAgB5J,EAChB6J,QAASjR,EAAsBoH,IAG/C,CACQ,QAEI,MAAO,CAAC,EAGpB,EAEA,EEoFM+F,GF9bQnU,IAAW,CACvBuT,KAAM,QACNvT,UACA,QAAMwT,CAAGhO,GACP,MAAM,EACJ/C,EAAC,EACDC,EAAC,UACDa,EAAS,MACTU,EAAK,SACLyB,EAAQ,SACRC,EAAQ,eACRgO,GACEnO,GAEE,QACJU,EAAO,QACPvB,EAAU,GACRvB,EAASpD,EAASwF,IAAU,CAAC,EACjC,GAAe,MAAXU,EACF,MAAO,CAAC,EAEV,MAAMD,EAAgBvB,EAAiBC,GACjCU,EAAS,CACb5C,IACAC,KAEIiB,EAAOI,EAAiBR,GACxBpF,EAASyF,EAAcD,GACvBuU,QAAwBxS,EAASuK,cAAc/J,GAC/CiS,EAAmB,MAATxU,EACVyU,EAAUD,EAAU,MAAQ,OAC5BE,EAAUF,EAAU,SAAW,QAC/BG,EAAaH,EAAU,eAAiB,cACxCI,EAAUtU,EAAMK,UAAUnG,GAAU8F,EAAMK,UAAUX,GAAQ0B,EAAO1B,GAAQM,EAAMM,SAASpG,GAC1Fqa,EAAYnT,EAAO1B,GAAQM,EAAMK,UAAUX,GAC3C8U,QAAuD,MAA5B/S,EAASe,qBAA0B,EAASf,EAASe,gBAAgBP,IACtG,IAAIwS,EAAaD,EAAoBA,EAAkBH,GAAc,EAGhEI,SAA6C,MAAtBhT,EAASW,eAAoB,EAASX,EAASW,UAAUoS,MACnFC,EAAa/S,EAASpB,SAAS+T,IAAerU,EAAMM,SAASpG,IAE/D,MAAMwa,EAAoBJ,EAAU,EAAIC,EAAY,EAI9CI,EAAyBF,EAAa,EAAIR,EAAgB/Z,GAAU,EAAI,EACxE0a,EAAajZ,EAAIqG,EAAcmS,GAAUQ,GACzCE,EAAalZ,EAAIqG,EAAcoS,GAAUO,GAIzCG,EAAQF,EACRnZ,EAAMgZ,EAAaR,EAAgB/Z,GAAU2a,EAC7CE,EAASN,EAAa,EAAIR,EAAgB/Z,GAAU,EAAIwa,EACxDrF,EAASnQ,EAAM4V,EAAOC,EAAQtZ,GAM9BuZ,GAAmBtF,EAAeQ,OAAoC,MAA3B1Q,EAAaF,IAAsByV,IAAW1F,GAAUrP,EAAMK,UAAUnG,GAAU,GAAK6a,EAASD,EAAQF,EAAaC,GAAcZ,EAAgB/Z,GAAU,EAAI,EAC5MiW,EAAkB6E,EAAkBD,EAASD,EAAQC,EAASD,EAAQC,EAAStZ,EAAM,EAC3F,MAAO,CACL,CAACiE,GAAO0B,EAAO1B,GAAQyQ,EACvBtE,KAAM,CACJ,CAACnM,GAAO2P,EACR4F,aAAcF,EAAS1F,EAASc,KAC5B6E,GAAmB,CACrB7E,oBAGJa,MAAOgE,EAEb,IEsYME,GAAkBA,CAAC7U,EAAWC,EAAUvE,KAI5C,MAAM8O,EAAQ,IAAIsK,IACZC,EAAgB,CACpB3T,eACG1F,GAECsZ,EAAoB,IACrBD,EAAc3T,SACjB+J,GAAIX,GAEN,MFvnBsBxJ,OAAOhB,EAAWC,EAAUgV,KAClD,MAAM,UACJhW,EAAY,SAAQ,SACpBqC,EAAW,WAAU,WACrB4T,EAAa,GAAE,SACf9T,GACE6T,EACEE,EAAkBD,EAAWlQ,OAAOoQ,SACpCxV,QAA+B,MAAlBwB,EAAS4K,WAAgB,EAAS5K,EAAS4K,MAAM/L,IACpE,IAAIN,QAAcyB,EAASmK,gBAAgB,CACzCvL,YACAC,WACAqB,cAEE,EACFnD,EAAC,EACDC,GACEqC,EAA2Bd,EAAOV,EAAWW,GAC7CyV,EAAoBpW,EACpBoQ,EAAiB,CAAC,EAClBiG,EAAa,EACjB,IAAK,IAAIC,EAAI,EAAGA,EAAIJ,EAAgBtb,OAAQ0b,IAAK,CAC/C,MAAM,KACJtG,EAAI,GACJC,GACEiG,EAAgBI,IAElBpX,EAAGqX,EACHpX,EAAGqX,EAAK,KACRjK,EAAI,MACJmF,SACQzB,EAAG,CACX/Q,IACAC,IACA6T,iBAAkBhT,EAClBA,UAAWoW,EACX/T,WACA+N,iBACA1P,QACAyB,WACAC,SAAU,CACRrB,YACAC,cAGJ9B,EAAa,MAATqX,EAAgBA,EAAQrX,EAC5BC,EAAa,MAATqX,EAAgBA,EAAQrX,EAC5BiR,EAAiB,IACZA,EACH,CAACJ,GAAO,IACHI,EAAeJ,MACfzD,IAGHmF,GAAS2E,GAAc,KACzBA,IACqB,kBAAV3E,IACLA,EAAM1R,YACRoW,EAAoB1E,EAAM1R,WAExB0R,EAAMhR,QACRA,GAAwB,IAAhBgR,EAAMhR,YAAuByB,EAASmK,gBAAgB,CAC5DvL,YACAC,WACAqB,aACGqP,EAAMhR,SAGXxB,IACAC,KACEqC,EAA2Bd,EAAO0V,EAAmBzV,KAE3D2V,GAAK,EAEX,CACE,MAAO,CACLpX,IACAC,IACAa,UAAWoW,EACX/T,WACA+N,iBACD,EEsiBMqG,CAAkB1V,EAAWC,EAAU,IACzC8U,EACH3T,SAAU4T,GACV,EC1rBJ,SAAS9S,GAAaN,GAClB,OA4BJ,SAA8BA,GAE1B,IAAK,IAAIoJ,EAAWpJ,EAASoJ,EAAUA,EAAW2K,GAAe3K,GAC7D,GAAMA,aAAoBvH,SAGiB,SAAvC4B,iBAAiB2F,GAAU/G,QAC3B,OAAO,KAGf,IAAK,IAAI+G,EAAW2K,GAAe/T,GAAUoJ,EAAUA,EAAW2K,GAAe3K,GAAW,CACxF,KAAMA,aAAoBvH,SACtB,SAEJ,MAAMmS,EAAQvQ,iBAAiB2F,GAE/B,GAAsB,aAAlB4K,EAAM3R,QAAV,CAGA,GAAuB,WAAnB2R,EAAMjM,UAAyBpF,EAAkBqR,GACjD,OAAO5K,EAEX,GAAyB,SAArBA,EAAS6K,QACT,OAAO7K,CALnB,CAOA,CACI,OAAO,IACX,CAvDW8K,CAAqBlU,EAChC,CAOA,SAAS+T,GAAe/T,GACpB,OAAIA,EAAQgE,aACDhE,EAAQgE,aAEfhE,EAAQiE,sBAAsBhC,WACvBjC,EAAQiE,WAAWC,KAEvBlE,EAAQiE,UACnB,CCWA,SAASkQ,GAAWpd,GAClB,MAAMqd,EAAM3S,OAAO4S,kBAAoB,EACvC,OAAO9a,KAAK4C,MAAMpF,EAAQqd,GAAOA,CACnC,EAVA,WACE,IAAIE,EAAAA,EAAAA,KAAa,CACf,MAAMC,EAA0B/U,GAASe,gBACzCf,GAASe,gBAAmBP,GAAqBuU,EAAwBvU,EAASM,IAErF,CALD,GAkDO,MAAMkU,GAEXpV,MACEqV,EAA8BC,KAuB7B,IAAAC,EAAA,IAtBD,YACE7J,EAAW,WACX8J,EAAU,mBACVC,EAAqB,WAAU,UAC/BxX,EAAS,aACTyX,EAAY,eACZC,EAAc,eACdC,EAAc,eACdC,EAAc,QACdC,EAAO,KACP3c,GAYDmc,EAED,IAAK5J,IAAgB8J,EACnB,OAAO,KAGT,MAAM,EACJrY,EAAC,EACDC,EACAa,UAAW8X,EACXzV,SAAUqI,EAAQ,eAClB0F,SACQwF,GAAgBnI,EAAa8J,EAAY,CACjDlV,SAAUmV,EACVxX,UACgB,SAAdA,GAAsC,eAAdA,GAA4C,aAAdA,OAClD5G,EACA2e,GAAsBR,EAAYvX,GACxCiW,WAAY+B,GAAc,CACxBhY,YACAyX,eACAC,eAA8B,OAAdA,QAAc,IAAdA,OAAc,EAAdA,EAAgB1F,KAAKhS,GAAc+X,GAAsBR,EAAYvX,KACrF2X,iBACAC,iBACAC,UACA3c,WAIJ,GAAI2c,GAAWzH,EAAeQ,MAAO,CACnC,MAAM,EAAE1R,EAAC,EAAEC,GAAMiR,EAAeQ,MAC1B/R,EAAOiZ,EAAmB7X,MAAM,KAAK,GACrCW,EAAiB,MAAL1B,EAAY,OAAS,MACjCyG,EAAYsS,GAAoBpZ,GAChC6S,EAAQ,CAAErS,KAAM,GAAIG,IAAK,GAAID,OAAQ,GAAID,MAAO,IAElD,mBAAoB8X,IACtBA,EAAU7f,eAA0B,SAATsH,GAA4B,UAATA,EAAmB,aAAe,YAGlFvG,OAAO4f,OAAOL,EAAQlB,MAAO,IACxBjF,EACH,CAAC9Q,GAAY,GAAH/I,OAAmB,QAAb+I,EAAsB1B,EAAIC,EAAC,MAC3C,CAACN,GAAO,OACR8G,cAIJ,MACMwS,GADqC,QAAtBb,EAAGlH,EAAekE,YAAI,IAAAgD,OAAA,EAAnBA,EAAqB9C,iBACR,SAAW,KAC1C4D,EAAgBD,EAAa,OAAS,KAE5CZ,EAAWc,aAAaC,GAAwBR,GAEhD,MAAM,KAAES,GAASnB,EAEjB9e,OAAO4f,OAAOX,EAAWZ,MAAO,CAC9BwB,aACAC,gBACA1N,WACA/E,UAAW4S,EAAO,aAAH1gB,OAAgBif,GAAW5X,GAAE,OAAArH,OAAMif,GAAW3X,GAAE,OAAQ,GACvEK,IAAK,EACLH,KAAM,GACN,EAMOiZ,GAAyB,iBA4EzBZ,GAAkC,CAC7C,MACA,SACA,QACA,OACA,YACA,UACA,eACA,aACA,cACA,YACA,aACA,WACA,UACA,WACA,gBACA,cACA,iBACA,gBAsDWc,GAAc,CACzBC,UAAW,2BACXC,gBAAiB,oCAGnB,SAASV,GAAaW,GAgBrB,IAhBsB,UACrB3Y,EAAS,aACTyX,EAAY,eACZC,EAAc,eACdC,EAAc,eACdC,EAAc,QACdC,EAAO,KACP3c,GASDyd,EACC,MAAMC,EAAoB,CAACtG,KAASgC,MAEpC,GAAa,SAATpZ,EACF,MAAO,IACF0d,EACH9F,GAAK,CACHG,mBAAoByE,GAAkB,CAAC,YAAa,MAAO,UAAW,eAAgB,SAAU,iBAKtG,GAAa,YAATxc,GAA+B,YAATA,EAAoB,CAC5C,MAAM+a,EAA2B,IAC5B2C,EACH7I,GAAO,CACLU,SAAoC,kBAAnBkH,EAA8BA,EAAiB,EAChEjH,UAAqC,kBAAnBkH,EAA8BA,EAAiB,KAoBrE,MAhBkB,SAAd5X,GAAsC,eAAdA,GAA4C,aAAdA,EACxDiW,EAAWxC,KACT3C,GAAc,CAAElQ,UAAyB,eAAdZ,EAA6B,QAAwB,aAAdA,EAA2B,MAAQ,QAE7FyX,GACVxB,EAAWxC,KAAKX,GAAK4E,EAAiB,CAAEzE,mBAAoByE,GAAmB,CAAC,IAG9EG,GACF5B,EAAWxC,KACT7C,GAAM,CACJjO,QAASkV,KAKR5B,EAGT,MAAO,EACT,UAEgB4C,GAA0Bna,EAAsBgN,GAC9D,MAAMoN,EAAqBpa,EAAWqH,QAAQ/F,GAC5C0X,GAAenX,SAASP,KAa1B,OAVI8Y,EAAmBle,SAAW8D,EAAW9D,QAC3Cme,QAAQC,KAAK,GAADnhB,OACP6T,EAAGkL,QAAO,gEAAA/e,OAA+D6f,GACzE1F,KAAKhS,GAAS,IAAAnI,OAASmI,EAAS,OAChCiZ,KAAK,MACLC,QACH,CAAExN,OAICoN,CACT,UAEgBf,GAAsBR,EAAyBvX,GAC7D,MAAMtB,EAAa,CAAC,OAAQ,SAM5B,MAJkC,SAA9Bya,EAAAA,EAAAA,GAAc5B,IAChB7Y,EAAW0a,UAGNpZ,EAAUhF,QAAQ,YAAa0D,EAAW,IAAI1D,QAAQ,aAAc0D,EAAW,GACxF,CAsBOqD,eAAesX,GACpBjC,EACA3a,GACe,IAAf6c,EAAOpb,UAAAtD,OAAA,QAAAxB,IAAA8E,UAAA,IAAAA,UAAA,GAEP,IAAKkZ,EAAUmB,OAAS9b,EAAQ8a,aAAe9a,EAAQgR,YACrD,OAKF,IAFqB8L,GAAyB9N,IAAI2L,GAGhD,OAAOoC,GAAcpC,EAAW3a,EAAQgR,YAAahR,EAAQ8a,YAG/D,MAAMkC,EAAmBH,EAK3B,SAAgClC,GAC9B,IAAIpZ,EAAY0b,GAAkCjO,IAAI2L,GAEtD,GAAIpZ,EACF,OAAOA,EAUT,OAPAA,GAAY1B,EAAAA,EAAAA,GAAS6a,GAAoBwC,EAAAA,EAASN,WAAY,CAC5Drc,SAAS,EACTJ,QAAS+c,EAAAA,EAASN,aAGpBK,GAAkC1N,IAAIoL,EAAWpZ,GAE1CA,CACT,CApBqC4b,CAAuBxC,GAAaD,SAEjEsC,EAAiBrC,EAAW3a,EACpC,CAmBA,MAAMwb,GAAsB,CAC1BzY,IAAK,GACLH,KAAM,iBACNE,OAAQ,iBACRD,MAAO,iBAmBIia,GAA2B,IAAIM,QAEtCH,GAAoC,IAAIG,QAE9C9X,eAAeyX,GACbpC,EACA3J,EACA8J,GAEA,IAAKA,EAAWuC,YACd,OAGF,MAAMC,GAAsB9C,EAAAA,EAAAA,KACxBjK,GACA,CAACgN,EAAqBC,EAA0BC,KAC9CA,IACO,QAQb,IAAIC,EAFJZ,GAAyBvN,IAAIoL,EAAW,CAAEnV,MAAO,YAIjD,MAAMmY,EAAUL,EACdtM,EACA8J,GAEA,KACE,MAAM8C,EAAUjD,EAAUiC,aAErBc,IACHA,EAAoBE,MAO1B,OAFAd,GAAyBvN,IAAIoL,EAAW,CAAEnV,MAAO,SAAUmY,YAEpDD,CACT,CASOpY,eAAeuY,GACpBlD,EACA3J,EACA8J,GAEA,GAAKA,GAAe9J,IAIpB8M,GAAqBnD,EAAW3J,EAAa8J,GAE7Cjf,OAAO4f,OAAOX,EAAWZ,MAAO,CAC9BwB,WAAY,SACZC,cAAe,OAGf1N,SAAU0M,EAAUI,qBAGjBJ,EAAUmB,MAIf,OAAOiB,GAAcpC,EAAW3J,EAAa8J,EAC/C,UASgBgD,GACdnD,EACA3J,EACA8J,GAAuB,IAAAiD,EAEvB,IAAKjD,IAAe9J,EAClB,OAGF,MAAMgN,EAAelB,GAAyB9N,IAAI2L,GAEtB,YAAZ,OAAZqD,QAAY,IAAZA,OAAY,EAAZA,EAAcxY,QAChBwY,EAAaL,UAGfb,GAAyBmB,OAAOtD,GAEgB,QAAhDoD,EAAAd,GAAkCjO,IAAI2L,UAAU,IAAAoD,GAAhDA,EAAkDlc,SAClDob,GAAkCgB,OAAOtD,EAC3C,CAEA,MAOauD,GAAwBze,KAAK0e,KAAK1e,KAAK2e,MAPzB","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/functional/FloatingArrow.tsx","../node_modules/@esri/calcite-components/node_modules/lodash-es/_freeGlobal.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_root.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_Symbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_getRawTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_objectToString.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseGetTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObjectLike.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isSymbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseTrim.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObject.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/toNumber.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/now.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/debounce.js","../node_modules/@esri/calcite-components/node_modules/@floating-ui/utils/dist/floating-ui.utils.esm.js","../node_modules/@esri/calcite-components/node_modules/@floating-ui/core/dist/floating-ui.core.esm.js","../node_modules/@esri/calcite-components/node_modules/@floating-ui/utils/dom/floating-ui.utils.dom.esm.js","../node_modules/@esri/calcite-components/dist/components/node_modules/@floating-ui/dom/dist/floating-ui.dom.esm.js","../node_modules/@esri/calcite-components/dist/components/node_modules/composed-offset-position/dist/composed-offset-position.esm.js","../node_modules/@esri/calcite-components/dist/components/src/utils/floating-ui.ts"],"sourcesContent":["import { FunctionalComponent, h } from \"@stencil/core\";\nimport { JSXAttributes } from \"@stencil/core/internal\";\nimport { FloatingLayout } from \"../../utils/floating-ui\";\n\ninterface FloatingArrowProps extends JSXAttributes {\n  floatingLayout: FloatingLayout;\n}\n\nconst CSS = {\n  arrow: \"calcite-floating-ui-arrow\",\n  arrowStroke: \"calcite-floating-ui-arrow__stroke\",\n};\n\nconst DEFAULTS = {\n  width: 12,\n  height: 6,\n  strokeWidth: 1,\n};\n\n/**\n * Renders a SVG element to be used as a floating-ui arrow.\n *\n * This functional component should be rendered inside a `FloatingUIComponent` when it needs an arrow element.\n *\n * @param floatingLayout.floatingLayout\n * @param floatingLayout – The effective floating layout to render the arrow vertically or horizontally. Possible values: `vertical` or `horizontal`.\n *\n * See [floating-ui](https://github.com/Esri/calcite-design-system/blob/dev/src/utils/floating-ui.ts)\n * @param floatingLayout.key\n * @param floatingLayout.ref\n */\nexport const FloatingArrow: FunctionalComponent<FloatingArrowProps> = ({\n  floatingLayout,\n  key,\n  ref,\n}) => {\n  const { width, height, strokeWidth } = DEFAULTS;\n  const svgX = width / 2;\n  const isVertical = floatingLayout === \"vertical\";\n\n  const dValue =\n    \"M0,0\" +\n    ` H${width}` +\n    ` L${width - svgX},${height}` +\n    ` Q${svgX},${height} ${svgX},${height}` +\n    \" Z\";\n\n  return (\n    <svg\n      aria-hidden=\"true\"\n      class={CSS.arrow}\n      height={width}\n      key={key}\n      ref={ref}\n      viewBox={`0 0 ${width} ${width + (!isVertical ? strokeWidth : 0)}`}\n      width={width + (isVertical ? strokeWidth : 0)}\n    >\n      {strokeWidth > 0 && (\n        <path\n          class={CSS.arrowStroke}\n          d={dValue}\n          fill=\"none\"\n          // Account for the stroke on the fill path rendered below.\n          stroke-width={strokeWidth + 1}\n        />\n      )}\n      {/* In Firefox, for left/right placements there's a ~0.5px gap where the\n  border can show through. Adding a stroke on the fill removes it. */}\n      <path d={dValue} stroke=\"none\" />\n    </svg>\n  );\n};\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","/**\n * Custom positioning reference element.\n * @see https://floating-ui.com/docs/virtual-elements\n */\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst alignments = ['start', 'end'];\nconst placements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-\" + alignments[0], side + \"-\" + alignments[1]), []);\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\nconst floor = Math.floor;\nconst createCoords = v => ({\n  x: v,\n  y: v\n});\nconst oppositeSideMap = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nconst oppositeAlignmentMap = {\n  start: 'end',\n  end: 'start'\n};\nfunction clamp(start, value, end) {\n  return max(start, min(value, end));\n}\nfunction evaluate(value, param) {\n  return typeof value === 'function' ? value(param) : value;\n}\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\nfunction getOppositeAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\nfunction getAxisLength(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\nfunction getSideAxis(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'y' : 'x';\n}\nfunction getAlignmentAxis(placement) {\n  return getOppositeAxis(getSideAxis(placement));\n}\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n  const alignment = getAlignment(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const length = getAxisLength(alignmentAxis);\n  let mainAlignmentSide = alignmentAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n  return [mainAlignmentSide, getOppositePlacement(mainAlignmentSide)];\n}\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, alignment => oppositeAlignmentMap[alignment]);\n}\nfunction getSideList(side, isStart, rtl) {\n  const lr = ['left', 'right'];\n  const rl = ['right', 'left'];\n  const tb = ['top', 'bottom'];\n  const bt = ['bottom', 'top'];\n  switch (side) {\n    case 'top':\n    case 'bottom':\n      if (rtl) return isStart ? rl : lr;\n      return isStart ? lr : rl;\n    case 'left':\n    case 'right':\n      return isStart ? tb : bt;\n    default:\n      return [];\n  }\n}\nfunction getOppositeAxisPlacements(placement, flipAlignment, direction, rtl) {\n  const alignment = getAlignment(placement);\n  let list = getSideList(getSide(placement), direction === 'start', rtl);\n  if (alignment) {\n    list = list.map(side => side + \"-\" + alignment);\n    if (flipAlignment) {\n      list = list.concat(list.map(getOppositeAlignmentPlacement));\n    }\n  }\n  return list;\n}\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, side => oppositeSideMap[side]);\n}\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\nfunction getPaddingObject(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\nfunction rectToClientRect(rect) {\n  const {\n    x,\n    y,\n    width,\n    height\n  } = rect;\n  return {\n    width,\n    height,\n    top: y,\n    left: x,\n    right: x + width,\n    bottom: y + height,\n    x,\n    y\n  };\n}\n\nexport { alignments, clamp, createCoords, evaluate, expandPaddingObject, floor, getAlignment, getAlignmentAxis, getAlignmentSides, getAxisLength, getExpandedPlacements, getOppositeAlignmentPlacement, getOppositeAxis, getOppositeAxisPlacements, getOppositePlacement, getPaddingObject, getSide, getSideAxis, max, min, placements, rectToClientRect, round, sides };\n","import { getSideAxis, getAlignmentAxis, getAxisLength, getSide, getAlignment, evaluate, getPaddingObject, rectToClientRect, min, clamp, placements, getAlignmentSides, getOppositeAlignmentPlacement, getOppositePlacement, getExpandedPlacements, getOppositeAxisPlacements, sides, max, getOppositeAxis } from '@floating-ui/utils';\nexport { rectToClientRect } from '@floating-ui/utils';\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const sideAxis = getSideAxis(placement);\n  const alignmentAxis = getAlignmentAxis(placement);\n  const alignLength = getAxisLength(alignmentAxis);\n  const side = getSide(placement);\n  const isVertical = sideAxis === 'y';\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const commonAlign = reference[alignLength] / 2 - floating[alignLength] / 2;\n  let coords;\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[alignmentAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n    case 'end':\n      coords[alignmentAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const validMiddleware = middleware.filter(Boolean);\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n  for (let i = 0; i < validMiddleware.length; i++) {\n    const {\n      name,\n      fn\n    } = validMiddleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = {\n      ...middlewareData,\n      [name]: {\n        ...middlewareData[name],\n        ...data\n      }\n    };\n    if (reset && resetCount <= 50) {\n      resetCount++;\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n      i = -1;\n    }\n  }\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(state, options) {\n  var _await$platform$isEle;\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = state;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = evaluate(options, state);\n  const paddingObject = getPaddingObject(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const rect = elementContext === 'floating' ? {\n    x,\n    y,\n    width: rects.floating.width,\n    height: rects.floating.height\n  } : rects.reference;\n  const offsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating));\n  const offsetScale = (await (platform.isElement == null ? void 0 : platform.isElement(offsetParent))) ? (await (platform.getScale == null ? void 0 : platform.getScale(offsetParent))) || {\n    x: 1,\n    y: 1\n  } : {\n    x: 1,\n    y: 1\n  };\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  }) : rect);\n  return {\n    top: (clippingClientRect.top - elementClientRect.top + paddingObject.top) / offsetScale.y,\n    bottom: (elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom) / offsetScale.y,\n    left: (clippingClientRect.left - elementClientRect.left + paddingObject.left) / offsetScale.x,\n    right: (elementClientRect.right - clippingClientRect.right + paddingObject.right) / offsetScale.x\n  };\n}\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n  async fn(state) {\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform,\n      elements,\n      middlewareData\n    } = state;\n    // Since `element` is required, we don't Partial<> the type.\n    const {\n      element,\n      padding = 0\n    } = evaluate(options, state) || {};\n    if (element == null) {\n      return {};\n    }\n    const paddingObject = getPaddingObject(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getAlignmentAxis(placement);\n    const length = getAxisLength(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const isYAxis = axis === 'y';\n    const minProp = isYAxis ? 'top' : 'left';\n    const maxProp = isYAxis ? 'bottom' : 'right';\n    const clientProp = isYAxis ? 'clientHeight' : 'clientWidth';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? arrowOffsetParent[clientProp] : 0;\n\n    // DOM platform can return `window` as the `offsetParent`.\n    if (!clientSize || !(await (platform.isElement == null ? void 0 : platform.isElement(arrowOffsetParent)))) {\n      clientSize = elements.floating[clientProp] || rects.floating[length];\n    }\n    const centerToReference = endDiff / 2 - startDiff / 2;\n\n    // If the padding is large enough that it causes the arrow to no longer be\n    // centered, modify the padding so that it is centered.\n    const largestPossiblePadding = clientSize / 2 - arrowDimensions[length] / 2 - 1;\n    const minPadding = min(paddingObject[minProp], largestPossiblePadding);\n    const maxPadding = min(paddingObject[maxProp], largestPossiblePadding);\n\n    // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds.\n    const min$1 = minPadding;\n    const max = clientSize - arrowDimensions[length] - maxPadding;\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = clamp(min$1, center, max);\n\n    // If the reference is small enough that the arrow's padding causes it to\n    // to point to nothing for an aligned placement, adjust the offset of the\n    // floating element itself. To ensure `shift()` continues to take action,\n    // a single reset is performed when this is true.\n    const shouldAddOffset = !middlewareData.arrow && getAlignment(placement) != null && center !== offset && rects.reference[length] / 2 - (center < min$1 ? minPadding : maxPadding) - arrowDimensions[length] / 2 < 0;\n    const alignmentOffset = shouldAddOffset ? center < min$1 ? center - min$1 : center - max : 0;\n    return {\n      [axis]: coords[axis] + alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset - alignmentOffset,\n        ...(shouldAddOffset && {\n          alignmentOffset\n        })\n      },\n      reset: shouldAddOffset\n    };\n  }\n});\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n    return true;\n  });\n}\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'autoPlacement',\n    options,\n    async fn(state) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _placementsThatFitOnE;\n      const {\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = state;\n      const {\n        crossAxis = false,\n        alignment,\n        allowedPlacements = placements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const placements$1 = alignment !== undefined || allowedPlacements === placements ? getPlacementList(alignment || null, autoAlignment, allowedPlacements) : allowedPlacements;\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const currentIndex = ((_middlewareData$autoP = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP.index) || 0;\n      const currentPlacement = placements$1[currentIndex];\n      if (currentPlacement == null) {\n        return {};\n      }\n      const alignmentSides = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n\n      // Make `computeCoords` start from the right place.\n      if (placement !== currentPlacement) {\n        return {\n          reset: {\n            placement: placements$1[0]\n          }\n        };\n      }\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[alignmentSides[0]], overflow[alignmentSides[1]]];\n      const allOverflows = [...(((_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.overflows) || []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements$1[currentIndex + 1];\n\n      // There are more placements to check.\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n      const placementsSortedByMostSpace = allOverflows.map(d => {\n        const alignment = getAlignment(d.placement);\n        return [d.placement, alignment && crossAxis ?\n        // Check along the mainAxis and main crossAxis side.\n        d.overflows.slice(0, 2).reduce((acc, v) => acc + v, 0) :\n        // Check only the mainAxis.\n        d.overflows[0], d.overflows];\n      }).sort((a, b) => a[1] - b[1]);\n      const placementsThatFitOnEachSide = placementsSortedByMostSpace.filter(d => d[2].slice(0,\n      // Aligned placements should not check their opposite crossAxis\n      // side.\n      getAlignment(d[0]) ? 2 : 3).every(v => v <= 0));\n      const resetPlacement = ((_placementsThatFitOnE = placementsThatFitOnEachSide[0]) == null ? void 0 : _placementsThatFitOnE[0]) || placementsSortedByMostSpace[0][0];\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'flip',\n    options,\n    async fn(state) {\n      var _middlewareData$arrow, _middlewareData$flip;\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        fallbackAxisSideDirection = 'none',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n\n      // If a reset by the arrow was caused due to an alignment offset being\n      // added, we should skip any logic now since `flip()` has already done its\n      // work.\n      // https://github.com/floating-ui/floating-ui/issues/2549#issuecomment-1719601643\n      if ((_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      const side = getSide(placement);\n      const isBasePlacement = getSide(initialPlacement) === initialPlacement;\n      const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      if (!specifiedFallbackPlacements && fallbackAxisSideDirection !== 'none') {\n        fallbackPlacements.push(...getOppositeAxisPlacements(initialPlacement, flipAlignment, fallbackAxisSideDirection, rtl));\n      }\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n      if (checkCrossAxis) {\n        const sides = getAlignmentSides(placement, rects, rtl);\n        overflows.push(overflow[sides[0]], overflow[sides[1]]);\n      }\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }];\n\n      // One or more sides is overflowing.\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip2, _overflowsData$filter;\n        const nextIndex = (((_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) || 0) + 1;\n        const nextPlacement = placements[nextIndex];\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle.\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        // First, find the candidates that fit on the mainAxis side of overflow,\n        // then find the placement that fits the best on the main crossAxis side.\n        let resetPlacement = (_overflowsData$filter = overflowsData.filter(d => d.overflows[0] <= 0).sort((a, b) => a.overflows[1] - b.overflows[1])[0]) == null ? void 0 : _overflowsData$filter.placement;\n\n        // Otherwise fallback.\n        if (!resetPlacement) {\n          switch (fallbackStrategy) {\n            case 'bestFit':\n              {\n                var _overflowsData$map$so;\n                const placement = (_overflowsData$map$so = overflowsData.map(d => [d.placement, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0];\n                if (placement) {\n                  resetPlacement = placement;\n                }\n                break;\n              }\n            case 'initialPlacement':\n              resetPlacement = initialPlacement;\n              break;\n          }\n        }\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n      return {};\n    }\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'hide',\n    options,\n    async fn(state) {\n      const {\n        rects\n      } = state;\n      const {\n        strategy = 'referenceHidden',\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(state, {\n              ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n        default:\n          {\n            return {};\n          }\n      }\n    }\n  };\n};\n\nfunction getBoundingRect(rects) {\n  const minX = min(...rects.map(rect => rect.left));\n  const minY = min(...rects.map(rect => rect.top));\n  const maxX = max(...rects.map(rect => rect.right));\n  const maxY = max(...rects.map(rect => rect.bottom));\n  return {\n    x: minX,\n    y: minY,\n    width: maxX - minX,\n    height: maxY - minY\n  };\n}\nfunction getRectsByLine(rects) {\n  const sortedRects = rects.slice().sort((a, b) => a.y - b.y);\n  const groups = [];\n  let prevRect = null;\n  for (let i = 0; i < sortedRects.length; i++) {\n    const rect = sortedRects[i];\n    if (!prevRect || rect.y - prevRect.y > prevRect.height / 2) {\n      groups.push([rect]);\n    } else {\n      groups[groups.length - 1].push(rect);\n    }\n    prevRect = rect;\n  }\n  return groups.map(rect => rectToClientRect(getBoundingRect(rect)));\n}\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'inline',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = state;\n      // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n      const {\n        padding = 2,\n        x,\n        y\n      } = evaluate(options, state);\n      const nativeClientRects = Array.from((await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) || []);\n      const clientRects = getRectsByLine(nativeClientRects);\n      const fallback = rectToClientRect(getBoundingRect(nativeClientRects));\n      const paddingObject = getPaddingObject(padding);\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined.\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          // Find the first rect in which the point is fully inside.\n          return clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom) || fallback;\n        }\n\n        // There are 2 or more connected rects.\n        if (clientRects.length >= 2) {\n          if (getSideAxis(placement) === 'y') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n        return fallback;\n      }\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\n// For type backwards-compatibility, the `OffsetOptions` type was also\n// Derivable.\n\nasync function convertValueToCoords(state, options) {\n  const {\n    placement,\n    platform,\n    elements\n  } = state;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getSideAxis(placement) === 'y';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = evaluate(options, state);\n\n  // eslint-disable-next-line prefer-const\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = function (options) {\n  if (options === void 0) {\n    options = 0;\n  }\n  return {\n    name: 'offset',\n    options,\n    async fn(state) {\n      var _middlewareData$offse, _middlewareData$arrow;\n      const {\n        x,\n        y,\n        placement,\n        middlewareData\n      } = state;\n      const diffCoords = await convertValueToCoords(state, options);\n\n      // If the placement is the same and the arrow caused an alignment offset\n      // then we don't need to change the positioning coordinates.\n      if (placement === ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse.placement) && (_middlewareData$arrow = middlewareData.arrow) != null && _middlewareData$arrow.alignmentOffset) {\n        return {};\n      }\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: {\n          ...diffCoords,\n          placement\n        }\n      };\n    }\n  };\n};\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'shift',\n    options,\n    async fn(state) {\n      const {\n        x,\n        y,\n        placement\n      } = state;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const crossAxis = getSideAxis(getSide(placement));\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = clamp(min, mainAxisCoord, max);\n      }\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = clamp(min, crossAxisCoord, max);\n      }\n      const limitedCoords = limiter.fn({\n        ...state,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return {\n        ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    options,\n    fn(state) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = state;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = evaluate(options, state);\n      const coords = {\n        x,\n        y\n      };\n      const crossAxis = getSideAxis(placement);\n      const mainAxis = getOppositeAxis(crossAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = evaluate(offset, state);\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2;\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? ((_middlewareData$offse = middlewareData.offset) == null ? void 0 : _middlewareData$offse[crossAxis]) || 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : ((_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) || 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n  };\n};\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n  return {\n    name: 'size',\n    options,\n    async fn(state) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = state;\n      const {\n        apply = () => {},\n        ...detectOverflowOptions\n      } = evaluate(options, state);\n      const overflow = await detectOverflow(state, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      const isYAxis = getSideAxis(placement) === 'y';\n      const {\n        width,\n        height\n      } = rects.floating;\n      let heightSide;\n      let widthSide;\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n      const maximumClippingHeight = height - overflow.top - overflow.bottom;\n      const maximumClippingWidth = width - overflow.left - overflow.right;\n      const overflowAvailableHeight = min(height - overflow[heightSide], maximumClippingHeight);\n      const overflowAvailableWidth = min(width - overflow[widthSide], maximumClippingWidth);\n      const noShift = !state.middlewareData.shift;\n      let availableHeight = overflowAvailableHeight;\n      let availableWidth = overflowAvailableWidth;\n      if (isYAxis) {\n        availableWidth = alignment || noShift ? min(overflowAvailableWidth, maximumClippingWidth) : maximumClippingWidth;\n      } else {\n        availableHeight = alignment || noShift ? min(overflowAvailableHeight, maximumClippingHeight) : maximumClippingHeight;\n      }\n      if (noShift && !alignment) {\n        const xMin = max(overflow.left, 0);\n        const xMax = max(overflow.right, 0);\n        const yMin = max(overflow.top, 0);\n        const yMax = max(overflow.bottom, 0);\n        if (isYAxis) {\n          availableWidth = width - 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right));\n        } else {\n          availableHeight = height - 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom));\n        }\n      }\n      await apply({\n        ...state,\n        availableWidth,\n        availableHeight\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n      if (width !== nextDimensions.width || height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n      return {};\n    }\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, shift, size };\n","function getNodeName(node) {\n  if (isNode(node)) {\n    return (node.nodeName || '').toLowerCase();\n  }\n  // Mocked nodes in testing environments may not be instances of Node. By\n  // returning `#document` an infinite loop won't occur.\n  // https://github.com/floating-ui/floating-ui/issues/2317\n  return '#document';\n}\nfunction getWindow(node) {\n  var _node$ownerDocument;\n  return (node == null || (_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.defaultView) || window;\n}\nfunction getDocumentElement(node) {\n  var _ref;\n  return (_ref = (isNode(node) ? node.ownerDocument : node.document) || window.document) == null ? void 0 : _ref.documentElement;\n}\nfunction isNode(value) {\n  return value instanceof Node || value instanceof getWindow(value).Node;\n}\nfunction isElement(value) {\n  return value instanceof Element || value instanceof getWindow(value).Element;\n}\nfunction isHTMLElement(value) {\n  return value instanceof HTMLElement || value instanceof getWindow(value).HTMLElement;\n}\nfunction isShadowRoot(value) {\n  // Browsers without `ShadowRoot` support.\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n  return value instanceof ShadowRoot || value instanceof getWindow(value).ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  const {\n    overflow,\n    overflowX,\n    overflowY,\n    display\n  } = getComputedStyle(element);\n  return /auto|scroll|overlay|hidden|clip/.test(overflow + overflowY + overflowX) && !['inline', 'contents'].includes(display);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isTopLayer(element) {\n  return [':popover-open', ':modal'].some(selector => {\n    try {\n      return element.matches(selector);\n    } catch (e) {\n      return false;\n    }\n  });\n}\nfunction isContainingBlock(elementOrCss) {\n  const webkit = isWebKit();\n  const css = isElement(elementOrCss) ? getComputedStyle(elementOrCss) : elementOrCss;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  return css.transform !== 'none' || css.perspective !== 'none' || (css.containerType ? css.containerType !== 'normal' : false) || !webkit && (css.backdropFilter ? css.backdropFilter !== 'none' : false) || !webkit && (css.filter ? css.filter !== 'none' : false) || ['transform', 'perspective', 'filter'].some(value => (css.willChange || '').includes(value)) || ['paint', 'layout', 'strict', 'content'].some(value => (css.contain || '').includes(value));\n}\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n  while (isHTMLElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else if (isTopLayer(currentNode)) {\n      return null;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  return null;\n}\nfunction isWebKit() {\n  if (typeof CSS === 'undefined' || !CSS.supports) return false;\n  return CSS.supports('-webkit-backdrop-filter', 'none');\n}\nfunction isLastTraversableNode(node) {\n  return ['html', 'body', '#document'].includes(getNodeName(node));\n}\nfunction getComputedStyle(element) {\n  return getWindow(element).getComputedStyle(element);\n}\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n  return {\n    scrollLeft: element.scrollX,\n    scrollTop: element.scrollY\n  };\n}\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n  const result =\n  // Step into the shadow DOM of the parent of a slotted node.\n  node.assignedSlot ||\n  // DOM Element detected.\n  node.parentNode ||\n  // ShadowRoot detected.\n  isShadowRoot(node) && node.host ||\n  // Fallback.\n  getDocumentElement(node);\n  return isShadowRoot(result) ? result.host : result;\n}\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n  if (isLastTraversableNode(parentNode)) {\n    return node.ownerDocument ? node.ownerDocument.body : node.body;\n  }\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n  return getNearestOverflowAncestor(parentNode);\n}\nfunction getOverflowAncestors(node, list, traverseIframes) {\n  var _node$ownerDocument2;\n  if (list === void 0) {\n    list = [];\n  }\n  if (traverseIframes === void 0) {\n    traverseIframes = true;\n  }\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument2 = node.ownerDocument) == null ? void 0 : _node$ownerDocument2.body);\n  const win = getWindow(scrollableAncestor);\n  if (isBody) {\n    return list.concat(win, win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : [], win.frameElement && traverseIframes ? getOverflowAncestors(win.frameElement) : []);\n  }\n  return list.concat(scrollableAncestor, getOverflowAncestors(scrollableAncestor, [], traverseIframes));\n}\n\nexport { getComputedStyle, getContainingBlock, getDocumentElement, getNearestOverflowAncestor, getNodeName, getNodeScroll, getOverflowAncestors, getParentNode, getWindow, isContainingBlock, isElement, isHTMLElement, isLastTraversableNode, isNode, isOverflowElement, isShadowRoot, isTableElement, isTopLayer, isWebKit };\n","import { rectToClientRect, detectOverflow as detectOverflow$1, offset as offset$1, autoPlacement as autoPlacement$1, shift as shift$1, flip as flip$1, size as size$1, hide as hide$1, arrow as arrow$1, inline as inline$1, limitShift as limitShift$1, computePosition as computePosition$1 } from '@floating-ui/core';\nimport { round, createCoords, max, min, floor } from '@floating-ui/utils';\nimport { getComputedStyle, isHTMLElement, isElement, getWindow, isWebKit, getDocumentElement, isTopLayer, getNodeName, isOverflowElement, getNodeScroll, getOverflowAncestors, getParentNode, isLastTraversableNode, isContainingBlock, isTableElement, getContainingBlock } from '@floating-ui/utils/dom';\nexport { getOverflowAncestors } from '@floating-ui/utils/dom';\n\nfunction getCssDimensions(element) {\n  const css = getComputedStyle(element);\n  // In testing environments, the `width` and `height` properties are empty\n  // strings for SVG elements, returning NaN. Fallback to `0` in this case.\n  let width = parseFloat(css.width) || 0;\n  let height = parseFloat(css.height) || 0;\n  const hasOffset = isHTMLElement(element);\n  const offsetWidth = hasOffset ? element.offsetWidth : width;\n  const offsetHeight = hasOffset ? element.offsetHeight : height;\n  const shouldFallback = round(width) !== offsetWidth || round(height) !== offsetHeight;\n  if (shouldFallback) {\n    width = offsetWidth;\n    height = offsetHeight;\n  }\n  return {\n    width,\n    height,\n    $: shouldFallback\n  };\n}\n\nfunction unwrapElement(element) {\n  return !isElement(element) ? element.contextElement : element;\n}\n\nfunction getScale(element) {\n  const domElement = unwrapElement(element);\n  if (!isHTMLElement(domElement)) {\n    return createCoords(1);\n  }\n  const rect = domElement.getBoundingClientRect();\n  const {\n    width,\n    height,\n    $\n  } = getCssDimensions(domElement);\n  let x = ($ ? round(rect.width) : rect.width) / width;\n  let y = ($ ? round(rect.height) : rect.height) / height;\n\n  // 0, NaN, or Infinity should always fallback to 1.\n\n  if (!x || !Number.isFinite(x)) {\n    x = 1;\n  }\n  if (!y || !Number.isFinite(y)) {\n    y = 1;\n  }\n  return {\n    x,\n    y\n  };\n}\n\nconst noOffsets = /*#__PURE__*/createCoords(0);\nfunction getVisualOffsets(element) {\n  const win = getWindow(element);\n  if (!isWebKit() || !win.visualViewport) {\n    return noOffsets;\n  }\n  return {\n    x: win.visualViewport.offsetLeft,\n    y: win.visualViewport.offsetTop\n  };\n}\nfunction shouldAddVisualOffsets(element, isFixed, floatingOffsetParent) {\n  if (isFixed === void 0) {\n    isFixed = false;\n  }\n  if (!floatingOffsetParent || isFixed && floatingOffsetParent !== getWindow(element)) {\n    return false;\n  }\n  return isFixed;\n}\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy, offsetParent) {\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n  const clientRect = element.getBoundingClientRect();\n  const domElement = unwrapElement(element);\n  let scale = createCoords(1);\n  if (includeScale) {\n    if (offsetParent) {\n      if (isElement(offsetParent)) {\n        scale = getScale(offsetParent);\n      }\n    } else {\n      scale = getScale(element);\n    }\n  }\n  const visualOffsets = shouldAddVisualOffsets(domElement, isFixedStrategy, offsetParent) ? getVisualOffsets(domElement) : createCoords(0);\n  let x = (clientRect.left + visualOffsets.x) / scale.x;\n  let y = (clientRect.top + visualOffsets.y) / scale.y;\n  let width = clientRect.width / scale.x;\n  let height = clientRect.height / scale.y;\n  if (domElement) {\n    const win = getWindow(domElement);\n    const offsetWin = offsetParent && isElement(offsetParent) ? getWindow(offsetParent) : offsetParent;\n    let currentWin = win;\n    let currentIFrame = currentWin.frameElement;\n    while (currentIFrame && offsetParent && offsetWin !== currentWin) {\n      const iframeScale = getScale(currentIFrame);\n      const iframeRect = currentIFrame.getBoundingClientRect();\n      const css = getComputedStyle(currentIFrame);\n      const left = iframeRect.left + (currentIFrame.clientLeft + parseFloat(css.paddingLeft)) * iframeScale.x;\n      const top = iframeRect.top + (currentIFrame.clientTop + parseFloat(css.paddingTop)) * iframeScale.y;\n      x *= iframeScale.x;\n      y *= iframeScale.y;\n      width *= iframeScale.x;\n      height *= iframeScale.y;\n      x += left;\n      y += top;\n      currentWin = getWindow(currentIFrame);\n      currentIFrame = currentWin.frameElement;\n    }\n  }\n  return rectToClientRect({\n    width,\n    height,\n    x,\n    y\n  });\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    elements,\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isFixed = strategy === 'fixed';\n  const documentElement = getDocumentElement(offsetParent);\n  const topLayer = elements ? isTopLayer(elements.floating) : false;\n  if (offsetParent === documentElement || topLayer && isFixed) {\n    return rect;\n  }\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  let scale = createCoords(1);\n  const offsets = createCoords(0);\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent);\n      scale = getScale(offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    }\n  }\n  return {\n    width: rect.width * scale.x,\n    height: rect.height * scale.y,\n    x: rect.x * scale.x - scroll.scrollLeft * scale.x + offsets.x,\n    y: rect.y * scale.y - scroll.scrollTop * scale.y + offsets.y\n  };\n}\n\nfunction getClientRects(element) {\n  return Array.from(element.getClientRects());\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\n// Gets the entire size of the scrollable document area, even extending outside\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable.\nfunction getDocumentRect(element) {\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = element.ownerDocument.body;\n  const width = max(html.scrollWidth, html.clientWidth, body.scrollWidth, body.clientWidth);\n  const height = max(html.scrollHeight, html.clientHeight, body.scrollHeight, body.clientHeight);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n  if (getComputedStyle(body).direction === 'rtl') {\n    x += max(html.clientWidth, body.clientWidth) - width;\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const visualViewportBased = isWebKit();\n    if (!visualViewportBased || visualViewportBased && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// Returns the inner client rect, subtracting scrollbars if present.\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, true, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  const scale = isHTMLElement(element) ? getScale(element) : createCoords(1);\n  const width = element.clientWidth * scale.x;\n  const height = element.clientHeight * scale.y;\n  const x = left * scale.x;\n  const y = top * scale.y;\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\nfunction getClientRectFromClippingAncestor(element, clippingAncestor, strategy) {\n  let rect;\n  if (clippingAncestor === 'viewport') {\n    rect = getViewportRect(element, strategy);\n  } else if (clippingAncestor === 'document') {\n    rect = getDocumentRect(getDocumentElement(element));\n  } else if (isElement(clippingAncestor)) {\n    rect = getInnerBoundingClientRect(clippingAncestor, strategy);\n  } else {\n    const visualOffsets = getVisualOffsets(element);\n    rect = {\n      ...clippingAncestor,\n      x: clippingAncestor.x - visualOffsets.x,\n      y: clippingAncestor.y - visualOffsets.y\n    };\n  }\n  return rectToClientRect(rect);\n}\nfunction hasFixedPositionAncestor(element, stopNode) {\n  const parentNode = getParentNode(element);\n  if (parentNode === stopNode || !isElement(parentNode) || isLastTraversableNode(parentNode)) {\n    return false;\n  }\n  return getComputedStyle(parentNode).position === 'fixed' || hasFixedPositionAncestor(parentNode, stopNode);\n}\n\n// A \"clipping ancestor\" is an `overflow` element with the characteristic of\n// clipping (or hiding) child elements. This returns all clipping ancestors\n// of the given element up the tree.\nfunction getClippingElementAncestors(element, cache) {\n  const cachedResult = cache.get(element);\n  if (cachedResult) {\n    return cachedResult;\n  }\n  let result = getOverflowAncestors(element, [], false).filter(el => isElement(el) && getNodeName(el) !== 'body');\n  let currentContainingBlockComputedStyle = null;\n  const elementIsFixed = getComputedStyle(element).position === 'fixed';\n  let currentNode = elementIsFixed ? getParentNode(element) : element;\n\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n  while (isElement(currentNode) && !isLastTraversableNode(currentNode)) {\n    const computedStyle = getComputedStyle(currentNode);\n    const currentNodeIsContaining = isContainingBlock(currentNode);\n    if (!currentNodeIsContaining && computedStyle.position === 'fixed') {\n      currentContainingBlockComputedStyle = null;\n    }\n    const shouldDropCurrentNode = elementIsFixed ? !currentNodeIsContaining && !currentContainingBlockComputedStyle : !currentNodeIsContaining && computedStyle.position === 'static' && !!currentContainingBlockComputedStyle && ['absolute', 'fixed'].includes(currentContainingBlockComputedStyle.position) || isOverflowElement(currentNode) && !currentNodeIsContaining && hasFixedPositionAncestor(element, currentNode);\n    if (shouldDropCurrentNode) {\n      // Drop non-containing blocks.\n      result = result.filter(ancestor => ancestor !== currentNode);\n    } else {\n      // Record last containing block for next iteration.\n      currentContainingBlockComputedStyle = computedStyle;\n    }\n    currentNode = getParentNode(currentNode);\n  }\n  cache.set(element, result);\n  return result;\n}\n\n// Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors.\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const elementClippingAncestors = boundary === 'clippingAncestors' ? isTopLayer(element) ? [] : getClippingElementAncestors(element, this._c) : [].concat(boundary);\n  const clippingAncestors = [...elementClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nfunction getDimensions(element) {\n  const {\n    width,\n    height\n  } = getCssDimensions(element);\n  return {\n    width,\n    height\n  };\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const isFixed = strategy === 'fixed';\n  const rect = getBoundingClientRect(element, true, isFixed, offsetParent);\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = createCoords(0);\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && !isFixed) {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n    if (isOffsetParentAnElement) {\n      const offsetRect = getBoundingClientRect(offsetParent, true, isFixed, offsetParent);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n  const x = rect.left + scroll.scrollLeft - offsets.x;\n  const y = rect.top + scroll.scrollTop - offsets.y;\n  return {\n    x,\n    y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction isStaticPositioned(element) {\n  return getComputedStyle(element).position === 'static';\n}\n\nfunction getTrueOffsetParent(element, polyfill) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n  if (polyfill) {\n    return polyfill(element);\n  }\n  return element.offsetParent;\n}\n\n// Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\nfunction getOffsetParent(element, polyfill) {\n  const win = getWindow(element);\n  if (isTopLayer(element)) {\n    return win;\n  }\n  if (!isHTMLElement(element)) {\n    let svgOffsetParent = getParentNode(element);\n    while (svgOffsetParent && !isLastTraversableNode(svgOffsetParent)) {\n      if (isElement(svgOffsetParent) && !isStaticPositioned(svgOffsetParent)) {\n        return svgOffsetParent;\n      }\n      svgOffsetParent = getParentNode(svgOffsetParent);\n    }\n    return win;\n  }\n  let offsetParent = getTrueOffsetParent(element, polyfill);\n  while (offsetParent && isTableElement(offsetParent) && isStaticPositioned(offsetParent)) {\n    offsetParent = getTrueOffsetParent(offsetParent, polyfill);\n  }\n  if (offsetParent && isLastTraversableNode(offsetParent) && isStaticPositioned(offsetParent) && !isContainingBlock(offsetParent)) {\n    return win;\n  }\n  return offsetParent || getContainingBlock(element) || win;\n}\n\nconst getElementRects = async function (data) {\n  const getOffsetParentFn = this.getOffsetParent || getOffsetParent;\n  const getDimensionsFn = this.getDimensions;\n  const floatingDimensions = await getDimensionsFn(data.floating);\n  return {\n    reference: getRectRelativeToOffsetParent(data.reference, await getOffsetParentFn(data.floating), data.strategy),\n    floating: {\n      x: 0,\n      y: 0,\n      width: floatingDimensions.width,\n      height: floatingDimensions.height\n    }\n  };\n};\n\nfunction isRTL(element) {\n  return getComputedStyle(element).direction === 'rtl';\n}\n\nconst platform = {\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  getDocumentElement,\n  getClippingRect,\n  getOffsetParent,\n  getElementRects,\n  getClientRects,\n  getDimensions,\n  getScale,\n  isElement,\n  isRTL\n};\n\n// https://samthor.au/2021/observing-dom/\nfunction observeMove(element, onMove) {\n  let io = null;\n  let timeoutId;\n  const root = getDocumentElement(element);\n  function cleanup() {\n    var _io;\n    clearTimeout(timeoutId);\n    (_io = io) == null || _io.disconnect();\n    io = null;\n  }\n  function refresh(skip, threshold) {\n    if (skip === void 0) {\n      skip = false;\n    }\n    if (threshold === void 0) {\n      threshold = 1;\n    }\n    cleanup();\n    const {\n      left,\n      top,\n      width,\n      height\n    } = element.getBoundingClientRect();\n    if (!skip) {\n      onMove();\n    }\n    if (!width || !height) {\n      return;\n    }\n    const insetTop = floor(top);\n    const insetRight = floor(root.clientWidth - (left + width));\n    const insetBottom = floor(root.clientHeight - (top + height));\n    const insetLeft = floor(left);\n    const rootMargin = -insetTop + \"px \" + -insetRight + \"px \" + -insetBottom + \"px \" + -insetLeft + \"px\";\n    const options = {\n      rootMargin,\n      threshold: max(0, min(1, threshold)) || 1\n    };\n    let isFirstUpdate = true;\n    function handleObserve(entries) {\n      const ratio = entries[0].intersectionRatio;\n      if (ratio !== threshold) {\n        if (!isFirstUpdate) {\n          return refresh();\n        }\n        if (!ratio) {\n          // If the reference is clipped, the ratio is 0. Throttle the refresh\n          // to prevent an infinite loop of updates.\n          timeoutId = setTimeout(() => {\n            refresh(false, 1e-7);\n          }, 1000);\n        } else {\n          refresh(false, ratio);\n        }\n      }\n      isFirstUpdate = false;\n    }\n\n    // Older browsers don't support a `document` as the root and will throw an\n    // error.\n    try {\n      io = new IntersectionObserver(handleObserve, {\n        ...options,\n        // Handle <iframe>s\n        root: root.ownerDocument\n      });\n    } catch (e) {\n      io = new IntersectionObserver(handleObserve, options);\n    }\n    io.observe(element);\n  }\n  refresh(true);\n  return cleanup;\n}\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * Should only be called when the floating element is mounted on the DOM or\n * visible on the screen.\n * @returns cleanup function that should be invoked when the floating element is\n * removed from the DOM or hidden from the screen.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const {\n    ancestorScroll = true,\n    ancestorResize = true,\n    elementResize = typeof ResizeObserver === 'function',\n    layoutShift = typeof IntersectionObserver === 'function',\n    animationFrame = false\n  } = options;\n  const referenceEl = unwrapElement(reference);\n  const ancestors = ancestorScroll || ancestorResize ? [...(referenceEl ? getOverflowAncestors(referenceEl) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  const cleanupIo = referenceEl && layoutShift ? observeMove(referenceEl, update) : null;\n  let reobserveFrame = -1;\n  let resizeObserver = null;\n  if (elementResize) {\n    resizeObserver = new ResizeObserver(_ref => {\n      let [firstEntry] = _ref;\n      if (firstEntry && firstEntry.target === referenceEl && resizeObserver) {\n        // Prevent update loops when using the `size` middleware.\n        // https://github.com/floating-ui/floating-ui/issues/1740\n        resizeObserver.unobserve(floating);\n        cancelAnimationFrame(reobserveFrame);\n        reobserveFrame = requestAnimationFrame(() => {\n          var _resizeObserver;\n          (_resizeObserver = resizeObserver) == null || _resizeObserver.observe(floating);\n        });\n      }\n      update();\n    });\n    if (referenceEl && !animationFrame) {\n      resizeObserver.observe(referenceEl);\n    }\n    resizeObserver.observe(floating);\n  }\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n  if (animationFrame) {\n    frameLoop();\n  }\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n  update();\n  return () => {\n    var _resizeObserver2;\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    cleanupIo == null || cleanupIo();\n    (_resizeObserver2 = resizeObserver) == null || _resizeObserver2.disconnect();\n    resizeObserver = null;\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary on each side.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nconst detectOverflow = detectOverflow$1;\n\n/**\n * Modifies the placement by translating the floating element along the\n * specified axes.\n * A number (shorthand for `mainAxis` or distance), or an axes configuration\n * object may be passed.\n * @see https://floating-ui.com/docs/offset\n */\nconst offset = offset$1;\n\n/**\n * Optimizes the visibility of the floating element by choosing the placement\n * that has the most space available automatically, without needing to specify a\n * preferred placement. Alternative to `flip`.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = autoPlacement$1;\n\n/**\n * Optimizes the visibility of the floating element by shifting it in order to\n * keep it in view when it will overflow the clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = shift$1;\n\n/**\n * Optimizes the visibility of the floating element by flipping the `placement`\n * in order to keep it in view when the preferred placement(s) will overflow the\n * clipping boundary. Alternative to `autoPlacement`.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = flip$1;\n\n/**\n * Provides data that allows you to change the size of the floating element —\n * for instance, prevent it from overflowing the clipping boundary or match the\n * width of the reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = size$1;\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = hide$1;\n\n/**\n * Provides data to position an inner element of the floating element so that it\n * appears centered to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = arrow$1;\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = inline$1;\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = limitShift$1;\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a given reference element.\n */\nconst computePosition = (reference, floating, options) => {\n  // This caches the expensive `getClippingElementAncestors` function so that\n  // multiple lifecycle resets re-use the same result. It only lives for a\n  // single call. If other functions become expensive, we can add them as well.\n  const cache = new Map();\n  const mergedOptions = {\n    platform,\n    ...options\n  };\n  const platformWithCache = {\n    ...mergedOptions.platform,\n    _c: cache\n  };\n  return computePosition$1(reference, floating, {\n    ...mergedOptions,\n    platform: platformWithCache\n  });\n};\n\nexport { arrow, autoPlacement, autoUpdate, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, platform, shift, size };\n","import { isContainingBlock } from '@floating-ui/utils/dom';\n\nfunction offsetParent(element) {\n    return offsetParentPolyfill(element);\n}\nfunction offsetTop(element) {\n    return offsetTopLeftPolyfill(element, 'offsetTop');\n}\nfunction offsetLeft(element) {\n    return offsetTopLeftPolyfill(element, 'offsetLeft');\n}\nfunction flatTreeParent(element) {\n    if (element.assignedSlot) {\n        return element.assignedSlot;\n    }\n    if (element.parentNode instanceof ShadowRoot) {\n        return element.parentNode.host;\n    }\n    return element.parentNode;\n}\nfunction ancestorTreeScopes(element) {\n    const scopes = new Set();\n    let currentScope = element.getRootNode();\n    while (currentScope) {\n        scopes.add(currentScope);\n        currentScope = currentScope.parentNode\n            ? currentScope.parentNode.getRootNode()\n            : null;\n    }\n    return scopes;\n}\nfunction offsetParentPolyfill(element) {\n    // Do an initial walk to check for display:none ancestors.\n    for (let ancestor = element; ancestor; ancestor = flatTreeParent(ancestor)) {\n        if (!(ancestor instanceof Element)) {\n            continue;\n        }\n        if (getComputedStyle(ancestor).display === 'none') {\n            return null;\n        }\n    }\n    for (let ancestor = flatTreeParent(element); ancestor; ancestor = flatTreeParent(ancestor)) {\n        if (!(ancestor instanceof Element)) {\n            continue;\n        }\n        const style = getComputedStyle(ancestor);\n        // Display:contents nodes aren't in the layout tree, so they should be skipped.\n        if (style.display === 'contents') {\n            continue;\n        }\n        if (style.position !== 'static' || isContainingBlock(style)) {\n            return ancestor;\n        }\n        if (ancestor.tagName === 'BODY') {\n            return ancestor;\n        }\n    }\n    return null;\n}\nfunction offsetTopLeftPolyfill(element, offsetTopOrLeft) {\n    let value = element[offsetTopOrLeft];\n    let nextOffsetParent = offsetParentPolyfill(element);\n    const scopes = ancestorTreeScopes(element);\n    while (nextOffsetParent && !scopes.has(nextOffsetParent.getRootNode())) {\n        value -= nextOffsetParent[offsetTopOrLeft];\n        nextOffsetParent = offsetParentPolyfill(nextOffsetParent);\n    }\n    return value;\n}\n\nexport { offsetLeft, offsetParent, offsetTop };\n","import {\n  arrow,\n  autoPlacement,\n  autoUpdate,\n  computePosition,\n  flip,\n  hide,\n  Middleware,\n  offset,\n  Placement,\n  platform,\n  shift,\n  Side,\n  Strategy,\n  VirtualElement,\n} from \"@floating-ui/dom\";\nimport { debounce, DebouncedFunc } from \"lodash-es\";\nimport { offsetParent } from \"composed-offset-position\";\nimport { Layout } from \"../components/interfaces\";\nimport { DEBOUNCE } from \"./resources\";\nimport { getElementDir } from \"./dom\";\nimport { isBrowser } from \"./browser\";\n\n(function setUpFloatingUiForShadowDomPositioning(): void {\n  if (isBrowser()) {\n    const originalGetOffsetParent = platform.getOffsetParent;\n    platform.getOffsetParent = (element: Element) => originalGetOffsetParent(element, offsetParent);\n  }\n})();\n\nfunction roundByDPR(value: number): number {\n  const dpr = window.devicePixelRatio || 1;\n  return Math.round(value * dpr) / dpr;\n}\n\n/**\n * Positions the floating element relative to the reference element.\n *\n * **Note:** exported for testing purposes only\n *\n * @param root0\n * @param root0.referenceEl\n * @param root0.floatingEl\n * @param root0.overlayPositioning\n * @param root0.placement\n * @param root0.flipDisabled\n * @param root0.flipPlacements\n * @param root0.offsetDistance\n * @param root0.offsetSkidding\n * @param root0.arrowEl\n * @param root0.type\n * @param component\n * @param root0.referenceEl.referenceEl\n * @param root0.referenceEl.floatingEl\n * @param root0.referenceEl.overlayPositioning\n * @param root0.referenceEl.placement\n * @param root0.referenceEl.flipDisabled\n * @param root0.referenceEl.flipPlacements\n * @param root0.referenceEl.offsetDistance\n * @param root0.referenceEl.offsetSkidding\n * @param root0.referenceEl.arrowEl\n * @param root0.referenceEl.type\n * @param component.referenceEl\n * @param component.floatingEl\n * @param component.overlayPositioning\n * @param component.placement\n * @param component.flipDisabled\n * @param component.flipPlacements\n * @param component.offsetDistance\n * @param component.offsetSkidding\n * @param component.arrowEl\n * @param component.type\n */\nexport const positionFloatingUI =\n  /* we export arrow function to allow us to spy on it during testing */\n  async (\n    component: FloatingUIComponent,\n    {\n      referenceEl,\n      floatingEl,\n      overlayPositioning = \"absolute\",\n      placement,\n      flipDisabled,\n      flipPlacements,\n      offsetDistance,\n      offsetSkidding,\n      arrowEl,\n      type,\n    }: {\n      referenceEl: ReferenceElement;\n      floatingEl: HTMLElement;\n      overlayPositioning: Strategy;\n      placement: LogicalPlacement;\n      flipDisabled?: boolean;\n      flipPlacements?: FlipPlacement[];\n      offsetDistance?: number;\n      offsetSkidding?: number;\n      arrowEl?: SVGElement;\n      type: UIType;\n    },\n  ): Promise<void> => {\n    if (!referenceEl || !floatingEl) {\n      return null;\n    }\n\n    const {\n      x,\n      y,\n      placement: effectivePlacement,\n      strategy: position,\n      middlewareData,\n    } = await computePosition(referenceEl, floatingEl, {\n      strategy: overlayPositioning,\n      placement:\n        placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\"\n          ? undefined\n          : getEffectivePlacement(floatingEl, placement),\n      middleware: getMiddleware({\n        placement,\n        flipDisabled,\n        flipPlacements: flipPlacements?.map((placement) => getEffectivePlacement(floatingEl, placement)),\n        offsetDistance,\n        offsetSkidding,\n        arrowEl,\n        type,\n      }),\n    });\n\n    if (arrowEl && middlewareData.arrow) {\n      const { x, y } = middlewareData.arrow;\n      const side = effectivePlacement.split(\"-\")[0] as Side;\n      const alignment = x != null ? \"left\" : \"top\";\n      const transform = ARROW_CSS_TRANSFORM[side];\n      const reset = { left: \"\", top: \"\", bottom: \"\", right: \"\" };\n\n      if (\"floatingLayout\" in component) {\n        component.floatingLayout = side === \"left\" || side === \"right\" ? \"horizontal\" : \"vertical\";\n      }\n\n      Object.assign(arrowEl.style, {\n        ...reset,\n        [alignment]: `${alignment == \"left\" ? x : y}px`,\n        [side]: \"100%\",\n        transform,\n      });\n    }\n\n    const referenceHidden = middlewareData.hide?.referenceHidden;\n    const visibility = referenceHidden ? \"hidden\" : null;\n    const pointerEvents = visibility ? \"none\" : null;\n\n    floatingEl.setAttribute(placementDataAttribute, effectivePlacement);\n\n    const { open } = component;\n\n    Object.assign(floatingEl.style, {\n      visibility,\n      pointerEvents,\n      position,\n      transform: open ? `translate(${roundByDPR(x)}px,${roundByDPR(y)}px)` : \"\",\n      top: 0,\n      left: 0,\n    });\n  };\n\n/**\n * Exported for testing purposes only\n */\nexport const placementDataAttribute = \"data-placement\";\n\nexport type ReferenceElement = VirtualElement | Element;\n\ntype UIType = \"menu\" | \"tooltip\" | \"popover\";\nexport type OverlayPositioning = Strategy;\n\n/**\n * Variation Placements change based on element direction.\n *\n * These variation placements will automatically flip \"left\"/\"right\" depending on LTR/RTL direction.\n *\n * Floating-ui has no plans to offer this functionality out of the box at this time.\n *\n * see: https://github.com/floating-ui/floating-ui/issues/1563 and https://github.com/floating-ui/floating-ui/discussions/1549\n */\n\nexport type EffectivePlacement = Placement;\n\nexport const placements = [\n  // auto placements\n  \"auto\",\n  \"auto-start\",\n  \"auto-end\",\n  // placements\n  \"top\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right\",\n  \"right-start\",\n  \"right-end\",\n  \"left\",\n  \"left-start\",\n  \"left-end\",\n  // variation placements\n  \"leading-start\",\n  \"leading\",\n  \"leading-end\",\n  \"trailing-end\",\n  \"trailing\",\n  \"trailing-start\",\n] as const;\n\nexport type LogicalPlacement = (typeof placements)[number];\n\nexport const effectivePlacements: EffectivePlacement[] = [\n  \"top\",\n  \"bottom\",\n  \"right\",\n  \"left\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right-start\",\n  \"right-end\",\n  \"left-start\",\n  \"left-end\",\n];\n\nexport const menuPlacements: MenuPlacement[] = [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"];\n\nexport const menuEffectivePlacements: EffectivePlacement[] = [\n  \"top-start\",\n  \"top\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom\",\n  \"bottom-end\",\n];\n\nexport type FlipPlacement = Exclude<LogicalPlacement, \"auto\" | \"auto-start\" | \"auto-end\">;\n\nexport const flipPlacements: FlipPlacement[] = [\n  \"top\",\n  \"bottom\",\n  \"right\",\n  \"left\",\n  \"top-start\",\n  \"top-end\",\n  \"bottom-start\",\n  \"bottom-end\",\n  \"right-start\",\n  \"right-end\",\n  \"left-start\",\n  \"left-end\",\n  \"leading\",\n  \"trailing\",\n  \"leading-start\",\n  \"leading-end\",\n  \"trailing-start\",\n  \"trailing-end\",\n];\n\nexport type MenuPlacement = Extract<\n  LogicalPlacement,\n  \"top-start\" | \"top\" | \"top-end\" | \"bottom-start\" | \"bottom\" | \"bottom-end\"\n>;\n\nexport const defaultMenuPlacement: MenuPlacement = \"bottom-start\";\n\nexport interface FloatingUIComponent {\n  /**\n   * Whether the component is opened.\n   */\n  open: boolean;\n\n  /**\n   * Describes the type of positioning to use for the overlaid content. If your element is in a fixed container, use the 'fixed' value.\n   */\n  overlayPositioning: OverlayPositioning;\n\n  /**\n   * Determines where the component will be positioned relative to the referenceElement.\n   *\n   * Possible values: \"auto\", \"auto-start\", \"auto-end\", \"top\", \"right\", \"bottom\", \"left\", \"top-start\", \"top-end\", \"right-start\", \"right-end\", \"bottom-start\", \"bottom-end\", \"left-start\", \"left-end\", \"leading-start\", \"leading\", \"leading-end\", \"trailing-end\", \"trailing\",  or \"trailing-start\".\n   *\n   */\n  placement: LogicalPlacement;\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed – (internal) when true, it will reposition the component after a delay. the default is false. This is useful for components that have multiple watched properties that schedule repositioning.\n   */\n  reposition: (delayed?: boolean) => Promise<void>;\n\n  /**\n   * Used to store the effective floating layout for components that use arrows.\n   *\n   * This is an internal property and should:\n   *\n   * - only be used for components that support arrows\n   * - use the `@State` decorator\n   * - be initialized to \"vertical\"\n   *\n   * Possible values: \"vertical\" or \"horizontal\".\n   *\n   * See [FloatingArrow](https://github.com/Esri/calcite-design-system/blob/dev/src/components/functional/FloatingArrow.tsx)\n   */\n  floatingLayout?: FloatingLayout;\n}\n\nexport type FloatingLayout = Extract<Layout, \"vertical\" | \"horizontal\">;\n\nexport const FloatingCSS = {\n  animation: \"calcite-floating-ui-anim\",\n  animationActive: \"calcite-floating-ui-anim--active\",\n};\n\nfunction getMiddleware({\n  placement,\n  flipDisabled,\n  flipPlacements,\n  offsetDistance,\n  offsetSkidding,\n  arrowEl,\n  type,\n}: {\n  placement: LogicalPlacement;\n  flipDisabled?: boolean;\n  flipPlacements?: EffectivePlacement[];\n  offsetDistance?: number;\n  offsetSkidding?: number;\n  arrowEl?: SVGElement;\n  type: UIType;\n}): Middleware[] {\n  const defaultMiddleware = [shift(), hide()];\n\n  if (type === \"menu\") {\n    return [\n      ...defaultMiddleware,\n      flip({\n        fallbackPlacements: flipPlacements || [\"top-start\", \"top\", \"top-end\", \"bottom-start\", \"bottom\", \"bottom-end\"],\n      }),\n    ];\n  }\n\n  if (type === \"popover\" || type === \"tooltip\") {\n    const middleware: Middleware[] = [\n      ...defaultMiddleware,\n      offset({\n        mainAxis: typeof offsetDistance === \"number\" ? offsetDistance : 0,\n        crossAxis: typeof offsetSkidding === \"number\" ? offsetSkidding : 0,\n      }),\n    ];\n\n    if (placement === \"auto\" || placement === \"auto-start\" || placement === \"auto-end\") {\n      middleware.push(\n        autoPlacement({ alignment: placement === \"auto-start\" ? \"start\" : placement === \"auto-end\" ? \"end\" : null }),\n      );\n    } else if (!flipDisabled) {\n      middleware.push(flip(flipPlacements ? { fallbackPlacements: flipPlacements } : {}));\n    }\n\n    if (arrowEl) {\n      middleware.push(\n        arrow({\n          element: arrowEl,\n        }),\n      );\n    }\n\n    return middleware;\n  }\n\n  return [];\n}\n\nexport function filterValidFlipPlacements(placements: string[], el: HTMLElement): EffectivePlacement[] {\n  const filteredPlacements = placements.filter((placement: EffectivePlacement) =>\n    flipPlacements.includes(placement),\n  ) as EffectivePlacement[];\n\n  if (filteredPlacements.length !== placements.length) {\n    console.warn(\n      `${el.tagName}: Invalid value found in: flipPlacements. Try any of these: ${flipPlacements\n        .map((placement) => `\"${placement}\"`)\n        .join(\", \")\n        .trim()}`,\n      { el },\n    );\n  }\n\n  return filteredPlacements;\n}\n\nexport function getEffectivePlacement(floatingEl: HTMLElement, placement: LogicalPlacement): EffectivePlacement {\n  const placements = [\"left\", \"right\"];\n\n  if (getElementDir(floatingEl) === \"rtl\") {\n    placements.reverse();\n  }\n\n  return placement.replace(/leading/gi, placements[0]).replace(/trailing/gi, placements[1]) as EffectivePlacement;\n}\n\n/**\n * Convenience function to manage `reposition` calls for FloatingUIComponents that use `positionFloatingUI.\n *\n * Note: this is not needed for components that use `calcite-popover`.\n *\n * @param component - A floating-ui component.\n * @param options - Reposition parameters.\n * @param options.referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param options.floatingEl - The `floatingElement` containing the floating ui.\n * @param options.overlayPositioning - type of positioning to use for the overlaid content.\n * @param options.placement - Determines where the component will be positioned relative to the `referenceElement`.\n * @param options.flipDisabled - Prevents flipping the component's placement when overlapping its `referenceElement`.\n * @param options.flipPlacements - Defines the available placements that can be used when a flip occurs.\n * @param options.offsetDistance - Offsets the position of the popover away from the `referenceElement`.\n * @param options.offsetSkidding - Offsets the position of the component along the `referenceElement`.\n * @param options.arrowEl - A customizable arrow element.\n * @param options.type - The type of floating UI.\n * @param delayed - Reposition the component after a delay.\n * @returns {Promise<void>}\n */\nexport async function reposition(\n  component: FloatingUIComponent,\n  options: Parameters<typeof positionFloatingUI>[1],\n  delayed = false,\n): Promise<void> {\n  if (!component.open || !options.floatingEl || !options.referenceEl) {\n    return;\n  }\n\n  const trackedState = autoUpdatingComponentMap.get(component);\n\n  if (!trackedState) {\n    return runAutoUpdate(component, options.referenceEl, options.floatingEl);\n  }\n\n  const positionFunction = delayed ? getDebouncedReposition(component) : positionFloatingUI;\n\n  await positionFunction(component, options);\n}\n\nfunction getDebouncedReposition(component: FloatingUIComponent): DebouncedFunc<typeof positionFloatingUI> {\n  let debounced = componentToDebouncedRepositionMap.get(component);\n\n  if (debounced) {\n    return debounced;\n  }\n\n  debounced = debounce(positionFloatingUI, DEBOUNCE.reposition, {\n    leading: true,\n    maxWait: DEBOUNCE.reposition,\n  });\n\n  componentToDebouncedRepositionMap.set(component, debounced);\n\n  return debounced;\n}\n\nconst ARROW_CSS_TRANSFORM = {\n  top: \"\",\n  left: \"rotate(-90deg)\",\n  bottom: \"rotate(180deg)\",\n  right: \"rotate(90deg)\",\n};\n\ntype PendingFloatingUIState = {\n  state: \"pending\";\n};\n\ntype ActiveFloatingUIState = {\n  state: \"active\";\n  cleanUp: () => void;\n};\n\ntype TrackedFloatingUIState = PendingFloatingUIState | ActiveFloatingUIState;\n\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nexport const autoUpdatingComponentMap = new WeakMap<FloatingUIComponent, TrackedFloatingUIState>();\n\nconst componentToDebouncedRepositionMap = new WeakMap<FloatingUIComponent, DebouncedFunc<typeof positionFloatingUI>>();\n\nasync function runAutoUpdate(\n  component: FloatingUIComponent,\n  referenceEl: ReferenceElement,\n  floatingEl: HTMLElement,\n): Promise<void> {\n  if (!floatingEl.isConnected) {\n    return;\n  }\n\n  const effectiveAutoUpdate = isBrowser()\n    ? autoUpdate\n    : (_refEl: HTMLElement, _floatingEl: HTMLElement, updateCallback: () => void): (() => void) => {\n        updateCallback();\n        return () => {\n          /* noop */\n        };\n      };\n\n  // we set initial state here to make it available for `reposition` calls\n  autoUpdatingComponentMap.set(component, { state: \"pending\" });\n\n  let repositionPromise: Promise<void>;\n\n  const cleanUp = effectiveAutoUpdate(\n    referenceEl,\n    floatingEl,\n    // callback is invoked immediately\n    () => {\n      const promise = component.reposition();\n\n      if (!repositionPromise) {\n        repositionPromise = promise;\n      }\n    },\n  );\n\n  autoUpdatingComponentMap.set(component, { state: \"active\", cleanUp });\n\n  return repositionPromise;\n}\n\n/**\n * Helper to set up floating element interactions on connectedCallback.\n *\n * @param component - A floating-ui component.\n * @param referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param floatingEl - The `floatingElement` containing the floating ui.\n */\nexport async function connectFloatingUI(\n  component: FloatingUIComponent,\n  referenceEl: ReferenceElement,\n  floatingEl: HTMLElement,\n): Promise<void> {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n\n  disconnectFloatingUI(component, referenceEl, floatingEl);\n\n  Object.assign(floatingEl.style, {\n    visibility: \"hidden\",\n    pointerEvents: \"none\",\n\n    // initial positioning based on https://floating-ui.com/docs/computePosition#initial-layout\n    position: component.overlayPositioning,\n  });\n\n  if (!component.open) {\n    return;\n  }\n\n  return runAutoUpdate(component, referenceEl, floatingEl);\n}\n\n/**\n * Helper to tear down floating element interactions on disconnectedCallback.\n *\n * @param component - A floating-ui component.\n * @param referenceEl - The `referenceElement` used to position the component according to its `placement` value.\n * @param floatingEl - The `floatingElement` containing the floating ui.\n */\nexport function disconnectFloatingUI(\n  component: FloatingUIComponent,\n  referenceEl: ReferenceElement,\n  floatingEl: HTMLElement,\n): void {\n  if (!floatingEl || !referenceEl) {\n    return;\n  }\n\n  const trackedState = autoUpdatingComponentMap.get(component);\n\n  if (trackedState?.state === \"active\") {\n    trackedState.cleanUp();\n  }\n\n  autoUpdatingComponentMap.delete(component);\n\n  componentToDebouncedRepositionMap.get(component)?.cancel();\n  componentToDebouncedRepositionMap.delete(component);\n}\n\nconst visiblePointerSize = 4;\n\n/**\n * Default offset the position of the floating element away from the reference element.\n *\n * @default 6\n */\nexport const defaultOffsetDistance = Math.ceil(Math.hypot(visiblePointerSize, visiblePointerSize));\n"],"names":["CSS","DEFAULTS","width","height","strokeWidth","FloatingArrow","_ref","floatingLayout","key","ref","svgX","isVertical","dValue","concat","h","class","viewBox","d","fill","stroke","freeGlobal$1","global","Object","freeSelf","self","root$1","Function","Symbol$1","Symbol","objectProto$1","prototype","hasOwnProperty","nativeObjectToString$1","toString","symToStringTag$1","toStringTag","undefined","nativeObjectToString","nullTag","undefinedTag","symToStringTag","baseGetTag","value","isOwn","call","tag","unmasked","e","result","getRawTag","objectToString","isObjectLike","symbolTag","isSymbol","reWhitespace","reTrimStart","baseTrim","string","slice","index","length","test","charAt","trimmedEndIndex","replace","isObject","type","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","now$1","Date","now","FUNC_ERROR_TEXT","nativeMax","Math","max","nativeMin","min","debounce","func","wait","options","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","leading","maxing","trailing","TypeError","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","this","leadingEdge","clearTimeout","cancel","flush","sides","alignments","placements","reduce","acc","side","round","floor","createCoords","v","x","y","oppositeSideMap","left","right","bottom","top","oppositeAlignmentMap","start","end","clamp","evaluate","param","getSide","placement","split","getAlignment","getOppositeAxis","axis","getAxisLength","getSideAxis","includes","getAlignmentAxis","getAlignmentSides","rects","rtl","alignment","alignmentAxis","mainAlignmentSide","reference","floating","getOppositePlacement","getOppositeAlignmentPlacement","getPaddingObject","padding","expandPaddingObject","rectToClientRect","rect","computeCoordsFromPlacement","sideAxis","alignLength","commonX","commonY","commonAlign","coords","async","detectOverflow","state","_await$platform$isEle","platform","elements","strategy","boundary","rootBoundary","elementContext","altBoundary","paddingObject","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","offsetParent","getOffsetParent","offsetScale","getScale","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","getSideOffsets","overflow","isAnySideFullyClipped","some","getNodeName","node","isNode","nodeName","toLowerCase","getWindow","_node$ownerDocument","ownerDocument","defaultView","window","document","documentElement","Node","Element","isHTMLElement","HTMLElement","isShadowRoot","ShadowRoot","isOverflowElement","overflowX","overflowY","display","getComputedStyle$1","isTableElement","isTopLayer","selector","matches","isContainingBlock","elementOrCss","webkit","isWebKit","css","transform","perspective","containerType","backdropFilter","filter","willChange","contain","supports","isLastTraversableNode","getComputedStyle","getNodeScroll","scrollLeft","scrollTop","scrollX","scrollY","getParentNode","assignedSlot","parentNode","host","getNearestOverflowAncestor","body","getOverflowAncestors","list","traverseIframes","_node$ownerDocument2","scrollableAncestor","isBody","win","visualViewport","frameElement","getCssDimensions","parseFloat","hasOffset","offsetWidth","offsetHeight","shouldFallback","$","unwrapElement","domElement","getBoundingClientRect","Number","isFinite","noOffsets","getVisualOffsets","offsetLeft","offsetTop","includeScale","isFixedStrategy","clientRect","scale","visualOffsets","isFixed","floatingOffsetParent","shouldAddVisualOffsets","offsetWin","currentWin","currentIFrame","iframeScale","iframeRect","clientLeft","paddingLeft","clientTop","paddingTop","getWindowScrollBarX","getClientRectFromClippingAncestor","clippingAncestor","html","clientWidth","clientHeight","visualViewportBased","getViewportRect","scroll","scrollWidth","scrollHeight","direction","getDocumentRect","getInnerBoundingClientRect","hasFixedPositionAncestor","stopNode","position","getRectRelativeToOffsetParent","isOffsetParentAnElement","offsets","offsetRect","isStaticPositioned","getTrueOffsetParent","polyfill","svgOffsetParent","currentNode","getContainingBlock","topLayer","clippingAncestors","cache","cachedResult","get","el","currentContainingBlockComputedStyle","elementIsFixed","computedStyle","currentNodeIsContaining","ancestor","set","getClippingElementAncestors","_c","firstClippingAncestor","clippingRect","accRect","getElementRects","data","getOffsetParentFn","getDimensionsFn","getDimensions","floatingDimensions","getClientRects","Array","from","isRTL","autoUpdate","update","ancestorScroll","ancestorResize","elementResize","ResizeObserver","layoutShift","IntersectionObserver","animationFrame","referenceEl","ancestors","forEach","addEventListener","passive","cleanupIo","onMove","timeoutId","io","root","cleanup","_io","disconnect","refresh","skip","threshold","rootMargin","isFirstUpdate","handleObserve","entries","ratio","intersectionRatio","observe","observeMove","frameId","reobserveFrame","resizeObserver","firstEntry","target","unobserve","cancelAnimationFrame","requestAnimationFrame","_resizeObserver","prevRefRect","frameLoop","nextRefRect","_resizeObserver2","removeEventListener","offset","name","fn","_middlewareData$offse","_middlewareData$arrow","middlewareData","diffCoords","mainAxisMulti","crossAxisMulti","rawValue","mainAxis","crossAxis","convertValueToCoords","arrow","alignmentOffset","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_placementsThatFitOnE","allowedPlacements","autoAlignment","detectOverflowOptions","placements$1","getPlacementList","currentIndex","currentPlacement","alignmentSides","reset","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByMostSpace","map","sort","a","b","resetPlacement","every","shift","checkMainAxis","checkCrossAxis","limiter","mainAxisCoord","crossAxisCoord","maxSide","limitedCoords","flip","_middlewareData$flip","initialPlacement","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","fallbackAxisSideDirection","flipAlignment","isBasePlacement","oppositePlacement","getExpandedPlacements","push","isStart","lr","rl","tb","bt","getSideList","getOppositeAxisPlacements","overflowsData","_middlewareData$flip2","_overflowsData$filter","nextIndex","_overflowsData$map$so","hide","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","arrowDimensions","isYAxis","minProp","maxProp","clientProp","endDiff","startDiff","arrowOffsetParent","clientSize","centerToReference","largestPossiblePadding","minPadding","maxPadding","min$1","center","shouldAddOffset","centerOffset","computePosition","Map","mergedOptions","platformWithCache","config","middleware","validMiddleware","Boolean","statefulPlacement","resetCount","i","nextX","nextY","computePosition$1","flatTreeParent","style","tagName","offsetParentPolyfill","roundByDPR","dpr","devicePixelRatio","isBrowser","originalGetOffsetParent","positionFloatingUI","component","_ref2","_middlewareData$hide","floatingEl","overlayPositioning","flipDisabled","flipPlacements","offsetDistance","offsetSkidding","arrowEl","effectivePlacement","getEffectivePlacement","getMiddleware","ARROW_CSS_TRANSFORM","assign","visibility","pointerEvents","setAttribute","placementDataAttribute","open","FloatingCSS","animation","animationActive","_ref3","defaultMiddleware","filterValidFlipPlacements","filteredPlacements","console","warn","join","trim","getElementDir","reverse","reposition","delayed","autoUpdatingComponentMap","runAutoUpdate","positionFunction","componentToDebouncedRepositionMap","DEBOUNCE","getDebouncedReposition","WeakMap","isConnected","effectiveAutoUpdate","_refEl","_floatingEl","updateCallback","repositionPromise","cleanUp","promise","connectFloatingUI","disconnectFloatingUI","_componentToDebounced","trackedState","delete","defaultOffsetDistance","ceil","hypot"],"sourceRoot":""}