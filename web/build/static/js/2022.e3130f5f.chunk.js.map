{"version":3,"file":"static/js/2022.e3130f5f.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/utils/key.ts","../node_modules/@esri/calcite-components/dist/components/src/components/checkbox/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/checkbox/checkbox.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/checkbox/checkbox.scss?tag=calcite-checkbox&encapsulation=shadow"],"sourcesContent":["export function isActivationKey(key: string): boolean {\n  return key === \"Enter\" || key === \" \";\n}\n\nexport const numberKeys = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\nexport const letterKeys = [\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\",\n];\n","export const CSS = {\n  toggle: \"toggle\",\n  check: \"check-svg\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  CheckableFormComponent,\n  connectForm,\n  disconnectForm,\n  HiddenFormInputSlot,\n  MutableValidityState,\n} from \"../../utils/form\";\nimport { guid } from \"../../utils/guid\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Scale, Status } from \"../interfaces\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport { CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-checkbox\",\n  styleUrl: \"checkbox.scss\",\n  shadow: true,\n})\nexport class Checkbox\n  implements LabelableComponent, CheckableFormComponent, InteractiveComponent, LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** When `true`, the component is checked. */\n  @Prop({ reflect: true, mutable: true }) checked = false;\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /** The `id` attribute of the component. When omitted, a globally unique identifier is used. */\n  @Prop({ reflect: true, mutable: true }) guid: string;\n\n  /**\n   * The hovered state of the checkbox.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) hovered = false;\n\n  /**\n   * When `true`, the component is initially indeterminate, which is independent from its `checked` value.\n   *\n   * The state is visual only, and can look different across browsers.\n   *\n   * @mdn [indeterminate](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input/checkbox#indeterminate_state_checkboxes)\n   */\n  @Prop({ reflect: true, mutable: true }) indeterminate = false;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /** The component's value. */\n  @Prop() value: any;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteCheckboxElement;\n\n  readonly checkedPath = \"M5.5 12L2 8.689l.637-.636L5.5 10.727l8.022-7.87.637.637z\";\n\n  readonly indeterminatePath = \"M13 8v1H3V8z\";\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultChecked: boolean;\n\n  defaultValue: Checkbox[\"checked\"];\n\n  toggleEl: HTMLDivElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.toggleEl?.focus();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    input.type = \"checkbox\";\n  }\n\n  getPath = (): string =>\n    this.indeterminate ? this.indeterminatePath : this.checked ? this.checkedPath : \"\";\n\n  toggle = (): void => {\n    if (!this.disabled) {\n      this.checked = !this.checked;\n      this.setFocus();\n      this.indeterminate = false;\n      this.calciteCheckboxChange.emit();\n    }\n  };\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.toggle();\n      event.preventDefault();\n    }\n  };\n\n  clickHandler = (): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.toggle();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component is blurred.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalCheckboxBlur: EventEmitter<boolean>;\n\n  /** Fires when the component's `checked` status changes. */\n  @Event({ cancelable: false }) calciteCheckboxChange: EventEmitter<void>;\n\n  /**\n   * Fires when the component is focused.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalCheckboxFocus: EventEmitter<boolean>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  onToggleBlur = (): void => {\n    this.calciteInternalCheckboxBlur.emit(false);\n  };\n\n  onToggleFocus = (): void => {\n    this.calciteInternalCheckboxFocus.emit(true);\n  };\n\n  onLabelClick = (): void => {\n    this.toggle();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.guid = this.el.id || `calcite-checkbox-${guid()}`;\n    connectInteractive(this);\n    connectLabel(this);\n    connectForm(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const rtl = getElementDir(this.el) === \"rtl\";\n\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div\n            aria-checked={toAriaBoolean(this.checked)}\n            aria-label={getLabelText(this)}\n            class={{\n              [CSS.toggle]: true,\n              [CSS_UTILITY.rtl]: rtl,\n            }}\n            onBlur={this.onToggleBlur}\n            onFocus={this.onToggleFocus}\n            ref={(toggleEl) => (this.toggleEl = toggleEl)}\n            role=\"checkbox\"\n            tabIndex={this.disabled ? undefined : 0}\n          >\n            <svg aria-hidden=\"true\" class={CSS.check} viewBox=\"0 0 16 16\">\n              <path d={this.getPath()} />\n            </svg>\n            <slot />\n          </div>\n          <HiddenFormInputSlot component={this} />\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-checkbox-size: Specifies the component's height and width.\n */\n\n:host([scale=\"s\"]) {\n  --calcite-checkbox-size: theme(\"spacing.3\");\n}\n:host([scale=\"m\"]) {\n  --calcite-checkbox-size: theme(\"fontSize.n1\");\n}\n:host([scale=\"l\"]) {\n  --calcite-checkbox-size: theme(\"spacing.4\");\n}\n\n:host {\n  @apply relative\n    inline-flex\n    cursor-pointer\n    select-none;\n  -webkit-tap-highlight-color: transparent;\n\n  .check-svg,\n  .toggle {\n    inline-size: var(--calcite-checkbox-size);\n    block-size: var(--calcite-checkbox-size);\n  }\n\n  .check-svg {\n    @apply bg-foreground-1\n      pointer-events-none\n      box-border\n      block\n      overflow-hidden\n      fill-current\n      stroke-current\n      stroke-1\n      transition-default;\n    box-shadow: inset 0 0 0 1px var(--calcite-color-border-input);\n    color: theme(\"backgroundColor.background\");\n  }\n}\n\n:host([status=\"invalid\"]:not([checked])) {\n  .check-svg {\n    box-shadow: inset 0 0 0 1px var(--calcite-color-status-danger);\n  }\n  .toggle:focus {\n    @apply focus-outset-danger;\n  }\n}\n\n:host([checked]),\n:host([indeterminate]) {\n  .check-svg {\n    @apply bg-brand;\n    box-shadow: inset 0 0 0 1px var(--calcite-color-brand);\n  }\n}\n:host([hovered]) .toggle,\n:host .toggle:hover {\n  .check-svg {\n    box-shadow: inset 0 0 0 2px var(--calcite-color-brand);\n  }\n}\n\n.toggle {\n  @apply focus-base relative;\n\n  &:active,\n  &:focus,\n  &:focus-visible {\n    @apply focus-outset;\n  }\n\n  &::after,\n  &::before {\n    inset-block-start: 50%;\n    inset-inline-start: 50%;\n    min-block-size: theme(\"width.6\");\n    min-inline-size: theme(\"width.6\");\n    position: absolute;\n  }\n}\n\n.toggle:not(.calcite--rtl) {\n  &::after {\n    content: \"\";\n    transform: translateX(-50%) translateY(-50%);\n  }\n}\n\n.toggle.calcite--rtl {\n  &::before {\n    content: \"\";\n    transform: translateX(50%) translateY(-50%);\n  }\n}\n\n@include disabled();\n@include hidden-form-input();\n@include base-component();\n"],"names":["isActivationKey","key","numberKeys","CSS","Checkbox","proxyCustomElement","HTMLElement","checkedPath","indeterminatePath","getPath","this","indeterminate","checked","toggle","disabled","setFocus","calciteCheckboxChange","emit","keyDownHandler","event","preventDefault","clickHandler","onToggleBlur","calciteInternalCheckboxBlur","onToggleFocus","calciteInternalCheckboxFocus","onLabelClick","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","componentFocusable","toggleEl","focus","syncHiddenFormInput","input","type","connectedCallback","guid","el","id","connectInteractive","connectLabel","connectForm","disconnectedCallback","disconnectInteractive","disconnectLabel","disconnectForm","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","render","rtl","getElementDir","h","Host","onClick","onKeyDown","InteractiveContainer","toAriaBoolean","getLabelText","class","CSS_UTILITY","onBlur","onFocus","ref","role","tabIndex","undefined","viewBox","d","HiddenFormInputSlot","component"],"sourceRoot":""}