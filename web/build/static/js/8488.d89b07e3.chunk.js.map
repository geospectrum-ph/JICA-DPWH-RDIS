{"version":3,"file":"static/js/8488.d89b07e3.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/functional/Validation.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-number/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-number/input-number.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-number/input-number.scss?tag=calcite-input-number&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/interfaces.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.scss?tag=calcite-input-message&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/input/common/input.ts","../node_modules/@esri/calcite-components/dist/components/src/components/progress/progress.scss?tag=calcite-progress&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/progress/progress.tsx"],"sourcesContent":["import { FunctionalComponent, h } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\nimport { Scale, Status } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\n\ninterface ValidationProps extends JSXBase.HTMLAttributes {\n  scale: Scale;\n  status: Status;\n  icon?: IconNameOrString | boolean;\n  message: string;\n}\n\nexport const CSS = {\n  validationContainer: \"validation-container\",\n};\n\nexport const Validation: FunctionalComponent<ValidationProps> = ({\n  scale,\n  status,\n  icon,\n  message,\n}) => (\n  <div class={CSS.validationContainer}>\n    <calcite-input-message icon={icon} scale={scale} status={status}>\n      {message}\n    </calcite-input-message>\n  </div>\n);\n","export const CSS = {\n  loader: \"loader\",\n  clearButton: \"clear-button\",\n  editingEnabled: \"editing-enabled\",\n  inlineChild: \"inline-child\",\n  inputIcon: \"icon\",\n  prefix: \"prefix\",\n  suffix: \"suffix\",\n  numberButtonWrapper: \"number-button-wrapper\",\n  buttonItemHorizontal: \"number-button-item--horizontal\",\n  wrapper: \"element-wrapper\",\n  inputWrapper: \"wrapper\",\n  actionWrapper: \"action-wrapper\",\n  resizeIconWrapper: \"resize-icon-wrapper\",\n  numberButtonItem: \"number-button-item\",\n};\n\nexport const SLOTS = {\n  action: \"action\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getSlotted,\n  isPrimaryPointerButton,\n  setRequestedIcon,\n} from \"../../utils/dom\";\nimport { Alignment, Scale, Status } from \"../interfaces\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  internalHiddenInputInputEvent,\n  MutableValidityState,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  addLocalizedTrailingDecimalZeros,\n  BigDecimal,\n  isValidNumber,\n  parseNumberString,\n  sanitizeNumberString,\n} from \"../../utils/number\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { InputPlacement, NumberNudgeDirection, SetValueOrigin } from \"../input/interfaces\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport {\n  NumericInputComponent,\n  syncHiddenFormInput,\n  TextualInputComponent,\n} from \"../input/common/input\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS, SLOTS } from \"./resources\";\nimport { InputNumberMessages } from \"./assets/input-number/t9n\";\n\n/**\n * @slot action - A slot for positioning a button next to the component.\n */\n@Component({\n  tag: \"calcite-input-number\",\n  styleUrl: \"input-number.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class InputNumber\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    LocalizedComponent,\n    NumericInputComponent,\n    T9nComponent,\n    TextualInputComponent,\n    LoadableComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Global attributes\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"autofocus\")\n  @Watch(\"enterkeyhint\")\n  @Watch(\"inputmode\")\n  handleGlobalAttributesChanged(): void {\n    forceUpdate(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the text alignment of the component's value. */\n  @Prop({ reflect: true }) alignment: Extract<\"start\" | \"end\", Alignment> = \"start\";\n\n  /**\n   * Adds global prop, missing from Stencil's `HTMLElement` type, see https://github.com/ionic-team/stencil/issues/5726\n   *\n   * @ignore\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() autofocus: boolean;\n\n  /**\n   * When `true`, a clear button is displayed when the component has a value.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   *\n   * @mdn [disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledWatcher(): void {\n    this.setDisabledAction();\n  }\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() enterKeyHint: string;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /**\n   * Specifies an icon to display.\n   *\n   * @futureBreaking Remove boolean type as it is not supported.\n   */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() inputMode: string;\n\n  /** When `true`, restricts the component to integer numbers only and disables exponential notation. */\n  @Prop() integer = false;\n\n  /** Accessible name for the component's button or hyperlink. */\n  @Prop() label: string;\n\n  /** When `true`, the component is in the loading state and `calcite-progress` is displayed. */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * Toggles locale formatting for numbers.\n   *\n   * @internal\n   */\n  @Prop() localeFormat = false;\n\n  /**\n   * Specifies the maximum value.\n   *\n   * @mdn [max](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max)\n   */\n  @Prop({ reflect: true }) max: number;\n\n  /** watcher to update number-to-string for max */\n  @Watch(\"max\")\n  maxWatcher(): void {\n    this.maxString = this.max?.toString() || null;\n  }\n\n  /**\n   * Specifies the minimum value.\n   *\n   * @mdn [min](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min)\n   */\n  @Prop({ reflect: true }) min: number;\n\n  /** watcher to update number-to-string for min */\n  @Watch(\"min\")\n  minWatcher(): void {\n    this.minString = this.min?.toString() || null;\n  }\n\n  /**\n   * Specifies the maximum length of text for the component's value.\n   *\n   * @mdn [maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength)\n   *\n   * @deprecated This property has no effect on the component.\n   */\n  @Prop({ reflect: true }) maxLength: number;\n\n  /**\n   * Specifies the minimum length of text for the component's value.\n   *\n   * @mdn [minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength)\n   *\n   * @deprecated This property has no effect on the component.\n   */\n  @Prop({ reflect: true }) minLength: number;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   *\n   * @mdn [name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name)\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Specifies the placement of the buttons. */\n  @Prop({ reflect: true }) numberButtonType: InputPlacement = \"vertical\";\n\n  /**\n   * Specifies placeholder text for the component.\n   *\n   * @mdn [placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder)\n   */\n  @Prop() placeholder: string;\n\n  /** Adds text to the start of the component. */\n  @Prop() prefixText: string;\n\n  /**\n   * When `true`, the component's value can be read, but cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the granularity that the component's value must adhere to.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step)\n   */\n  @Prop({ reflect: true }) step: number | \"any\";\n\n  /**\n   * Specifies the type of content to autocomplete, for use in forms.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n   */\n  @Prop() autocomplete: string;\n\n  /** Adds text to the end of the component.  */\n  @Prop() suffixText: string;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) editingEnabled = false;\n\n  /** The component's value. */\n  @Prop({ mutable: true }) value = \"\";\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputNumberMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputNumberMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string, previousValue: string): void {\n    if (!this.userChangedValue) {\n      if (newValue === \"Infinity\" || newValue === \"-Infinity\") {\n        this.displayedValue = newValue;\n        this.previousEmittedNumberValue = newValue;\n        return;\n      }\n\n      this.setNumberValue({\n        origin: \"direct\",\n        previousValue,\n        value:\n          newValue == null || newValue == \"\"\n            ? \"\"\n            : isValidNumber(newValue)\n              ? newValue\n              : this.previousValue || \"\",\n      });\n      this.warnAboutInvalidNumberValue(newValue);\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"icon\")\n  updateRequestedIcon(): void {\n    this.requestedIcon = setRequestedIcon({}, this.icon, \"number\");\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputNumberElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: InputNumber[\"value\"];\n\n  inlineEditableEl: HTMLCalciteInlineEditableElement;\n\n  /** number text input element for locale */\n  private childNumberEl?: HTMLInputElement;\n\n  get isClearable(): boolean {\n    return this.clearable && this.value.length > 0;\n  }\n\n  private minString?: string;\n\n  private maxString?: string;\n\n  private previousEmittedNumberValue: string;\n\n  private previousValue: string;\n\n  private previousValueOrigin: SetValueOrigin = \"initial\";\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  private nudgeNumberValueIntervalId: number;\n\n  mutationObserver = createObserver(\"mutation\", () => this.setDisabledAction());\n\n  private userChangedValue = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  State\n  //\n  //--------------------------------------------------------------------------\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleWatcher(locale: string): void {\n    updateMessages(this, this.effectiveLocale);\n    numberStringFormatter.numberFormatOptions = {\n      locale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: false,\n    };\n  }\n\n  @State() defaultMessages: InputNumberMessages;\n\n  @State() displayedValue: string;\n\n  @State() slottedActionElDisabledInternally = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n    this.inlineEditableEl = this.el.closest(\"calcite-inline-editable\");\n    if (this.inlineEditableEl) {\n      this.editingEnabled = this.inlineEditableEl.editingEnabled || false;\n    }\n    connectLabel(this);\n    connectForm(this);\n\n    this.mutationObserver?.observe(this.el, { childList: true });\n    this.setDisabledAction();\n    this.el.addEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n\n    this.mutationObserver?.disconnect();\n    this.el.removeEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.maxString = this.max?.toString();\n    this.minString = this.min?.toString();\n    this.requestedIcon = setRequestedIcon({}, this.icon, \"number\");\n    await setUpMessages(this);\n\n    this.setPreviousEmittedNumberValue(this.value);\n    this.setPreviousNumberValue(this.value);\n\n    this.warnAboutInvalidNumberValue(this.value);\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      this.displayedValue = this.value;\n      this.previousEmittedNumberValue = this.value;\n    } else {\n      this.setNumberValue({\n        origin: \"connected\",\n        value: isValidNumber(this.value) ? this.value : \"\",\n      });\n    }\n  }\n\n  componentShouldUpdate(newValue: string, oldValue: string, property: string): boolean {\n    if (property === \"value\" && newValue && !isValidNumber(newValue)) {\n      this.setNumberValue({\n        origin: \"reset\",\n        value: oldValue,\n      });\n      return false;\n    }\n    return true;\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputNumberFocus: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputNumberBlur: EventEmitter<void>;\n\n  /**\n   * Fires each time a new value is typed.\n   */\n  @Event({ cancelable: true }) calciteInputNumberInput: EventEmitter<void>;\n\n  /**\n   * Fires each time a new value is typed and committed.\n   */\n  @Event({ cancelable: false }) calciteInputNumberChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.childNumberEl?.focus();\n  }\n\n  /** Selects the text of the component's `value`. */\n  @Method()\n  async selectText(): Promise<void> {\n    this.childNumberEl?.select();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.readOnly || this.disabled || event.defaultPrevented) {\n      return;\n    }\n\n    if (this.isClearable && event.key === \"Escape\") {\n      this.clearInputValue(event);\n      event.preventDefault();\n    }\n    if (event.key === \"Enter\") {\n      if (submitForm(this)) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  incrementOrDecrementNumberValue(\n    direction: NumberNudgeDirection,\n    inputMax: number | null,\n    inputMin: number | null,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void {\n    const { value } = this;\n\n    if (value === \"Infinity\" || value === \"-Infinity\") {\n      return;\n    }\n\n    const adjustment = direction === \"up\" ? 1 : -1;\n    const stepHandleInteger =\n      this.integer && this.step !== \"any\" ? Math.round(this.step) : this.step;\n    const inputStep = stepHandleInteger === \"any\" ? 1 : Math.abs(stepHandleInteger || 1);\n    const inputVal = new BigDecimal(value !== \"\" ? value : \"0\");\n    const nudgedValue = inputVal.add(`${inputStep * adjustment}`);\n\n    const nudgedValueBelowInputMin = () =>\n      typeof inputMin === \"number\" &&\n      !isNaN(inputMin) &&\n      nudgedValue.subtract(`${inputMin}`).isNegative;\n\n    const nudgedValueAboveInputMax = () =>\n      typeof inputMax === \"number\" &&\n      !isNaN(inputMax) &&\n      !nudgedValue.subtract(`${inputMax}`).isNegative;\n\n    const finalValue = nudgedValueBelowInputMin()\n      ? `${inputMin}`\n      : nudgedValueAboveInputMax()\n        ? `${inputMax}`\n        : nudgedValue.toString();\n\n    this.setNumberValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: finalValue,\n    });\n  }\n\n  private clearInputValue = (nativeEvent: KeyboardEvent | MouseEvent): void => {\n    this.setNumberValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: \"\",\n    });\n  };\n\n  private emitChangeIfUserModified = (): void => {\n    if (this.previousValueOrigin === \"user\" && this.value !== this.previousEmittedNumberValue) {\n      this.calciteInputNumberChange.emit();\n      this.setPreviousEmittedNumberValue(this.value);\n    }\n  };\n\n  private inputNumberBlurHandler = () => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n    this.calciteInternalInputNumberBlur.emit();\n    this.emitChangeIfUserModified();\n  };\n\n  private clickHandler = (event: MouseEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    const slottedActionEl = getSlotted(this.el, \"action\");\n    if (event.target !== slottedActionEl) {\n      this.setFocus();\n    }\n  };\n\n  private inputNumberFocusHandler = (): void => {\n    this.calciteInternalInputNumberFocus.emit();\n  };\n\n  private inputNumberInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      return;\n    }\n\n    const value = (nativeEvent.target as HTMLInputElement).value;\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n    const delocalizedValue = numberStringFormatter.delocalize(value);\n    if (nativeEvent.inputType === \"insertFromPaste\") {\n      if (\n        !isValidNumber(delocalizedValue) ||\n        (this.integer && (delocalizedValue.includes(\"e\") || delocalizedValue.includes(\".\")))\n      ) {\n        nativeEvent.preventDefault();\n      }\n      this.setNumberValue({\n        nativeEvent,\n        origin: \"user\",\n        value: parseNumberString(delocalizedValue),\n      });\n      this.childNumberEl.value = this.displayedValue;\n    } else {\n      this.setNumberValue({\n        nativeEvent,\n        origin: \"user\",\n        value: delocalizedValue,\n      });\n    }\n  };\n\n  private inputNumberKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      event.preventDefault();\n      if (event.key === \"Backspace\" || event.key === \"Delete\") {\n        this.clearInputValue(event);\n      }\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      /* prevent default behavior of moving cursor to the beginning of the input when holding down ArrowUp */\n      event.preventDefault();\n      this.nudgeNumberValue(\"up\", event);\n      return;\n    }\n    if (event.key === \"ArrowDown\") {\n      this.nudgeNumberValue(\"down\", event);\n      return;\n    }\n    const supportedKeys = [\n      ...numberKeys,\n      \"ArrowLeft\",\n      \"ArrowRight\",\n      \"Backspace\",\n      \"Delete\",\n      \"Enter\",\n      \"Escape\",\n      \"Tab\",\n    ];\n    if (event.altKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n    const isShiftTabEvent = event.shiftKey && event.key === \"Tab\";\n    if (supportedKeys.includes(event.key) || isShiftTabEvent) {\n      if (event.key === \"Enter\") {\n        this.emitChangeIfUserModified();\n      }\n      return;\n    }\n\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    if (event.key === numberStringFormatter.decimal && !this.integer) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.indexOf(numberStringFormatter.decimal) === -1) {\n        return;\n      }\n    }\n    if (/[eE]/.test(event.key) && !this.integer) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && !/[eE]/.test(this.childNumberEl.value)) {\n        return;\n      }\n    }\n\n    if (event.key === \"-\") {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.split(\"-\").length <= 2) {\n        return;\n      }\n    }\n    event.preventDefault();\n  };\n\n  private nudgeNumberValue = (\n    direction: NumberNudgeDirection,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void => {\n    if (nativeEvent instanceof KeyboardEvent && nativeEvent.repeat) {\n      return;\n    }\n\n    const inputMax = this.maxString ? parseFloat(this.maxString) : null;\n    const inputMin = this.minString ? parseFloat(this.minString) : null;\n    const valueNudgeDelayInMs = 150;\n\n    this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n\n    if (this.nudgeNumberValueIntervalId) {\n      window.clearInterval(this.nudgeNumberValueIntervalId);\n    }\n    let firstValueNudge = true;\n    this.nudgeNumberValueIntervalId = window.setInterval(() => {\n      if (firstValueNudge) {\n        firstValueNudge = false;\n        return;\n      }\n\n      this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n    }, valueNudgeDelayInMs);\n  };\n\n  private nudgeButtonPointerUpHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private nudgeButtonPointerOutHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private nudgeButtonPointerDownHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    event.preventDefault();\n    const direction = (event.target as HTMLDivElement).dataset.adjustment as NumberNudgeDirection;\n    if (!this.disabled) {\n      this.nudgeNumberValue(direction, event);\n    }\n  };\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(\"number\", this, input);\n  }\n\n  private onHiddenFormInputInput = (event: Event): void => {\n    if ((event.target as HTMLInputElement).name === this.name) {\n      this.setNumberValue({\n        value: (event.target as HTMLInputElement).value,\n        origin: \"direct\",\n      });\n    }\n    this.setFocus();\n    event.stopPropagation();\n  };\n\n  private setChildNumberElRef = (el: HTMLInputElement) => {\n    this.childNumberEl = el;\n  };\n\n  private setDisabledAction(): void {\n    const slottedActionEl = getSlotted(this.el, \"action\");\n\n    if (!slottedActionEl) {\n      return;\n    }\n\n    if (this.disabled) {\n      if (slottedActionEl.getAttribute(\"disabled\") == null) {\n        this.slottedActionElDisabledInternally = true;\n      }\n      slottedActionEl.setAttribute(\"disabled\", \"\");\n    } else if (this.slottedActionElDisabledInternally) {\n      slottedActionEl.removeAttribute(\"disabled\");\n      this.slottedActionElDisabledInternally = false;\n    }\n  }\n\n  private setInputNumberValue = (newInputValue: string): void => {\n    if (!this.childNumberEl) {\n      return;\n    }\n    this.childNumberEl.value = newInputValue;\n  };\n\n  private setPreviousEmittedNumberValue = (value: string): void => {\n    this.previousEmittedNumberValue = this.normalizeValue(value);\n  };\n\n  private normalizeValue(value: string): string {\n    return isValidNumber(value) ? value : \"\";\n  }\n\n  private setPreviousNumberValue = (value: string): void => {\n    this.previousValue = this.normalizeValue(value);\n  };\n\n  private setNumberValue = ({\n    committing = false,\n    nativeEvent,\n    origin,\n    previousValue,\n    value,\n  }: {\n    committing?: boolean;\n    nativeEvent?: MouseEvent | KeyboardEvent | InputEvent;\n    origin: SetValueOrigin;\n    previousValue?: string;\n    value: string;\n  }): void => {\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n\n    const isValueDeleted =\n      this.previousValue?.length > value.length || this.value?.length > value.length;\n\n    const valueHandleInteger = this.integer ? value.replace(/[e.]/g, \"\") : value;\n\n    const hasTrailingDecimalSeparator =\n      valueHandleInteger.charAt(valueHandleInteger.length - 1) === \".\";\n\n    const sanitizedValue =\n      hasTrailingDecimalSeparator && isValueDeleted\n        ? valueHandleInteger\n        : sanitizeNumberString(valueHandleInteger);\n\n    const newValue =\n      value && !sanitizedValue\n        ? isValidNumber(this.previousValue)\n          ? this.previousValue\n          : \"\"\n        : sanitizedValue;\n\n    let newLocalizedValue = numberStringFormatter.localize(newValue);\n\n    if (origin !== \"connected\" && !hasTrailingDecimalSeparator) {\n      newLocalizedValue = addLocalizedTrailingDecimalZeros(\n        newLocalizedValue,\n        newValue,\n        numberStringFormatter,\n      );\n    }\n\n    // adds localized trailing decimal separator\n    this.displayedValue =\n      hasTrailingDecimalSeparator && isValueDeleted\n        ? `${newLocalizedValue}${numberStringFormatter.decimal}`\n        : newLocalizedValue;\n\n    this.setPreviousNumberValue(previousValue ?? this.value);\n    this.previousValueOrigin = origin;\n    this.userChangedValue = origin === \"user\" && this.value !== newValue;\n    // don't sanitize the start of negative/decimal numbers, but\n    // don't set value to an invalid number\n    this.value = [\"-\", \".\"].includes(newValue) ? \"\" : newValue;\n\n    if (origin === \"direct\") {\n      this.setInputNumberValue(newLocalizedValue);\n      this.setPreviousEmittedNumberValue(newLocalizedValue);\n    }\n\n    if (nativeEvent) {\n      const calciteInputNumberInputEvent = this.calciteInputNumberInput.emit();\n      if (calciteInputNumberInputEvent.defaultPrevented) {\n        this.value = this.previousValue;\n        this.displayedValue = numberStringFormatter.localize(this.previousValue);\n      } else if (committing) {\n        this.emitChangeIfUserModified();\n      }\n    }\n  };\n\n  private inputNumberKeyUpHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private warnAboutInvalidNumberValue(value: string): void {\n    if (value && !isValidNumber(value)) {\n      console.warn(`The specified value \"${value}\" cannot be parsed, or is out of range.`);\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const loader = (\n      <div class={CSS.loader}>\n        <calcite-progress label={this.messages.loading} type=\"indeterminate\" />\n      </div>\n    );\n\n    const inputClearButton = (\n      <button\n        aria-label={this.messages.clear}\n        class={CSS.clearButton}\n        disabled={this.disabled || this.readOnly}\n        onClick={this.clearInputValue}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n    const iconEl = (\n      <calcite-icon\n        class={CSS.inputIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.requestedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const isHorizontalNumberButton = this.numberButtonType === \"horizontal\";\n\n    const numberButtonsHorizontalUp = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"up\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.nudgeButtonPointerDownHandler}\n        onPointerOut={this.nudgeButtonPointerOutHandler}\n        onPointerUp={this.nudgeButtonPointerUpHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-up\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsHorizontalDown = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"down\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.nudgeButtonPointerDownHandler}\n        onPointerOut={this.nudgeButtonPointerOutHandler}\n        onPointerUp={this.nudgeButtonPointerUpHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsVertical = (\n      <div class={CSS.numberButtonWrapper}>\n        {numberButtonsHorizontalUp}\n        {numberButtonsHorizontalDown}\n      </div>\n    );\n\n    const prefixText = <div class={CSS.prefix}>{this.prefixText}</div>;\n\n    const suffixText = <div class={CSS.suffix}>{this.suffixText}</div>;\n\n    const childEl = (\n      <input\n        aria-label={getLabelText(this)}\n        autocomplete={this.autocomplete}\n        autofocus={this.el.autofocus ? true : null}\n        defaultValue={this.defaultValue}\n        disabled={this.disabled ? true : null}\n        enterKeyHint={this.el.enterKeyHint || this.el.getAttribute(\"enterkeyhint\")}\n        inputMode={this.el.inputMode || this.el.getAttribute(\"inputmode\") || \"decimal\"}\n        key=\"localized-input\"\n        maxLength={this.maxLength}\n        minLength={this.minLength}\n        name={undefined}\n        onBlur={this.inputNumberBlurHandler}\n        onFocus={this.inputNumberFocusHandler}\n        onInput={this.inputNumberInputHandler}\n        onKeyDown={this.inputNumberKeyDownHandler}\n        onKeyUp={this.inputNumberKeyUpHandler}\n        placeholder={this.placeholder || \"\"}\n        readOnly={this.readOnly}\n        ref={this.setChildNumberElRef}\n        type=\"text\"\n        value={this.displayedValue}\n      />\n    );\n\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div class={{ [CSS.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}>\n            {this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalDown\n              : null}\n            {this.prefixText ? prefixText : null}\n            <div class={CSS.wrapper}>\n              {childEl}\n              {this.isClearable ? inputClearButton : null}\n              {this.requestedIcon ? iconEl : null}\n              {this.loading ? loader : null}\n            </div>\n            <div class={CSS.actionWrapper}>\n              <slot name={SLOTS.action} />\n            </div>\n            {this.numberButtonType === \"vertical\" && !this.readOnly ? numberButtonsVertical : null}\n            {this.suffixText ? suffixText : null}\n            {this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalUp\n              : null}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n",":host {\n  @apply block;\n}\n\n// scales\n:host([scale=\"s\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n2h h-6 px-2;\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-6;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.6\");\n    min-inline-size: theme(\"spacing.6\");\n  }\n}\n\n:host([scale=\"m\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n1h h-8 px-3;\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-8;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.8\");\n    min-inline-size: theme(\"spacing.8\");\n  }\n}\n\n:host([scale=\"l\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-0h h-11 px-4;\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-11;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.11\");\n    min-inline-size: theme(\"spacing.11\");\n  }\n}\n\n@include disabled();\n\ninput {\n  transition:\n    var(--calcite-animation-timing),\n    block-size 0,\n    outline-offset 0s;\n  -webkit-appearance: none;\n  @apply bg-foreground-1\n    box-border\n    flex\n    flex-1\n    font-inherit\n    font-normal\n    m-0\n    max-h-full\n    max-w-full\n    relative\n    rounded-none\n    text-color-1\n    text-ellipsis\n    w-full;\n\n  &:placeholder-shown {\n    @apply text-ellipsis;\n  }\n}\n\n// states\ninput {\n  @apply text-color-1\n    border-color-input\n    border\n    border-solid;\n  &::placeholder,\n  &:-ms-input-placeholder,\n  &::-ms-input-placeholder {\n    @apply text-color-3 font-normal;\n  }\n}\ninput:focus {\n  @apply border-color-brand text-color-1;\n}\ninput[readonly] {\n  @apply bg-background font-medium;\n}\ninput[readonly]:focus {\n  @apply text-color-1;\n}\ncalcite-icon {\n  @apply text-color-3;\n}\n\n//focus\ninput {\n  @apply focus-base;\n}\n\ninput:focus {\n  @apply focus-inset;\n}\n\n:host([status=\"invalid\"]) {\n  & input {\n    @apply border-color-danger;\n  }\n  & input:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n// ICONS\n\n// position icons\n\n:host([scale=\"s\"]) .icon {\n  inset-inline-start: theme(\"spacing.2\");\n}\n\n:host([scale=\"m\"]) .icon {\n  inset-inline-start: theme(\"spacing.3\");\n}\n\n:host([scale=\"l\"]) .icon {\n  inset-inline-start: theme(\"spacing.4\");\n}\n\n// position placeholder/value text in relation to icons\n\n:host([icon][scale=\"s\"]) input {\n  padding-inline-start: theme(\"padding.8\");\n}\n\n:host([icon][scale=\"m\"]) input {\n  padding-inline-start: theme(\"padding.10\");\n}\n\n:host([icon][scale=\"l\"]) input {\n  padding-inline-start: theme(\"padding.14\");\n}\n\n// positioning wrapper for icon and loader\n\n.element-wrapper {\n  @apply relative\n    order-3\n    inline-flex\n    flex-1\n    items-center;\n}\n\n.icon {\n  @apply transition-default\n    pointer-events-none\n    absolute\n    block\n\n    z-default; // needed for firefox to display the icon properly\n}\n\n.clear-button {\n  pointer-events: initial;\n  @apply focus-base\n    border-color-input\n    bg-foreground-1\n    order-4\n    m-0\n    box-border\n    flex\n    min-h-full\n    cursor-pointer\n    items-center\n    justify-center\n    self-stretch\n    border\n    border-solid;\n\n  border-inline-start-width: theme(\"borderWidth.0\");\n\n  &:hover {\n    @apply bg-foreground-2 transition-default;\n    calcite-icon {\n      @apply text-color-1 transition-default;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:disabled {\n    @apply opacity-disabled;\n  }\n}\n\n// loading\n.loader {\n  inset-block-start: 1px;\n  inset-inline: 1px;\n  @apply pointer-events-none\n    absolute\n    block;\n}\n\n// slotted action\n.action-wrapper {\n  @apply order-7 flex;\n}\n\n// prefix and suffix\n.prefix,\n.suffix {\n  @apply border-color-input\n    bg-background\n    text-color-2\n    box-border\n    flex\n    h-auto\n    min-h-full\n    select-none\n    content-center\n    items-center\n    break-words\n    border\n    border-solid\n    font-medium\n    leading-none;\n}\n\n.prefix {\n  @apply order-2;\n  border-inline-end-width: theme(\"borderWidth.0\");\n}\n.suffix {\n  @apply order-5;\n  border-inline-start-width: theme(\"borderWidth.0\");\n}\n\n// alignment type\n:host([alignment=\"start\"]) {\n  & input {\n    text-align: start;\n  }\n}\n\n:host([alignment=\"end\"]) {\n  & input {\n    text-align: end;\n  }\n}\n\n.number-button-wrapper {\n  @apply transition-default\n    pointer-events-none\n    order-6\n    box-border\n    flex\n    flex-col;\n}\n\n:host([number-button-type=\"vertical\"]) .wrapper {\n  flex-direction: row;\n  display: flex;\n}\n\n:host([number-button-type=\"vertical\"]) {\n  & input {\n    @apply order-2;\n  }\n}\n\n:host([number-button-type=\"horizontal\"]) .calcite--rtl {\n  & .number-button-item[data-adjustment=\"down\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n  & .number-button-item[data-adjustment=\"up\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n}\n\n.number-button-item.number-button-item--horizontal {\n  &[data-adjustment=\"down\"],\n  &[data-adjustment=\"up\"] {\n    @apply order-1\n      max-h-full\n      min-h-full\n      self-stretch;\n    & calcite-icon {\n      transform: rotate(90deg);\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"down\"] {\n  @apply border-color-input\n    border\n    border-solid;\n  border-inline-end-width: theme(\"borderWidth.0\");\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"up\"] {\n  @apply order-5;\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"up\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"] {\n  @apply border-t-0;\n}\n\n.number-button-item {\n  max-block-size: 50%;\n  min-block-size: 50%;\n  pointer-events: initial;\n  @apply border-color-input\n    bg-foreground-1\n    transition-default\n    m-0\n    box-border\n    flex\n    cursor-pointer\n    items-center\n    self-center\n    border\n    border-solid\n    py-0\n    px-2;\n  border-inline-start-width: theme(\"borderWidth.0\");\n  & calcite-icon {\n    @apply transition-default pointer-events-none;\n  }\n  &:focus {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n  }\n  &:disabled {\n    @apply pointer-events-none;\n  }\n}\n\n.wrapper {\n  @apply relative\n    flex\n    flex-row\n    items-center;\n}\n\n:host(.no-bottom-border) input {\n  @apply border-b-0;\n}\n\n:host(.border-top-color-one) input {\n  @apply border-t-color-1;\n}\n\n// input needed for higher specificity of these overrides\ninput {\n  &.inline-child {\n    @apply transition-default bg-transparent;\n    .editing-enabled {\n      background-color: inherit;\n    }\n  }\n\n  &.inline-child:not(.editing-enabled) {\n    @apply border-color-transparent\n    flex\n    cursor-pointer text-ellipsis;\n    padding-inline-start: 0;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: The component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","export const StatusIconDefaults = {\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n  idle: \"information\",\n} as const;\n","import { Component, Element, h, Host, Prop, VNode, Watch } from \"@stencil/core\";\nimport { setRequestedIcon } from \"../../utils/dom\";\nimport { Scale, Status } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { StatusIconDefaults } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding text.\n */\n@Component({\n  tag: \"calcite-input-message\",\n  styleUrl: \"input-message.scss\",\n  shadow: true,\n})\nexport class InputMessage {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  @Watch(\"status\")\n  @Watch(\"icon\")\n  handleIconEl(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  render(): VNode {\n    const hidden = this.el.hidden;\n    return (\n      <Host calcite-hydrated-hidden={hidden}>\n        {this.renderIcon(this.requestedIcon)}\n        <slot />\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputMessageElement;\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private renderIcon(iconName: IconNameOrString): VNode {\n    if (iconName) {\n      return (\n        <calcite-icon\n          class=\"calcite-input-message-icon\"\n          flipRtl={this.iconFlipRtl}\n          icon={iconName}\n          scale=\"s\"\n        />\n      );\n    }\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-input-message-spacing-value: The top margin spacing above the component.\n */\n\n:host {\n  @apply text-color-1 transition-default box-border flex h-auto w-full items-center font-medium opacity-100;\n  --calcite-input-message-spacing-value: theme(\"spacing.1\");\n  margin-block-start: var(--calcite-input-message-spacing-value);\n}\n\n.calcite-input-message-icon {\n  @apply transition-default pointer-events-none inline-flex flex-shrink-0;\n  margin-inline-end: theme(\"margin.2\");\n}\n\n:host([status=\"invalid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-danger);\n}\n\n:host([status=\"warning\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-warning);\n}\n\n:host([status=\"valid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-success);\n}\n\n:host([status=\"idle\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-brand);\n}\n\n:host([scale=\"s\"]) {\n  @apply text-n3h;\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n2h;\n}\n\n:host([scale=\"l\"]) {\n  @apply text-n1h;\n}\n\n@include base-component();\n","export type InputComponent = NumericInputComponent | TextualInputComponent | DateTimeInputComponent;\n\nexport interface DateTimeInputComponent {\n  min: string;\n  max: string;\n}\n\nexport interface NumericInputComponent {\n  min: number;\n  max: number;\n  step: number | \"any\";\n}\n\nexport interface TextualInputComponent {\n  pattern?: string;\n  minLength: number;\n  maxLength: number;\n}\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxStepTypes = [\"date\", \"datetime-local\", \"month\", \"number\", \"range\", \"time\", \"week\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const patternTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"url\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxLengthTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"textarea\", \"url\"];\n\nfunction updateConstraintValidation(\n  inputComponent: InputComponent,\n  input: HTMLInputElement,\n  propName: string,\n  matchesType: boolean,\n): void {\n  const attributeName = propName.toLowerCase();\n  const value = inputComponent[propName];\n\n  if (matchesType && value != null) {\n    input.setAttribute(attributeName, `${value}`);\n  } else {\n    // we remove the attribute to ensure validation-constraints are properly reset\n    input.removeAttribute(attributeName);\n  }\n}\n\n/**\n * Synchronizes the hidden form input with the validation-related input properties.\n *\n * Note: loss of precision is expected due to the hidden input's value and validation-constraint props being strings.\n *\n * @param type - The input type.\n * @param inputComponent\n * @param hiddenFormInput\n */\nexport function syncHiddenFormInput(\n  type: HTMLInputElement[\"type\"] | \"textarea\",\n  inputComponent: InputComponent,\n  hiddenFormInput: HTMLInputElement,\n): void {\n  hiddenFormInput.type = type === \"textarea\" ? \"text\" : type;\n\n  const isMinMaxStepType = minMaxStepTypes.includes(type);\n  const numericInputComponent = inputComponent as NumericInputComponent;\n\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"min\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"max\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"step\", isMinMaxStepType);\n\n  const isMinMaxLengthType = minMaxLengthTypes.includes(type);\n\n  const textualInputComponent = inputComponent as TextualInputComponent;\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"minLength\", isMinMaxLengthType);\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"maxLength\", isMinMaxLengthType);\n\n  const isPatternType = patternTypes.includes(type);\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"pattern\", isPatternType);\n}\n","@import \"../../assets/styles/animation\";\n\n:host {\n  @apply relative block w-full;\n}\n\n.track,\n.bar {\n  @apply absolute top-0;\n  block-size: 2px;\n}\n\n.track {\n  @apply z-default w-full overflow-hidden;\n  background: theme(\"borderColor.color.3\");\n}\n\n.bar {\n  @apply bg-brand z-default;\n}\n\n@media (forced-colors: active) {\n  .track {\n    background-color: highlightText;\n  }\n  .bar {\n    background-color: linkText;\n  }\n}\n\n.indeterminate {\n  @apply w-1/5;\n  animation: looping-progress-bar-ani scaleDuration(--calcite-internal-animation-timing-medium, 11) linear infinite;\n  &.calcite--rtl {\n    animation-name: looping-progress-bar-ani-rtl;\n  }\n}\n\n.reversed {\n  animation-direction: reverse;\n}\n\n.text {\n  @apply text-n2h px-0 pt-4 pb-0 text-center font-medium;\n  color: var(--calcite-color-text-2);\n}\n\n@keyframes looping-progress-bar-ani {\n  0% {\n    transform: translate3d(-100%, 0, 0);\n  }\n  50% {\n    inline-size: 40%;\n  }\n  100% {\n    transform: translate3d(600%, 0, 0);\n  }\n}\n\n@keyframes looping-progress-bar-ani-rtl {\n  0% {\n    transform: translate3d(100%, 0, 0);\n  }\n  50% {\n    inline-size: 40%;\n  }\n  100% {\n    transform: translate3d(-600%, 0, 0);\n  }\n}\n\n@include base-component();\n","import { Component, Element, h, Prop, VNode } from \"@stencil/core\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\n@Component({\n  tag: \"calcite-progress\",\n  styleUrl: \"progress.scss\",\n  shadow: true,\n})\nexport class Progress {\n  @Element() el: HTMLCalciteProgressElement;\n\n  /**\n   * Specifies the component type.\n   *\n   * Use `\"indeterminate\"` if finding actual progress value is impossible.\n   *\n   */\n  @Prop({ reflect: true }) type: \"indeterminate\" | \"determinate\" = \"determinate\";\n\n  /** When `type` is `\"determinate\"`, the component's progress value with a range of 0.0 - 1.0. */\n  @Prop() value = 0;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** Text that displays under the component's indicator. */\n  @Prop() text: string;\n\n  /** When `true` and for `\"indeterminate\"` progress bars, reverses the animation direction. */\n  @Prop({ reflect: true }) reversed = false;\n\n  render(): VNode {\n    const isDeterminate = this.type === \"determinate\";\n    const barStyles = isDeterminate ? { width: `${this.value * 100}%` } : {};\n    const dir = getElementDir(this.el);\n    return (\n      <div\n        aria-label={this.label || this.text}\n        aria-valuemax={1}\n        aria-valuemin={0}\n        aria-valuenow={this.value}\n        role=\"progressbar\"\n      >\n        <div class=\"track\">\n          <div\n            class={{\n              bar: true,\n              indeterminate: this.type === \"indeterminate\",\n              [CSS_UTILITY.rtl]: dir === \"rtl\",\n              reversed: this.reversed,\n            }}\n            style={barStyles}\n          />\n        </div>\n        {this.text ? <div class=\"text\">{this.text}</div> : null}\n      </div>\n    );\n  }\n}\n"],"names":["CSS","Validation","_ref","scale","status","icon","message","h","class","SLOTS","InputNumber","proxyCustomElement","HTMLElement","previousValueOrigin","mutationObserver","createObserver","this","setDisabledAction","userChangedValue","keyDownHandler","event","readOnly","disabled","defaultPrevented","isClearable","key","clearInputValue","preventDefault","submitForm","nativeEvent","setNumberValue","committing","origin","value","emitChangeIfUserModified","previousEmittedNumberValue","calciteInputNumberChange","emit","setPreviousEmittedNumberValue","inputNumberBlurHandler","window","clearInterval","nudgeNumberValueIntervalId","calciteInternalInputNumberBlur","clickHandler","slottedActionEl","getSlotted","el","target","setFocus","inputNumberFocusHandler","calciteInternalInputNumberFocus","inputNumberInputHandler","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","delocalizedValue","delocalize","inputType","isValidNumber","integer","includes","parseNumberString","childNumberEl","displayedValue","inputNumberKeyDownHandler","nudgeNumberValue","supportedKeys","numberKeys","altKey","ctrlKey","metaKey","isShiftTabEvent","shiftKey","decimal","indexOf","test","split","length","direction","KeyboardEvent","repeat","inputMax","maxString","parseFloat","inputMin","minString","incrementOrDecrementNumberValue","firstValueNudge","setInterval","nudgeButtonPointerUpHandler","isPrimaryPointerButton","nudgeButtonPointerOutHandler","nudgeButtonPointerDownHandler","dataset","adjustment","onHiddenFormInputInput","name","stopPropagation","setChildNumberElRef","setInputNumberValue","newInputValue","normalizeValue","setPreviousNumberValue","previousValue","_this$previousValue","_this$value","isValueDeleted","valueHandleInteger","replace","hasTrailingDecimalSeparator","charAt","sanitizedValue","sanitizeNumberString","newValue","newLocalizedValue","localize","addLocalizedTrailingDecimalZeros","concat","calciteInputNumberInput","inputNumberKeyUpHandler","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","handleGlobalAttributesChanged","forceUpdate","disabledWatcher","maxWatcher","_this$max","max","toString","minWatcher","_this$min","min","onMessagesChange","valueWatcher","warnAboutInvalidNumberValue","updateRequestedIcon","requestedIcon","setRequestedIcon","clearable","effectiveLocaleWatcher","updateMessages","connectedCallback","_this$mutationObserve","connectInteractive","connectLocalized","connectMessages","inlineEditableEl","closest","editingEnabled","connectLabel","connectForm","observe","childList","addEventListener","internalHiddenInputInputEvent","componentDidLoad","setComponentLoaded","disconnectedCallback","_this$mutationObserve2","disconnectInteractive","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","disconnect","removeEventListener","componentWillLoad","_this$max2","_this$min2","setUpLoadableComponent","setUpMessages","componentShouldUpdate","oldValue","property","componentDidRender","updateHostInteraction","_this$childNumberEl","componentFocusable","focus","selectText","_this$childNumberEl2","select","onLabelClick","stepHandleInteger","step","Math","round","inputStep","abs","nudgedValue","BigDecimal","add","finalValue","isNaN","subtract","isNegative","syncHiddenFormInput","input","getAttribute","slottedActionElDisabledInternally","setAttribute","removeAttribute","console","warn","render","dir","getElementDir","loader","label","messages","loading","type","inputClearButton","clear","onClick","tabIndex","getIconScale","iconEl","flipRtl","iconFlipRtl","isHorizontalNumberButton","numberButtonType","numberButtonsHorizontalUp","onPointerDown","onPointerOut","onPointerUp","numberButtonsHorizontalDown","numberButtonsVertical","prefixText","suffixText","childEl","getLabelText","autocomplete","autofocus","defaultValue","enterKeyHint","inputMode","maxLength","minLength","undefined","onBlur","onFocus","onInput","onKeyDown","onKeyUp","placeholder","ref","Host","InteractiveContainer","CSS_UTILITY","rtl","HiddenFormInputSlot","component","validationMessage","validationIcon","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","size","numberLeadingName","Number","parts","firstNonDigitInPartPattern","map","part","partIndex","match","offset","toUpperCase","join","normalizeIconName","filled","iconName","substring","getCachedIconDataByKey","id","Icon","visible","waitUntilVisible","loadIconPathData","_this$intersectionObs","intersectionObserver","pathData","textLabel","semantic","paths","toAriaBoolean","role","svg","fill","height","viewBox","width","xmlns","path","d","opacity","isBrowser","fetchIconProps","async","props","cachedIconKey","cachedIconData","fetch","getAssetPath","then","resp","json","catch","error","fetchIcon","callback","entries","forEach","entry","isIntersecting","rootMargin","StatusIconDefaults","invalid","idle","InputMessage","handleIconEl","hidden","renderIcon","minMaxStepTypes","patternTypes","minMaxLengthTypes","updateConstraintValidation","inputComponent","propName","matchesType","attributeName","toLowerCase","hiddenFormInput","isMinMaxStepType","numericInputComponent","isMinMaxLengthType","textualInputComponent","Progress","barStyles","text","bar","indeterminate","reversed","style"],"sourceRoot":""}