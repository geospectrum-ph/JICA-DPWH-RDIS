{"version":3,"file":"static/js/2866.82f39ad4.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/utils/label.ts","../node_modules/@esri/calcite-components/dist/components/src/components/label/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/label/label.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/label/label.scss?tag=calcite-label&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/component.ts"],"sourcesContent":["import { closestElementCrossShadowBoundary, isBefore, queryElementRoots } from \"./dom\";\nimport { componentOnReady } from \"./component\";\n\nexport interface LabelableComponent {\n  /**\n   * When true, disabled prevents interaction.\n   */\n  disabled: boolean;\n\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n\n  /**\n   * Text label.\n   */\n  label?: string;\n\n  /**\n   * The label this component is associated with.\n   */\n  labelEl: HTMLCalciteLabelElement;\n\n  /**\n   * Hook for components to provide custom label click behavior.\n   */\n  onLabelClick: (event: CustomEvent<any>) => void;\n}\n\n/**\n * Exported for testing purposes only\n *\n * @internal\n */\nexport const labelClickEvent = \"calciteInternalLabelClick\";\nexport const labelConnectedEvent = \"calciteInternalLabelConnected\";\nexport const labelDisconnectedEvent = \"calciteInternalLabelDisconnected\";\n\nconst labelTagName = \"calcite-label\";\nconst labelToLabelables = new WeakMap<HTMLCalciteLabelElement, LabelableComponent[]>();\nconst onLabelClickMap = new WeakMap<HTMLCalciteLabelElement, typeof onLabelClick>();\nconst onLabelConnectedMap = new WeakMap<LabelableComponent, typeof onLabelConnected>();\nconst onLabelDisconnectedMap = new WeakMap<LabelableComponent, typeof onLabelDisconnected>();\nconst unlabeledComponents = new Set<LabelableComponent>();\n\nconst findLabelForComponent = (componentEl: HTMLElement): HTMLCalciteLabelElement | null => {\n  const { id } = componentEl;\n\n  const forLabel =\n    id && (queryElementRoots(componentEl, { selector: `${labelTagName}[for=\"${id}\"]` }) as HTMLCalciteLabelElement);\n\n  if (forLabel) {\n    return forLabel;\n  }\n\n  const parentLabel = closestElementCrossShadowBoundary<HTMLCalciteLabelElement>(componentEl, labelTagName);\n\n  if (\n    !parentLabel ||\n    // labelable components within other custom elements are not considered labelable\n    hasAncestorCustomElements(parentLabel, componentEl)\n  ) {\n    return null;\n  }\n\n  return parentLabel;\n};\n\nfunction hasAncestorCustomElements(label: HTMLCalciteLabelElement, componentEl: HTMLElement): boolean {\n  let traversedElements: HTMLElement[];\n  const customElementAncestorCheckEventType = \"custom-element-ancestor-check\";\n\n  const listener = (event: CustomEvent) => {\n    event.stopImmediatePropagation();\n    const composedPath = event.composedPath() as HTMLElement[];\n    traversedElements = composedPath.slice(composedPath.indexOf(componentEl), composedPath.indexOf(label));\n  };\n\n  label.addEventListener(customElementAncestorCheckEventType, listener, { once: true });\n\n  componentEl.dispatchEvent(new CustomEvent(customElementAncestorCheckEventType, { composed: true, bubbles: true }));\n  label.removeEventListener(customElementAncestorCheckEventType, listener);\n\n  const ancestorCustomElements = traversedElements\n    .filter((el) => el !== componentEl && el !== label)\n    .filter((el) => el.tagName?.includes(\"-\"));\n\n  return ancestorCustomElements.length > 0;\n}\n\n/**\n * Helper to set up label interactions on connectedCallback.\n *\n * @param component\n */\nexport function connectLabel(component: LabelableComponent): void {\n  if (!component) {\n    return;\n  }\n\n  const labelEl = findLabelForComponent(component.el);\n\n  if (\n    (onLabelClickMap.has(labelEl) && labelEl === component.labelEl) ||\n    (!labelEl && unlabeledComponents.has(component))\n  ) {\n    return;\n  }\n\n  const boundOnLabelDisconnected = onLabelDisconnected.bind(component);\n\n  if (labelEl) {\n    component.labelEl = labelEl;\n\n    const labelables = labelToLabelables.get(labelEl) || [];\n    labelables.push(component);\n    labelToLabelables.set(labelEl, labelables.sort(sortByDOMOrder));\n\n    if (!onLabelClickMap.has(component.labelEl)) {\n      onLabelClickMap.set(component.labelEl, onLabelClick);\n      component.labelEl.addEventListener(labelClickEvent, onLabelClick);\n    }\n\n    unlabeledComponents.delete(component);\n    document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n    onLabelDisconnectedMap.set(component, boundOnLabelDisconnected);\n    document.addEventListener(labelDisconnectedEvent, boundOnLabelDisconnected);\n  } else if (!unlabeledComponents.has(component)) {\n    boundOnLabelDisconnected();\n    document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  }\n}\n/**\n * Helper to tear down label interactions on disconnectedCallback on labelable components.\n *\n * @param component\n */\nexport function disconnectLabel(component: LabelableComponent): void {\n  if (!component) {\n    return;\n  }\n\n  unlabeledComponents.delete(component);\n  document.removeEventListener(labelConnectedEvent, onLabelConnectedMap.get(component));\n  document.removeEventListener(labelDisconnectedEvent, onLabelDisconnectedMap.get(component));\n  onLabelConnectedMap.delete(component);\n  onLabelDisconnectedMap.delete(component);\n\n  if (!component.labelEl) {\n    return;\n  }\n\n  const labelables = labelToLabelables.get(component.labelEl);\n\n  if (labelables.length === 1) {\n    component.labelEl.removeEventListener(labelClickEvent, onLabelClickMap.get(component.labelEl));\n    onLabelClickMap.delete(component.labelEl);\n  }\n\n  labelToLabelables.set(\n    component.labelEl,\n    labelables.filter((labelable) => labelable !== component).sort(sortByDOMOrder),\n  );\n\n  component.labelEl = null;\n}\n\nfunction sortByDOMOrder(a: LabelableComponent, b: LabelableComponent): number {\n  return isBefore(a.el, b.el) ? -1 : 1;\n}\n\n/**\n * Helper to get the label text from a component.\n *\n * @param component\n */\nexport function getLabelText(component: LabelableComponent): string {\n  return component.label || component.labelEl?.textContent?.trim() || \"\";\n}\n\nfunction onLabelClick(this: HTMLCalciteLabelElement, event: CustomEvent<{ sourceEvent: MouseEvent }>): void {\n  const labelClickTarget = event.detail.sourceEvent.target as HTMLElement;\n  const labelables = labelToLabelables.get(this);\n  const clickedLabelable = labelables.find((labelable) => labelable.el === labelClickTarget);\n  const labelableChildClicked = labelables.includes(clickedLabelable);\n\n  if (labelableChildClicked) {\n    // no need to forward click as labelable will receive focus\n    return;\n  }\n\n  const firstLabelable = labelables[0];\n\n  if (firstLabelable.disabled) {\n    return;\n  }\n\n  firstLabelable.onLabelClick(event);\n}\n\nfunction onLabelConnected(this: LabelableComponent): void {\n  if (unlabeledComponents.has(this)) {\n    connectLabel(this);\n  }\n}\n\nfunction onLabelDisconnected(this: LabelableComponent): void {\n  unlabeledComponents.add(this);\n  const boundOnLabelConnected = onLabelConnectedMap.get(this) || onLabelConnected.bind(this);\n  onLabelConnectedMap.set(this, boundOnLabelConnected);\n  document.addEventListener(labelConnectedEvent, boundOnLabelConnected);\n}\n\n/**\n * Helper to associate an explicit label (i.e., using `for`) with a labelable component that does not have an associated label.\n *\n * @param label - the label element\n */\nexport async function associateExplicitLabelToUnlabeledComponent(label: HTMLCalciteLabelElement): Promise<void> {\n  await componentOnReady(label);\n\n  const alreadyLabeled = labelToLabelables.has(label);\n\n  if (alreadyLabeled) {\n    return;\n  }\n\n  const forComponentEl = label.ownerDocument?.getElementById(label.for);\n\n  if (!forComponentEl) {\n    return;\n  }\n\n  requestAnimationFrame(() => {\n    for (const labelable of unlabeledComponents) {\n      if (labelable.el === forComponentEl) {\n        connectLabel(labelable);\n        break;\n      }\n    }\n  });\n}\n","export const CSS = {\n  container: \"container\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  associateExplicitLabelToUnlabeledComponent,\n  labelConnectedEvent,\n  labelDisconnectedEvent,\n} from \"../../utils/label\";\nimport { Alignment, Scale } from \"../interfaces\";\nimport { CSS } from \"./resources\";\n\n/**\n * @slot - A slot for adding text and a component that can be labeled.\n */\n@Component({\n  tag: \"calcite-label\",\n  styleUrl: \"label.scss\",\n  shadow: true,\n})\nexport class Label {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the text alignment of the component. */\n  @Prop({ reflect: true }) alignment: Alignment = \"start\";\n\n  /** Specifies the `id` of the component the label is bound to. Use when the component the label is bound to does not reside within the component. */\n  @Prop({ reflect: true }) for: string;\n\n  @Watch(\"for\")\n  handleForChange(): void {\n    associateExplicitLabelToUnlabeledComponent(this.el);\n  }\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Defines the layout of the label in relation to the component. Use `\"inline\"` positions to wrap the label and component on the same line. */\n  @Prop({ reflect: true }) layout: \"inline\" | \"inline-space-between\" | \"default\" = \"default\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ bubbles: false, cancelable: false }) calciteInternalLabelClick: EventEmitter<{\n    sourceEvent: MouseEvent;\n  }>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteLabelElement;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  labelClickHandler = (event: MouseEvent): void => {\n    this.calciteInternalLabelClick.emit({\n      sourceEvent: event,\n    });\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    document.dispatchEvent(new CustomEvent(labelConnectedEvent));\n  }\n\n  disconnectedCallback(): void {\n    document.dispatchEvent(new CustomEvent(labelDisconnectedEvent));\n  }\n\n  render(): VNode {\n    return (\n      <Host onClick={this.labelClickHandler}>\n        <div class={CSS.container}>\n          <slot />\n        </div>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-label-margin-bottom: The spacing below the component.\n */\n\n:host {\n  @apply flex;\n}\n\n:host([alignment=\"start\"]) {\n  text-align: start;\n}\n\n:host([alignment=\"end\"]) {\n  text-align: end;\n}\n\n:host([alignment=\"center\"]) {\n  @apply text-center;\n}\n\n:host([scale=\"s\"]) {\n  .container {\n    @apply text-n2h gap-1;\n    margin-block-end: var(--calcite-label-margin-bottom, theme(\"spacing.2\"));\n  }\n}\n:host([scale=\"m\"]) {\n  .container {\n    @apply text-n1h gap-2;\n    margin-block-end: var(--calcite-label-margin-bottom, theme(\"spacing.3\"));\n  }\n}\n:host([scale=\"l\"]) {\n  .container {\n    @apply text-0h gap-2;\n    margin-block-end: var(--calcite-label-margin-bottom, theme(\"spacing.4\"));\n  }\n}\n\n:host .container {\n  @apply text-color-1\n    mt-0\n    mx-0\n    w-full\n    leading-snug;\n}\n\n:host([layout=\"default\"]) {\n  .container {\n    @apply flex flex-col;\n  }\n}\n\n:host([layout=\"inline\"]),\n:host([layout=\"inline-space-between\"]) {\n  .container {\n    @apply flex flex-row items-center gap-2;\n  }\n}\n:host([layout=\"inline\"][scale=\"l\"]) {\n  .container {\n    @apply gap-3;\n  }\n}\n\n:host([layout=\"inline-space-between\"]) {\n  .container {\n    @apply justify-between;\n  }\n}\n\n@include disabled() {\n  & > .container {\n    @apply opacity-disabled;\n  }\n\n  // prevent opacity stacking with already disabled child elements\n  ::slotted(*[disabled]),\n  ::slotted(*[disabled] *) {\n    @apply bg-opacity-100;\n  }\n  ::slotted(calcite-input-message:not([active])) {\n    @apply bg-opacity-0;\n  }\n}\n\n@include base-component();\n","import { HTMLStencilElement } from \"@stencil/core/internal\";\nimport { Scale } from \"../components/interfaces\";\n\nexport function getIconScale(componentScale: Scale): Extract<Scale, \"s\" | \"m\"> {\n  return componentScale === \"l\" ? \"m\" : \"s\";\n}\n\n/**\n * This util helps us wait for a component to be ready for both lazy-loading (`dist` output) and non-lazy-loading (`components` output) components.\n *\n * Based on https://github.com/ionic-team/ionic-framework/blob/1a8bd6d/core/src/utils/helpers.ts#L60C1-L79C3\n *\n * @param el - the host element to wait for\n */\nexport async function componentOnReady(el: HTMLElement): Promise<void> {\n  await (isStencilEl(el)\n    ? el.componentOnReady()\n    : new Promise<void>((resolve) => requestAnimationFrame(() => resolve())));\n}\n\nfunction isStencilEl(el: HTMLElement): el is HTMLStencilElement {\n  return typeof (el as HTMLStencilElement).componentOnReady === \"function\";\n}\n"],"names":["labelClickEvent","labelConnectedEvent","labelDisconnectedEvent","labelTagName","labelToLabelables","WeakMap","onLabelClickMap","onLabelConnectedMap","onLabelDisconnectedMap","unlabeledComponents","Set","findLabelForComponent","componentEl","id","forLabel","queryElementRoots","selector","parentLabel","closestElementCrossShadowBoundary","label","traversedElements","customElementAncestorCheckEventType","listener","event","stopImmediatePropagation","composedPath","slice","indexOf","addEventListener","once","dispatchEvent","CustomEvent","composed","bubbles","removeEventListener","ancestorCustomElements","filter","el","tagName","includes","length","hasAncestorCustomElements","connectLabel","component","labelEl","has","boundOnLabelDisconnected","onLabelDisconnected","bind","labelables","get","push","set","sort","sortByDOMOrder","onLabelClick","delete","document","disconnectLabel","labelable","a","b","isBefore","getLabelText","textContent","trim","labelClickTarget","detail","sourceEvent","target","this","clickedLabelable","find","firstLabelable","disabled","onLabelConnected","add","boundOnLabelConnected","async","associateExplicitLabelToUnlabeledComponent","componentOnReady","forComponentEl","ownerDocument","getElementById","for","requestAnimationFrame","CSS","Label","proxyCustomElement","HTMLElement","labelClickHandler","calciteInternalLabelClick","emit","handleForChange","connectedCallback","disconnectedCallback","render","h","Host","key","onClick","class","getIconScale","componentScale","isStencilEl","Promise","resolve"],"sourceRoot":""}