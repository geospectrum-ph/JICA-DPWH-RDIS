{"version":3,"file":"static/js/3365.96231869.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/input-message/interfaces.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.scss?tag=calcite-input-message&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/text-area/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/text-area/text-area.tsx","../node_modules/@esri/calcite-components/node_modules/lodash-es/throttle.js","../node_modules/@esri/calcite-components/dist/components/src/components/text-area/text-area.scss?tag=calcite-text-area&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/functional/Validation.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/node_modules/lodash-es/_freeGlobal.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_root.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_Symbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_getRawTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_objectToString.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseGetTag.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObjectLike.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isSymbol.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_trimmedEndIndex.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/_baseTrim.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/isObject.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/toNumber.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/now.js","../node_modules/@esri/calcite-components/node_modules/lodash-es/debounce.js","../node_modules/@esri/calcite-components/dist/components/src/components/input/common/input.ts"],"sourcesContent":["export const StatusIconDefaults = {\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n  idle: \"information\",\n} as const;\n","import { Component, Element, h, Host, Prop, VNode, Watch } from \"@stencil/core\";\nimport { setRequestedIcon } from \"../../utils/dom\";\nimport { Scale, Status } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { StatusIconDefaults } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding text.\n */\n@Component({\n  tag: \"calcite-input-message\",\n  styleUrl: \"input-message.scss\",\n  shadow: true,\n})\nexport class InputMessage {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  @Watch(\"status\")\n  @Watch(\"icon\")\n  handleIconEl(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  render(): VNode {\n    const hidden = this.el.hidden;\n    return (\n      <Host calcite-hydrated-hidden={hidden}>\n        {this.renderIcon(this.requestedIcon)}\n        <slot />\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputMessageElement;\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private renderIcon(iconName: IconNameOrString): VNode {\n    if (iconName) {\n      return (\n        <calcite-icon\n          class=\"calcite-input-message-icon\"\n          flipRtl={this.iconFlipRtl}\n          icon={iconName}\n          scale=\"s\"\n        />\n      );\n    }\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-input-message-spacing-value: The top margin spacing above the component.\n */\n\n:host {\n  @apply text-color-1 transition-default box-border flex h-auto w-full items-center font-medium opacity-100;\n  --calcite-input-message-spacing-value: theme(\"spacing.1\");\n  margin-block-start: var(--calcite-input-message-spacing-value);\n}\n\n.calcite-input-message-icon {\n  @apply transition-default pointer-events-none inline-flex flex-shrink-0;\n  margin-inline-end: theme(\"margin.2\");\n}\n\n:host([status=\"invalid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-danger);\n}\n\n:host([status=\"warning\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-warning);\n}\n\n:host([status=\"valid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-success);\n}\n\n:host([status=\"idle\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-brand);\n}\n\n:host([scale=\"s\"]) {\n  @apply text-n3h;\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n2h;\n}\n\n:host([scale=\"l\"]) {\n  @apply text-n1h;\n}\n\n@include base-component();\n","export const CSS = {\n  assistiveText: \"assistive-text\",\n  characterLimit: \"character-limit\",\n  content: \"content\",\n  container: \"container\",\n  footer: \"footer\",\n  resizeDisabled: \"resize--disabled\",\n  resizeDisabledX: \"resize--disabled-x\",\n  resizeDisabledY: \"resize--disabled-y\",\n  characterOverLimit: \"character--over-limit\",\n  readOnly: \"readonly\",\n  textAreaInvalid: \"text-area--invalid\",\n  footerSlotted: \"footer--slotted\",\n  borderColor: \"border--color\",\n  hide: \"hide\",\n  blockSizeFull: \"block-size--full\",\n  footerEndSlotOnly: \"footer--end-only\",\n};\n\nexport const SLOTS = {\n  footerStart: \"footer-start\",\n  footerEnd: \"footer-end\",\n};\n\nexport const RESIZE_TIMEOUT = 100;\n","import {\n  Component,\n  h,\n  Prop,\n  Element,\n  Event,\n  EventEmitter,\n  VNode,\n  Watch,\n  Method,\n  Host,\n  State,\n  forceUpdate,\n} from \"@stencil/core\";\nimport { throttle } from \"lodash-es\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  MutableValidityState,\n} from \"../../utils/form\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport { slotChangeHasAssignedElement, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport { createObserver } from \"../../utils/observers\";\nimport {\n  componentFocusable,\n  componentLoaded,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { guid } from \"../../utils/guid\";\nimport { Status } from \"../interfaces\";\nimport { Validation } from \"../functional/Validation\";\nimport { syncHiddenFormInput, TextualInputComponent } from \"../input/common/input\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CharacterLengthObj } from \"./interfaces\";\nimport { TextAreaMessages } from \"./assets/text-area/t9n\";\nimport { CSS, SLOTS, RESIZE_TIMEOUT } from \"./resources\";\n\n/**\n * @slot - A slot for adding text.\n * @slot footer-start - A slot for adding content to the start of the component's footer.\n * @slot footer-end - A slot for adding content to the end of the component's footer.\n */\n\n@Component({\n  tag: \"calcite-text-area\",\n  styleUrl: \"text-area.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class TextArea\n  implements\n    FormComponent,\n    LabelableComponent,\n    LocalizedComponent,\n    LoadableComponent,\n    T9nComponent,\n    InteractiveComponent,\n    Omit<TextualInputComponent, \"pattern\">\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Global attributes\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"autofocus\")\n  handleGlobalAttributesChanged(): void {\n    forceUpdate(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Specifies the component's number of columns.\n   *\n   * @mdn [cols](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-cols)\n   */\n  @Prop({ reflect: true }) columns: number;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   *\n   * @mdn [disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true })\n  form: string;\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /**\n   * Accessible name for the component.\n   */\n  @Prop() label: string;\n\n  /**\n   * Specifies the minimum number of characters allowed.\n   *\n   * @mdn [minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-minlength)\n   */\n  @Prop({ reflect: true }) minLength: number;\n\n  /**\n   * Specifies the maximum number of characters allowed.\n   *\n   * @mdn [maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-maxlength)\n   */\n  @Prop({ reflect: true }) maxLength: number;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: TextAreaMessages;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * @mdn [name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-name)\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   */\n  @Prop() numberingSystem: NumberingSystem;\n\n  /**\n   * Specifies the placeholder text for the component.\n   *\n   * @mdn [placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-placeholder)\n   */\n  @Prop() placeholder: string;\n\n  /**\n   * When `true`, the component's `value` can be read, but cannot be modified.\n   *\n   * @readonly\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  /**\n   * When `true`, the component must have a value in order for the form to submit.\n   *\n   * @mdn [required]https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/required\n   */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies if the component is resizable. */\n  @Prop({ reflect: true }) resize: \"both\" | \"horizontal\" | \"vertical\" | \"none\" = \"both\";\n\n  /**\n   * Specifies the component's number of rows.\n   *\n   * @mdn [rows](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-rows)\n   */\n  @Prop({ reflect: true }) rows: number;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: \"l\" | \"m\" | \"s\" = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /** The component's value. */\n  @Prop({ mutable: true }) value = \"\";\n\n  /**\n   * Specifies the wrapping mechanism for the text.\n   *\n   * @mdn [wrap](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/textarea#attr-wrap)\n   */\n  @Prop({ reflect: true }) wrap: \"soft\" | \"hard\" = \"soft\";\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<TextAreaMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Emitters\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Fires each time a new `value` is typed.\n   */\n  @Event() calciteTextAreaInput: EventEmitter<void>;\n\n  /**\n   * Fires each time a new `value` is typed and committed.\n   */\n  @Event() calciteTextAreaChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLabel(this);\n    connectForm(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n    this.setTextAreaHeight();\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  render(): VNode {\n    const hasFooter = this.startSlotHasElements || this.endSlotHasElements || !!this.maxLength;\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <textarea\n            aria-describedby={this.guid}\n            aria-invalid={toAriaBoolean(this.isCharacterLimitExceeded())}\n            aria-label={getLabelText(this)}\n            autofocus={this.el.autofocus}\n            class={{\n              [CSS.readOnly]: this.readOnly,\n              [CSS.textAreaInvalid]: this.isCharacterLimitExceeded(),\n              [CSS.footerSlotted]: this.endSlotHasElements && this.startSlotHasElements,\n              [CSS.blockSizeFull]: !hasFooter,\n              [CSS.borderColor]: !hasFooter,\n            }}\n            cols={this.columns}\n            disabled={this.disabled}\n            name={this.name}\n            onChange={this.handleChange}\n            onInput={this.handleInput}\n            placeholder={this.placeholder}\n            readOnly={this.readOnly}\n            ref={this.setTextAreaEl}\n            required={this.required}\n            rows={this.rows}\n            value={this.value}\n            wrap={this.wrap}\n          />\n          <span class={{ [CSS.content]: true }}>\n            <slot onSlotchange={this.contentSlotChangeHandler} />\n          </span>\n          <footer\n            class={{\n              [CSS.footer]: true,\n              [CSS.readOnly]: this.readOnly,\n              [CSS.hide]: !hasFooter,\n            }}\n            ref={(el) => (this.footerEl = el as HTMLElement)}\n          >\n            <div\n              class={{\n                [CSS.container]: true,\n                [CSS.footerEndSlotOnly]: !this.startSlotHasElements && this.endSlotHasElements,\n              }}\n            >\n              <slot\n                name={SLOTS.footerStart}\n                onSlotchange={(event) =>\n                  (this.startSlotHasElements = slotChangeHasAssignedElement(event))\n                }\n              />\n              <slot\n                name={SLOTS.footerEnd}\n                onSlotchange={(event) =>\n                  (this.endSlotHasElements = slotChangeHasAssignedElement(event))\n                }\n              />\n            </div>\n            {this.renderCharacterLimit()}\n          </footer>\n          <HiddenFormInputSlot component={this} />\n          {this.isCharacterLimitExceeded() && (\n            <span aria-hidden={true} aria-live=\"polite\" class={CSS.assistiveText} id={this.guid}>\n              {this.replacePlaceHoldersInMessages()}\n            </span>\n          )}\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.textAreaEl.focus();\n  }\n\n  /** Selects the text of the component's `value`. */\n  @Method()\n  async selectText(): Promise<void> {\n    await componentLoaded(this);\n    this.textAreaEl.select();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties/ State\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteTextAreaElement;\n\n  defaultValue: TextArea[\"value\"];\n\n  footerEl: HTMLElement;\n\n  formEl: HTMLFormElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  textAreaEl: HTMLTextAreaElement;\n\n  @State() defaultMessages: TextAreaMessages;\n\n  @State() endSlotHasElements: boolean;\n\n  @State() startSlotHasElements: boolean;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  private guid = guid();\n\n  private localizedCharacterLengthObj: CharacterLengthObj;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  handleInput = (event: InputEvent): void => {\n    this.value = event.target[\"value\"];\n    this.calciteTextAreaInput.emit();\n  };\n\n  handleChange = (): void => {\n    this.calciteTextAreaChange.emit();\n  };\n\n  contentSlotChangeHandler = (): void => {\n    if (!this.value) {\n      const nodes = this.el.childNodes;\n      nodes.forEach((el) => {\n        if (el.nodeName === \"#text\") {\n          this.value = el.nodeValue.trim();\n        }\n      });\n    }\n  };\n\n  renderCharacterLimit = (): VNode | null => {\n    if (this.maxLength) {\n      this.localizedCharacterLengthObj = this.getLocalizedCharacterLength();\n      return (\n        <span class={CSS.characterLimit}>\n          <span class={{ [CSS.characterOverLimit]: this.isCharacterLimitExceeded() }}>\n            {this.localizedCharacterLengthObj.currentLength}\n          </span>\n          {\"/\"}\n          {this.localizedCharacterLengthObj.maxLength}\n        </span>\n      );\n    }\n    return null;\n  };\n\n  getLocalizedCharacterLength(): CharacterLengthObj {\n    const currentLength = this.value ? this.value.length.toString() : \"0\";\n    const maxLength = this.maxLength.toString();\n    if (this.numberingSystem === \"latn\") {\n      return { currentLength, maxLength };\n    }\n\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      signDisplay: \"never\",\n      useGrouping: this.groupSeparator,\n    };\n    return {\n      currentLength: numberStringFormatter.localize(currentLength),\n      maxLength: numberStringFormatter.localize(maxLength),\n    };\n  }\n\n  resizeObserver = createObserver(\"resize\", async () => {\n    await componentLoaded(this);\n    const { textAreaHeight, textAreaWidth, elHeight, elWidth, footerHeight, footerWidth } =\n      this.getHeightAndWidthOfElements();\n    if (footerWidth > 0 && footerWidth !== textAreaWidth) {\n      this.footerEl.style.width = `${textAreaWidth}px`;\n    }\n    if (elWidth !== textAreaWidth || elHeight !== textAreaHeight + (footerHeight || 0)) {\n      this.setHeightAndWidthToAuto();\n    }\n  });\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    input.setCustomValidity(\"\");\n    if (this.isCharacterLimitExceeded()) {\n      input.setCustomValidity(this.replacePlaceHoldersInMessages());\n    }\n\n    syncHiddenFormInput(\"textarea\", this, input);\n  }\n\n  setTextAreaEl = (el: HTMLTextAreaElement): void => {\n    this.textAreaEl = el;\n    this.resizeObserver.observe(el);\n  };\n\n  setTextAreaHeight(): void {\n    const { textAreaHeight, elHeight, footerHeight } = this.getHeightAndWidthOfElements();\n    if (footerHeight > 0 && textAreaHeight + footerHeight != elHeight) {\n      this.textAreaEl.style.height = `${elHeight - footerHeight}px`;\n    }\n  }\n\n  getHeightAndWidthOfElements(): {\n    textAreaHeight: number;\n    textAreaWidth: number;\n    elHeight: number;\n    elWidth: number;\n    footerHeight: number;\n    footerWidth: number;\n  } {\n    const { height: textAreaHeight, width: textAreaWidth } =\n      this.textAreaEl.getBoundingClientRect();\n    const { height: elHeight, width: elWidth } = this.el.getBoundingClientRect();\n    const { height: footerHeight, width: footerWidth } = this.footerEl.getBoundingClientRect();\n\n    return {\n      textAreaHeight,\n      textAreaWidth,\n      elHeight,\n      elWidth,\n      footerHeight,\n      footerWidth,\n    };\n  }\n\n  private replacePlaceHoldersInMessages(): string {\n    return this.messages.tooLong\n      .replace(\"{maxLength}\", this.localizedCharacterLengthObj.maxLength)\n      .replace(\"{currentLength}\", this.localizedCharacterLengthObj.currentLength);\n  }\n\n  // height and width are set to auto here to avoid overlapping on to neighboring elements in the layout when user starts resizing.\n  // throttle is used to avoid flashing of textarea when user resizes.\n  private setHeightAndWidthToAuto = throttle(\n    (): void => {\n      if (this.resize === \"vertical\" || this.resize === \"both\") {\n        this.el.style.height = \"auto\";\n      }\n      if (this.resize === \"horizontal\" || this.resize === \"both\") {\n        this.el.style.width = \"auto\";\n      }\n    },\n    RESIZE_TIMEOUT,\n    { leading: false },\n  );\n\n  private isCharacterLimitExceeded(): boolean {\n    return this.value?.length > this.maxLength;\n  }\n}\n","import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n",":host {\n  @apply inline-block\n  relative\n  w-full\n  h-full;\n}\n\ntextarea {\n  @apply font-sans\n    text-color-1\n    relative\n    block\n    bg-foreground-1\n    box-border\n    border-color-input\n    border\n    w-full\n    m-0;\n  min-inline-size: theme(\"spacing.48\");\n  border-block-end: 1px solid var(--calcite-color-border-3);\n  @media screen and (max-width: 480px) {\n    @apply resize-none;\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &.text-area--invalid {\n    @apply border-color-danger\n    border\n    border-solid\n    border-b;\n    &:focus {\n      @apply focus-inset-danger;\n    }\n  }\n  &.footer--slotted {\n    min-inline-size: theme(\"spacing.72\");\n  }\n}\n\n.footer {\n  @apply flex\n  bg-foreground-1\n  box-border\n  border-color-input\n  border\n  border-solid\n  border-t-0\n  items-center;\n}\n\n.character-limit {\n  @apply flex\n  justify-end\n  text-color-2\n  items-center\n  font-normal\n  whitespace-nowrap;\n}\n\n.character--over-limit {\n  @apply font-bold\n  text-danger;\n}\n\n:host([resize=\"none\"]) textarea {\n  @apply resize-none;\n}\n\n:host([resize=\"horizontal\"]) textarea {\n  @apply resize-x;\n}\n\n:host([resize=\"vertical\"]) textarea {\n  @apply resize-y;\n}\n\n:host([scale=\"s\"]) {\n  @apply text-n2;\n  .footer {\n    @apply py-1\n    px-2;\n    min-block-size: 1.75rem;\n  }\n  textarea {\n    @apply py-1\n    px-2;\n  }\n\n  textarea,\n  .footer,\n  .character-limit {\n    @apply text-n2\n    pl-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  textarea {\n    @apply py-2\n    px-3;\n  }\n  .footer {\n    @apply py-2\n    px-3;\n    min-block-size: 2.25rem;\n  }\n\n  textarea,\n  .footer,\n  .character-limit {\n    @apply text-n1\n    pl-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  @apply text-0;\n  textarea {\n    @apply py-3\n    px-4;\n  }\n  .footer {\n    @apply py-3\n    px-4;\n    min-block-size: 2.75rem;\n  }\n\n  textarea,\n  .footer,\n  .character-limit {\n    @apply text-0\n    pl-4;\n  }\n}\n\n:host([status=\"invalid\"]) {\n  textarea {\n    @apply border-color-danger;\n  }\n  textarea:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n.readonly {\n  @apply bg-background font-medium;\n}\n\n.border--color {\n  @apply border-b border-color-input;\n  &:focus {\n    @apply border-b-2;\n  }\n}\n\ntextarea.block-size--full {\n  @apply h-full;\n}\n\n.content,\n.hide {\n  @apply hidden;\n}\n\n.container {\n  @apply flex\n  justify-between\n  w-full;\n}\n\n.footer--end-only {\n  @apply justify-end;\n}\n\n.assistive-text {\n  @apply sr-only;\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include disabled();\n@include base-component();\n","import { FunctionalComponent, h } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\nimport { Scale, Status } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\n\ninterface ValidationProps extends JSXBase.HTMLAttributes {\n  scale: Scale;\n  status: Status;\n  icon?: IconNameOrString | boolean;\n  message: string;\n}\n\nexport const CSS = {\n  validationContainer: \"validation-container\",\n};\n\nexport const Validation: FunctionalComponent<ValidationProps> = ({\n  scale,\n  status,\n  icon,\n  message,\n}) => (\n  <div class={CSS.validationContainer}>\n    <calcite-input-message icon={icon} scale={scale} status={status}>\n      {message}\n    </calcite-input-message>\n  </div>\n);\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: The component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n","/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n","import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n","import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n","import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n","export type InputComponent = NumericInputComponent | TextualInputComponent | DateTimeInputComponent;\n\nexport interface DateTimeInputComponent {\n  min: string;\n  max: string;\n}\n\nexport interface NumericInputComponent {\n  min: number;\n  max: number;\n  step: number | \"any\";\n}\n\nexport interface TextualInputComponent {\n  pattern?: string;\n  minLength: number;\n  maxLength: number;\n}\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxStepTypes = [\"date\", \"datetime-local\", \"month\", \"number\", \"range\", \"time\", \"week\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const patternTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"url\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxLengthTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"textarea\", \"url\"];\n\nfunction updateConstraintValidation(\n  inputComponent: InputComponent,\n  input: HTMLInputElement,\n  propName: string,\n  matchesType: boolean,\n): void {\n  const attributeName = propName.toLowerCase();\n  const value = inputComponent[propName];\n\n  if (matchesType && value != null) {\n    input.setAttribute(attributeName, `${value}`);\n  } else {\n    // we remove the attribute to ensure validation-constraints are properly reset\n    input.removeAttribute(attributeName);\n  }\n}\n\n/**\n * Synchronizes the hidden form input with the validation-related input properties.\n *\n * Note: loss of precision is expected due to the hidden input's value and validation-constraint props being strings.\n *\n * @param type - The input type.\n * @param inputComponent\n * @param hiddenFormInput\n */\nexport function syncHiddenFormInput(\n  type: HTMLInputElement[\"type\"] | \"textarea\",\n  inputComponent: InputComponent,\n  hiddenFormInput: HTMLInputElement,\n): void {\n  hiddenFormInput.type = type === \"textarea\" ? \"text\" : type;\n\n  const isMinMaxStepType = minMaxStepTypes.includes(type);\n  const numericInputComponent = inputComponent as NumericInputComponent;\n\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"min\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"max\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"step\", isMinMaxStepType);\n\n  const isMinMaxLengthType = minMaxLengthTypes.includes(type);\n\n  const textualInputComponent = inputComponent as TextualInputComponent;\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"minLength\", isMinMaxLengthType);\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"maxLength\", isMinMaxLengthType);\n\n  const isPatternType = patternTypes.includes(type);\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"pattern\", isPatternType);\n}\n"],"names":["StatusIconDefaults","valid","invalid","idle","InputMessage","proxyCustomElement","HTMLElement","handleIconEl","this","requestedIcon","setRequestedIcon","icon","status","connectedCallback","render","hidden","el","h","Host","key","renderIcon","iconName","class","flipRtl","iconFlipRtl","scale","CSS","SLOTS","TextArea","guid","handleInput","event","value","target","calciteTextAreaInput","emit","handleChange","calciteTextAreaChange","contentSlotChangeHandler","childNodes","forEach","nodeName","nodeValue","trim","renderCharacterLimit","maxLength","localizedCharacterLengthObj","getLocalizedCharacterLength","isCharacterLimitExceeded","currentLength","resizeObserver","createObserver","async","componentLoaded","textAreaHeight","textAreaWidth","elHeight","elWidth","footerHeight","footerWidth","getHeightAndWidthOfElements","footerEl","style","width","setHeightAndWidthToAuto","setTextAreaEl","textAreaEl","observe","func","wait","options","leading","trailing","TypeError","isObject","debounce","throttle","resize","height","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","handleGlobalAttributesChanged","forceUpdate","onMessagesChange","connectInteractive","connectLabel","connectForm","connectLocalized","connectMessages","componentWillLoad","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentDidRender","updateHostInteraction","setTextAreaHeight","disconnectedCallback","disconnectInteractive","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","disconnect","hasFooter","startSlotHasElements","endSlotHasElements","InteractiveContainer","disabled","toAriaBoolean","getLabelText","autofocus","readOnly","cols","columns","name","onChange","onInput","placeholder","ref","required","rows","wrap","onSlotchange","slotChangeHasAssignedElement","HiddenFormInputSlot","component","id","replacePlaceHoldersInMessages","validationMessage","Validation","validationIcon","message","setFocus","componentFocusable","focus","selectText","select","effectiveLocaleChange","updateMessages","effectiveLocale","onLabelClick","length","toString","numberingSystem","numberStringFormatter","numberFormatOptions","locale","signDisplay","useGrouping","groupSeparator","localize","syncHiddenFormInput","input","setCustomValidity","getBoundingClientRect","messages","replace","_ref","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","size","numberLeadingName","isNaN","Number","charAt","parts","split","firstNonDigitInPartPattern","map","part","partIndex","match","offset","toUpperCase","join","normalizeIconName","filled","substring","getCachedIconDataByKey","Icon","visible","waitUntilVisible","loadIconPathData","intersectionObserver","pathData","textLabel","dir","getElementDir","semantic","paths","concat","role","svg","fill","viewBox","xmlns","path","d","opacity","isBrowser","fetchIconProps","props","cachedIconKey","cachedIconData","fetch","getAssetPath","then","resp","json","catch","console","error","fetchIcon","callback","entries","entry","isIntersecting","rootMargin","freeGlobal$1","global","Object","freeSelf","self","root$1","Function","Symbol$1","Symbol","objectProto$1","prototype","hasOwnProperty","nativeObjectToString$1","symToStringTag$1","toStringTag","undefined","nativeObjectToString","nullTag","undefinedTag","symToStringTag","baseGetTag","isOwn","call","tag","unmasked","e","result","getRawTag","objectToString","isObjectLike","symbolTag","isSymbol","reWhitespace","reTrimStart","baseTrim","string","slice","index","test","trimmedEndIndex","type","NAN","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","parseInt","toNumber","other","valueOf","isBinary","now$1","Date","now","FUNC_ERROR_TEXT","nativeMax","Math","max","nativeMin","min","lastArgs","lastThis","maxWait","timerId","lastCallTime","lastInvokeTime","maxing","invokeFunc","time","args","thisArg","apply","shouldInvoke","timeSinceLastCall","timerExpired","trailingEdge","setTimeout","timeWaiting","remainingWait","debounced","isInvoking","arguments","leadingEdge","clearTimeout","cancel","flush","minMaxStepTypes","patternTypes","minMaxLengthTypes","updateConstraintValidation","inputComponent","propName","matchesType","attributeName","toLowerCase","setAttribute","removeAttribute","hiddenFormInput","isMinMaxStepType","includes","numericInputComponent","isMinMaxLengthType","textualInputComponent"],"sourceRoot":""}