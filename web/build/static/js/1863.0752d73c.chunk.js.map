{"version":3,"file":"static/js/1863.0752d73c.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/functional/Heading.tsx","../node_modules/@esri/calcite-components/dist/components/src/utils/date.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-day/date-picker-day.scss?tag=calcite-date-picker-day&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-day/date-picker-day.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month/date-picker-month.scss?tag=calcite-date-picker-month&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month/date-picker-month.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month-header/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month-header/date-picker-month-header.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker-month-header/date-picker-month-header.scss?tag=calcite-date-picker-month-header&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/date-picker.scss?tag=calcite-date-picker&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/date-picker/date-picker.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/input-date-picker.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-date-picker/input-date-picker.scss?tag=calcite-input-date-picker&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx"],"sourcesContent":["import { FunctionalComponent, h } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\n\nexport type HeadingLevel = 1 | 2 | 3 | 4 | 5 | 6;\n\ninterface HeadingProps extends JSXBase.HTMLAttributes {\n  level?: HeadingLevel;\n}\n\nexport function constrainHeadingLevel(level: number): HeadingLevel {\n  return Math.min(Math.max(Math.ceil(level), 1), 6) as HeadingLevel;\n}\n\nexport const Heading: FunctionalComponent<HeadingProps> = (props, children) => {\n  const HeadingTag = props.level ? `h${props.level}` : \"div\";\n\n  delete props.level;\n\n  return <HeadingTag {...props}>{children}</HeadingTag>;\n};\n","import { DateLocaleData } from \"../components/date-picker/utils\";\nimport { numberStringFormatter } from \"./locale\";\n\nexport interface HoverRange {\n  focused: \"end\" | \"start\";\n  start: Date;\n  end: Date;\n}\n\n/**\n * Check if date is within a min and max\n *\n * @param date\n * @param min\n * @param max\n */\nexport function inRange(date: Date, min?: Date | string, max?: Date | string): boolean {\n  if (!date) {\n    return;\n  }\n  const time = date.getTime();\n  const afterMin = !(min instanceof Date) || time >= min.getTime();\n  const beforeMax = !(max instanceof Date) || time <= max.getTime();\n  return afterMin && beforeMax;\n}\n\n/**\n * Ensures date is within range,\n * returns min or max if out of bounds\n *\n * @param date\n * @param min\n * @param max\n */\nexport function dateFromRange(date?: any, min?: Date | string, max?: Date | string): Date | null {\n  if (!(date instanceof Date)) {\n    return null;\n  }\n  const time = date.getTime();\n  const beforeMin = min instanceof Date && time < min.getTime();\n  const afterMax = max instanceof Date && time > max.getTime();\n  if (beforeMin) {\n    return min as Date;\n  }\n  if (afterMax) {\n    return max as Date;\n  }\n  return date;\n}\n\n/**\n * Parse an iso8601 string (YYYY-mm-dd) into a valid date.\n * TODO: handle time when time of day UI is added\n *\n * @param iso8601\n * @param isEndDate\n */\nexport function dateFromISO(iso8601: string | Date, isEndDate = false): Date | null {\n  if (iso8601 instanceof Date) {\n    return iso8601;\n  }\n  if (!iso8601 || typeof iso8601 !== \"string\") {\n    return null;\n  }\n  const d = iso8601.split(/[: T-]/).map(parseFloat);\n  const date = new Date(d[0], (d[1] || 1) - 1, d[2] || 1);\n  date.setFullYear(d[0]);\n  if (isNaN(date.getTime())) {\n    throw new Error(`Invalid ISO 8601 date: \"${iso8601}\"`);\n  }\n  if (isEndDate) {\n    return setEndOfDay(date);\n  }\n  return date;\n}\n\n/**\n * Parse a localized date string into a valid Date.\n * return false if date is invalid, or out of range\n *\n * @param value\n * @param localeData\n */\nexport function dateFromLocalizedString(value: string, localeData: DateLocaleData): Date {\n  if (!localeData) {\n    return null;\n  }\n  const { separator } = localeData;\n  const parts = parseDateString(value, localeData);\n\n  const { day, month } = parts;\n  const year = parseCalendarYear(parts.year, localeData);\n\n  const date = new Date(year, month, day);\n  date.setFullYear(year);\n\n  const validDay = day > 0;\n  const validMonth = month > -1;\n  const validDate = !isNaN(date.getTime());\n  const validLength = value.split(separator).filter((c) => c).length > 2;\n  const validYear = year.toString().length > 0;\n\n  if (validDay && validMonth && validDate && validLength && validYear) {\n    return date;\n  }\n  return null;\n}\n\nexport function parseCalendarYear(year: number, localeData: DateLocaleData): number {\n  return processCalendarYear(year, localeData, \"read\");\n}\n\nexport function formatCalendarYear(year: number, localeData: DateLocaleData): number {\n  return processCalendarYear(year, localeData, \"write\");\n}\n\nfunction processCalendarYear(year: number, localeData: DateLocaleData, mode: \"read\" | \"write\"): number {\n  if (localeData[\"default-calendar\"] !== \"buddhist\") {\n    return year;\n  }\n\n  const BUDDHIST_CALENDAR_YEAR_OFFSET = 543;\n  const yearOffset = BUDDHIST_CALENDAR_YEAR_OFFSET * (mode === \"read\" ? -1 : 1);\n\n  return year + yearOffset;\n}\n\n/**\n * Retrieve day, month, and year strings from a localized string\n *\n * @param string\n * @param localeData\n */\nexport function datePartsFromLocalizedString(\n  string: string,\n  localeData: DateLocaleData,\n): { day: string; month: string; year: string } {\n  const { separator, unitOrder } = localeData;\n  const order = getOrder(unitOrder);\n  const values = string.split(separator).map((part) => numberStringFormatter.delocalize(part));\n  const day = values[order.indexOf(\"d\")];\n  const month = values[order.indexOf(\"m\")];\n  const year = values[order.indexOf(\"y\")];\n  return { day, month, year };\n}\n\n/**\n * Return the date portion in local time of a Date object in ISO 8601 format (YYYY-MM-DD)\n *\n * @param date\n */\nexport function dateToISO(date?: Date): string {\n  if (date instanceof Date) {\n    const month = String(date.getMonth() + 1).padStart(2, \"0\");\n    const day = String(date.getDate()).padStart(2, \"0\");\n    const year = String(date.getFullYear()).padStart(4, \"0\");\n    return `${year}-${month}-${day}`;\n  }\n  return \"\";\n}\n\n/**\n * Retrieve day, month, and year strings from a ISO string (YYYY-mm-dd)\n *\n * @param string\n * @param isoDate\n */\nexport function datePartsFromISO(isoDate: string): { day: string; month: string; year: string } {\n  const dateParts = isoDate.split(\"-\");\n  return { day: dateParts[2], month: dateParts[1], year: dateParts[0] };\n}\n\n/**\n * Check if two dates are the same day, month, year\n *\n * @param d1\n * @param d2\n */\nexport function sameDate(d1: Date, d2: Date): boolean {\n  return (\n    d1 instanceof Date &&\n    d2 instanceof Date &&\n    d1.getDate() === d2.getDate() &&\n    d1.getMonth() === d2.getMonth() &&\n    d1.getFullYear() === d2.getFullYear()\n  );\n}\n\n/**\n * Get a date one month in the past\n *\n * @param date\n */\nexport function prevMonth(date: Date): Date {\n  const month = date.getMonth();\n  const nextDate = new Date(date);\n  nextDate.setMonth(month - 1);\n  // date doesn't exist in new month, use last day\n  if (month === nextDate.getMonth()) {\n    return new Date(date.getFullYear(), month, 0);\n  }\n  return nextDate;\n}\n\n/**\n * Get a date one month in the future\n *\n * @param date\n */\nexport function nextMonth(date: Date): Date {\n  const month = date.getMonth();\n  const nextDate = new Date(date);\n  nextDate.setMonth(month + 1);\n  // date doesn't exist in new month, use last day\n  if ((month + 2) % 7 === nextDate.getMonth() % 7) {\n    return new Date(date.getFullYear(), month + 2, 0);\n  }\n  return nextDate;\n}\n\n/**\n * Parse numeric units for day, month, and year from a localized string\n * month starts at 0 (can pass to date constructor)\n * can return values as number or string\n *\n * @param string\n * @param localeData\n */\nexport function parseDateString(\n  string: string,\n  localeData: DateLocaleData,\n): { day: number; month: number; year: number } {\n  const { day, month, year } = datePartsFromLocalizedString(string, localeData);\n  return {\n    day: parseInt(day),\n    month: parseInt(month) - 1, // this subtracts by 1 because the month in the Date constructor is zero-based https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date/getMonth\n    year: parseInt(year),\n  };\n}\n\ntype unitOrderSignifier = \"m\" | \"d\" | \"y\";\n\n/**\n * Based on the unitOrder string, find order of month, day, and year for locale\n *\n * @param unitOrder\n */\nexport function getOrder(unitOrder: string): unitOrderSignifier[] {\n  const signifiers: unitOrderSignifier[] = [\"d\", \"m\", \"y\"];\n  const order = unitOrder.toLowerCase();\n  return signifiers.sort((a, b) => order.indexOf(a) - order.indexOf(b));\n}\n\n/**\n * Get number of days between two dates\n *\n * @param date1\n * @param date2\n */\nexport function getDaysDiff(date1: Date, date2: Date): number {\n  const ts1 = date1.getTime();\n  const ts2 = date2.getTime();\n  return (ts1 - ts2) / (1000 * 3600 * 24);\n}\n\n/**\n * Set time of the day to the end.\n *\n * @param {Date} date Date.\n * @returns {Date} Date with time set to end of day .\n */\nexport function setEndOfDay(date: Date): Date {\n  date.setHours(23, 59, 59, 999);\n  return date;\n}\n",":host {\n  @apply cursor-pointer flex relative text-color-3;\n}\n\n@include disabled();\n\n@mixin range-part-base() {\n  &::before,\n  &::after {\n    @apply absolute pointer-events-none;\n    inset-block: 0;\n    content: \"\";\n    block-size: var(--calcite-internal-day-size);\n    inline-size: var(--calcite-internal-day-size);\n  }\n}\n\n@mixin range-part-edge-end() {\n  &::before {\n    inset-inline-end: 50%;\n  }\n  &::after {\n    inset-inline-start: 50%;\n    border-start-end-radius: var(--calcite-internal-day-size);\n    border-end-end-radius: var(--calcite-internal-day-size);\n    inline-size: calc(var(--calcite-internal-day-size) / 2);\n  }\n}\n\n@mixin range-part-edge-start() {\n  &::before {\n    inset-inline-end: 50%;\n    border-start-start-radius: var(--calcite-internal-day-size);\n    border-end-start-radius: var(--calcite-internal-day-size);\n    inline-size: calc(var(--calcite-internal-day-size) / 2);\n  }\n  &::after {\n    inset-inline-start: 50%;\n  }\n}\n\n@mixin range-part-middle() {\n  &::before {\n    inset-inline-end: 50%;\n    border-radius: 0;\n  }\n  &::after {\n    inset-inline-start: 50%;\n    border-radius: 0;\n  }\n}\n\n.day-v-wrapper {\n  @apply flex-auto;\n}\n\n.day-wrapper {\n  @apply flex\n    flex-col\n    items-center\n    relative;\n}\n\n:host([range]),\n:host([range-hover]) {\n  .day-wrapper {\n    @include range-part-base();\n  }\n}\n\n.day {\n  @apply text-n2h\n    text-color-3\n    flex\n    focus-base\n    items-center\n    justify-center\n    rounded-full\n    leading-none\n    transition-default\n    z-default;\n  background: none;\n  box-shadow: 0 0 0 2px transparent;\n  block-size: var(--calcite-internal-day-size);\n  inline-size: var(--calcite-internal-day-size);\n}\n\n.text {\n  @apply mt-px mb-0;\n  margin-inline-start: theme(\"spacing.0\");\n}\n\n:host([scale=\"s\"]) {\n  --calcite-internal-day-size: 27px;\n\n  .day-v-wrapper {\n    @apply py-0.5;\n  }\n  .day-wrapper {\n    @apply p-0;\n  }\n  .day {\n    @apply text-n2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  --calcite-internal-day-size: 33px;\n\n  .day-v-wrapper {\n    @apply py-1;\n  }\n  .day-wrapper {\n    @apply p-0;\n  }\n  .day {\n    @apply text-n1;\n  }\n}\n\n:host([scale=\"l\"]) {\n  --calcite-internal-day-size: 43px;\n\n  .day-v-wrapper {\n    @apply py-1;\n  }\n  .day-wrapper {\n    @apply px-1;\n  }\n  .day {\n    @apply text-0;\n  }\n}\n\n:host(:not([current-month])) .day {\n  @apply opacity-disabled;\n}\n\n:host(:hover:not([disabled]):not([selected])),\n:host([active]:not([range]):not([selected])) {\n  & .day {\n    @apply bg-foreground-2 text-color-1;\n  }\n}\n\n:host(:focus),\n:host([active]) {\n  @apply outline-none;\n}\n\n:host(:focus:not([disabled])) .day {\n  @apply focus-outset;\n}\n\n:host([selected]) .day {\n  @apply font-medium;\n  background-color: var(--calcite-color-brand);\n  color: var(--calcite-color-foreground-1);\n}\n\n:host(:focus:not([disabled])),\n:host([start-of-range]:not(:focus)),\n:host([end-of-range]:not(:focus)) {\n  .day {\n    box-shadow: 0 0 0 2px var(--calcite-color-foreground-1);\n  }\n}\n\n:host([range-hover]:not([selected])),\n:host([highlighted]:not([selected])) {\n  .day-wrapper {\n    @include range-part-middle();\n  }\n\n  .day {\n    @apply text-color-1;\n  }\n}\n\n:host([highlighted]),\n:host([selected]:not(.hover--outside-range)) {\n  .day-wrapper {\n    &::before,\n    &::after {\n      background-color: var(--calcite-color-foreground-current);\n    }\n  }\n}\n\n:host([range-hover]:not([selected])) {\n  .day-wrapper {\n    &::before,\n    &::after {\n      @apply bg-foreground-2;\n    }\n  }\n}\n\n:host(:hover[range-hover]:not([selected]).focused--end),\n:host([highlighted][end-of-range]),\n:host([highlighted][range-edge=\"end\"]),\n:host([range-hover][range-edge=\"end\"]),\n:host(:hover[range-hover].focused--end.hover--outside-range) {\n  .day-wrapper {\n    @include range-part-edge-end();\n  }\n}\n\n:host([highlighted][start-of-range]),\n:host([highlighted][range-edge=\"start\"]),\n:host([range-hover][range-edge=\"start\"]),\n:host(:hover[range-hover]:not([selected]).focused--start),\n:host([start-of-range].hover--inside-range),\n:host(:hover[range-hover].focused--start.hover--outside-range) {\n  .day-wrapper {\n    @include range-part-edge-start();\n  }\n}\n\n:host([range-hover][start-of-range][range-edge=\"end\"]),\n:host([range-hover][end-of-range][range-edge=\"start\"]),\n:host([start-of-range][range-edge=\"end\"].hover--inside-range),\n:host([end-of-range]) {\n  .day-wrapper {\n    &::after,\n    &::before {\n      content: unset;\n    }\n  }\n}\n\n:host(:hover[range-hover]:not([selected]).focused--start),\n:host(:hover[range-hover]:not([selected]).focused--end),\n:host(:hover[range-hover]:not([selected]).focused--start.hover--outside-range),\n:host(:hover[range-hover]:not([selected]).focused--end.hover--outside-range) {\n  .day {\n    box-shadow: 0 0 0 2px var(--calcite-color-foreground-1);\n  }\n}\n\n@media (forced-colors: active) {\n  .day {\n    @apply rounded-none;\n  }\n\n  :host([selected]) {\n    outline: 2px solid canvasText;\n  }\n\n  :host(:hover:not([selected])) {\n    .day {\n      border-radius: 50%;\n    }\n  }\n\n  :host([range][selected]),\n  :host([highlighted]),\n  :host([range-hover]:not([selected])) {\n    .day-wrapper {\n      &::before,\n      &::after {\n        background-color: highlight;\n      }\n    }\n  }\n\n  :host([range-hover]),\n  :host([range][selected][start-of-range]),\n  :host([range][selected][end-of-range]) {\n    .day-wrapper {\n      &::before,\n      &::after {\n        background-color: canvas;\n      }\n    }\n  }\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  VNode,\n  Method,\n} from \"@stencil/core\";\nimport { dateToISO } from \"../../utils/date\";\nimport { closestElementCrossShadowBoundary, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { numberStringFormatter } from \"../../utils/locale\";\nimport { Scale } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\n\n@Component({\n  tag: \"calcite-date-picker-day\",\n  styleUrl: \"date-picker-day.scss\",\n  shadow: true,\n})\nexport class DatePickerDay implements InteractiveComponent, LoadableComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Day of the month to be shown. */\n  @Prop() day!: number;\n\n  /**\n   * The DateTimeFormat used to provide screen reader labels.\n   *\n   * @internal\n   */\n  @Prop() dateTimeFormat: Intl.DateTimeFormat;\n\n  /** When `true`, interaction is prevented and the component is displayed with lower opacity. */\n  @Prop({ reflect: true }) disabled = false;\n\n  /** Date is in the current month. */\n  @Prop({ reflect: true }) currentMonth = false;\n\n  /**  When `true`, the component is selected. */\n  @Prop({ reflect: true }) selected = false;\n\n  /** Date is currently highlighted as part of the range, */\n  @Prop({ reflect: true }) highlighted = false;\n\n  /** When `true`, activates the component's range mode to allow a start and end date. */\n  @Prop({ reflect: true }) range = false;\n\n  /**\n   * When `true`, highlight styling for edge dates is applied.\n   *\n   * @internal\n   */\n  @Prop({ reflect: true }) rangeEdge: \"start\" | \"end\" | undefined;\n\n  /** Date is the start of date range. */\n  @Prop({ reflect: true }) startOfRange = false;\n\n  /** Date is the end of date range. */\n  @Prop({ reflect: true }) endOfRange = false;\n\n  /** Date is being hovered and within the set range. */\n  @Prop({ reflect: true }) rangeHover = false;\n\n  /** When `true`, the component is active. */\n  @Prop({ reflect: true }) active = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /** The component's value. */\n  @Prop() value: Date;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  onClick = (): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    this.calciteDaySelect.emit();\n  };\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      !this.disabled && this.calciteDaySelect.emit();\n      event.preventDefault();\n    }\n  };\n\n  @Listen(\"pointerover\")\n  pointerOverHandler(): void {\n    if (this.disabled) {\n      return;\n    }\n\n    this.calciteInternalDayHover.emit();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when user selects day.\n   */\n  @Event({ cancelable: false }) calciteDaySelect: EventEmitter<void>;\n\n  /**\n   * Fires when user hovers over a day.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDayHover: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.parentDatePickerEl = closestElementCrossShadowBoundary(\n      this.el,\n      \"calcite-date-picker\",\n    ) as HTMLCalciteDatePickerElement;\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  render(): VNode {\n    const dayId = dateToISO(this.value).replaceAll(\"-\", \"\");\n    if (this.parentDatePickerEl) {\n      const { numberingSystem, lang: locale } = this.parentDatePickerEl;\n\n      numberStringFormatter.numberFormatOptions = {\n        useGrouping: false,\n        ...(numberingSystem && { numberingSystem }),\n        ...(locale && { locale }),\n      };\n    }\n    const formattedDay = numberStringFormatter.localize(String(this.day));\n    const dayLabel = this.dateTimeFormat.format(this.value);\n\n    return (\n      <Host\n        aria-disabled={toAriaBoolean(this.disabled)}\n        aria-label={dayLabel}\n        aria-selected={toAriaBoolean(this.active)}\n        id={dayId}\n        onClick={this.onClick}\n        onKeyDown={this.keyDownHandler}\n        role=\"button\"\n        tabIndex={this.active && !this.disabled ? 0 : -1}\n      >\n        <InteractiveContainer disabled={this.disabled}>\n          <div aria-hidden=\"true\" class={{ \"day-v-wrapper\": true }}>\n            <div class=\"day-wrapper\">\n              <span class=\"day\">\n                <span class=\"text\">{formattedDay}</span>\n              </span>\n            </div>\n          </div>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  connectedCallback(): void {\n    connectInteractive(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerDayElement;\n\n  private parentDatePickerEl: HTMLCalciteDatePickerElement;\n}\n","@include base-component();\n\n.calendar {\n  @apply mb-1;\n}\n\n.week-headers {\n  @apply border-color-3\n    flex\n    border-0\n    border-t\n    border-solid\n    py-0\n    px-1;\n}\n\n.week-header {\n  @apply text-color-3\n    text-center\n    font-bold;\n  inline-size: calc(100% / 7);\n}\n\n.day {\n  @apply flex\n  min-w-0\n  justify-center;\n  inline-size: 100%;\n  calcite-date-picker-day {\n    @apply w-full;\n  }\n}\n\n:host([scale=\"s\"]) .week-header {\n  @apply text-n2h px-0 pt-2 pb-3;\n}\n\n:host([scale=\"m\"]) .week-header {\n  @apply text-n2h px-0 pt-3 pb-4;\n}\n\n:host([scale=\"l\"]) .week-header {\n  @apply text-n1h px-0 pt-4 pb-5;\n}\n\n.week-days {\n  display: grid;\n  grid-template-columns: repeat(7, 1fr);\n  grid-auto-rows: 1fr;\n  padding-block: 0;\n  padding-inline: 6px;\n  &:focus {\n    @apply outline-none;\n  }\n}\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Prop,\n  VNode,\n} from \"@stencil/core\";\nimport { dateFromRange, HoverRange, inRange, sameDate } from \"../../utils/date\";\nimport { DateLocaleData } from \"../date-picker/utils\";\nimport { Scale } from \"../interfaces\";\n\nconst DAYS_PER_WEEK = 7;\nconst DAYS_MAXIMUM_INDEX = 6;\n\ninterface Day {\n  active: boolean;\n  currentMonth?: boolean;\n  date: Date;\n  day: number;\n  dayInWeek?: number;\n  ref?: boolean;\n}\n\n@Component({\n  tag: \"calcite-date-picker-month\",\n  styleUrl: \"date-picker-month.scss\",\n  shadow: true,\n})\nexport class DatePickerMonth {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * The DateTimeFormat used to provide screen reader labels.\n   *\n   * @internal\n   */\n  @Prop() dateTimeFormat: Intl.DateTimeFormat;\n\n  /** Already selected date.*/\n  @Prop() selectedDate: Date;\n\n  /** The currently active Date.*/\n  @Prop() activeDate: Date = new Date();\n\n  /** Start date currently active. */\n  @Prop() startDate?: Date;\n\n  /** End date currently active.  */\n  @Prop() endDate?: Date;\n\n  /** Specifies the earliest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() min: Date;\n\n  /** Specifies the latest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() max: Date;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /**\n   * CLDR locale data for current locale.\n   *\n   * @internal\n   */\n  @Prop() localeData: DateLocaleData;\n\n  /** The range of dates currently being hovered. */\n  @Prop() hoverRange: HoverRange;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when user selects the date.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerSelect: EventEmitter<Date>;\n\n  /**\n   * Fires when user hovers the date.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerHover: EventEmitter<Date>;\n\n  /**\n   * Active date for the user keyboard access.\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerActiveDateChange: EventEmitter<Date>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerMouseOut: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.defaultPrevented) {\n      return;\n    }\n\n    const isRTL = this.el.dir === \"rtl\";\n\n    switch (event.key) {\n      case \"ArrowUp\":\n        event.preventDefault();\n        this.addDays(-7);\n        break;\n      case \"ArrowRight\":\n        event.preventDefault();\n        this.addDays(isRTL ? -1 : 1);\n        break;\n      case \"ArrowDown\":\n        event.preventDefault();\n        this.addDays(7);\n        break;\n      case \"ArrowLeft\":\n        event.preventDefault();\n        this.addDays(isRTL ? 1 : -1);\n        break;\n      case \"PageUp\":\n        event.preventDefault();\n        this.addMonths(-1);\n        break;\n      case \"PageDown\":\n        event.preventDefault();\n        this.addMonths(1);\n        break;\n      case \"Home\":\n        event.preventDefault();\n        this.activeDate.setDate(1);\n        this.addDays();\n        break;\n      case \"End\":\n        event.preventDefault();\n        this.activeDate.setDate(\n          new Date(this.activeDate.getFullYear(), this.activeDate.getMonth() + 1, 0).getDate(),\n        );\n        this.addDays();\n        break;\n      case \"Enter\":\n      case \" \":\n        event.preventDefault();\n        break;\n      case \"Tab\":\n        this.activeFocus = false;\n    }\n  };\n\n  /**\n   * Once user is not interacting via keyboard,\n   * disable auto focusing of active date\n   */\n  disableActiveFocus = (): void => {\n    this.activeFocus = false;\n  };\n\n  @Listen(\"pointerout\")\n  pointerOutHandler(): void {\n    this.calciteInternalDatePickerMouseOut.emit();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n  render(): VNode {\n    const month = this.activeDate.getMonth();\n    const year = this.activeDate.getFullYear();\n    const startOfWeek = this.localeData.weekStart % 7;\n    const { abbreviated, short, narrow } = this.localeData.days;\n    const weekDays =\n      this.scale === \"s\" ? narrow || short || abbreviated : short || abbreviated || narrow;\n    const adjustedWeekDays = [...weekDays.slice(startOfWeek, 7), ...weekDays.slice(0, startOfWeek)];\n    const curMonDays = this.getCurrentMonthDays(month, year);\n    const prevMonDays = this.getPreviousMonthDays(month, year, startOfWeek);\n    const nextMonDays = this.getNextMonthDays(month, year, startOfWeek);\n    let dayInWeek = 0;\n    const getDayInWeek = () => dayInWeek++ % 7;\n\n    const days: Day[] = [\n      ...prevMonDays.map((day) => {\n        return {\n          active: false,\n          day,\n          dayInWeek: getDayInWeek(),\n          date: new Date(year, month - 1, day),\n        };\n      }),\n      ...curMonDays.map((day) => {\n        const date = new Date(year, month, day);\n        const active = sameDate(date, this.activeDate);\n        return {\n          active,\n          currentMonth: true,\n          day,\n          dayInWeek: getDayInWeek(),\n          date,\n          ref: true,\n        };\n      }),\n      ...nextMonDays.map((day) => {\n        return {\n          active: false,\n          day,\n          dayInWeek: getDayInWeek(),\n          date: new Date(year, month + 1, day),\n        };\n      }),\n    ];\n\n    return (\n      <Host onFocusout={this.disableActiveFocus} onKeyDown={this.keyDownHandler}>\n        <div class=\"calendar\" role=\"grid\">\n          <div class=\"week-headers\" role=\"row\">\n            {adjustedWeekDays.map((weekday) => (\n              <span class=\"week-header\" role=\"columnheader\">\n                {weekday}\n              </span>\n            ))}\n          </div>\n\n          <div class=\"week-days\" role=\"row\">\n            {days.map((day, index) => this.renderDateDay(day, index))}\n          </div>\n        </div>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerMonthElement;\n\n  private activeFocus: boolean;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Add n months to the current month\n   *\n   * @param step\n   */\n  private addMonths(step: number) {\n    const nextDate = new Date(this.activeDate);\n    nextDate.setMonth(this.activeDate.getMonth() + step);\n    this.calciteInternalDatePickerActiveDateChange.emit(\n      dateFromRange(nextDate, this.min, this.max),\n    );\n    this.activeFocus = true;\n  }\n\n  /**\n   * Add n days to the current date\n   *\n   * @param step\n   */\n  private addDays(step = 0) {\n    const nextDate = new Date(this.activeDate);\n    nextDate.setDate(this.activeDate.getDate() + step);\n    this.calciteInternalDatePickerActiveDateChange.emit(\n      dateFromRange(nextDate, this.min, this.max),\n    );\n    this.activeFocus = true;\n  }\n\n  /**\n   * Get dates for last days of the previous month\n   *\n   * @param month\n   * @param year\n   * @param startOfWeek\n   */\n  private getPreviousMonthDays(month: number, year: number, startOfWeek: number): number[] {\n    const lastDate = new Date(year, month, 0);\n    const date = lastDate.getDate();\n    const startDay = lastDate.getDay();\n    const days = [];\n\n    if (startDay === (startOfWeek + DAYS_MAXIMUM_INDEX) % DAYS_PER_WEEK) {\n      return days;\n    }\n\n    if (startDay === startOfWeek) {\n      return [date];\n    }\n\n    for (let i = (DAYS_PER_WEEK + startDay - startOfWeek) % DAYS_PER_WEEK; i >= 0; i--) {\n      days.push(date - i);\n    }\n    return days;\n  }\n\n  /**\n   * Get dates for the current month\n   *\n   * @param month\n   * @param year\n   */\n  private getCurrentMonthDays(month: number, year: number): number[] {\n    const num = new Date(year, month + 1, 0).getDate();\n    const days = [];\n    for (let i = 0; i < num; i++) {\n      days.push(i + 1);\n    }\n    return days;\n  }\n\n  /**\n   * Get dates for first days of the next month\n   *\n   * @param month\n   * @param year\n   * @param startOfWeek\n   */\n  private getNextMonthDays(month: number, year: number, startOfWeek: number): number[] {\n    const endDay = new Date(year, month + 1, 0).getDay();\n    const days = [];\n    if (endDay === (startOfWeek + DAYS_MAXIMUM_INDEX) % DAYS_PER_WEEK) {\n      return days;\n    }\n    for (let i = 0; i < (DAYS_MAXIMUM_INDEX - (endDay - startOfWeek)) % DAYS_PER_WEEK; i++) {\n      days.push(i + 1);\n    }\n    return days;\n  }\n\n  /**\n   * Determine if the date is in between the start and end dates\n   *\n   * @param date\n   */\n  private betweenSelectedRange(date: Date): boolean {\n    return !!(\n      this.startDate &&\n      this.endDate &&\n      date > this.startDate &&\n      date < this.endDate &&\n      !this.isRangeHover(date)\n    );\n  }\n\n  /**\n   * Determine if the date should be in selected state\n   *\n   * @param date\n   */\n  private isSelected(date: Date): boolean {\n    return !!(\n      sameDate(date, this.selectedDate) ||\n      (this.startDate && sameDate(date, this.startDate)) ||\n      (this.endDate && sameDate(date, this.endDate))\n    );\n  }\n\n  /**\n   * Determine if the date is the start of the date range\n   *\n   * @param date\n   */\n  private isStartOfRange(date: Date): boolean {\n    return !!(\n      this.startDate &&\n      !sameDate(this.startDate, this.endDate) &&\n      sameDate(this.startDate, date) &&\n      !this.isEndOfRange(date)\n    );\n  }\n\n  private isEndOfRange(date: Date): boolean {\n    return !!(\n      (this.endDate && !sameDate(this.startDate, this.endDate) && sameDate(this.endDate, date)) ||\n      (!this.endDate &&\n        this.hoverRange &&\n        sameDate(this.startDate, this.hoverRange.end) &&\n        sameDate(date, this.hoverRange.end))\n    );\n  }\n\n  dayHover = (event: CustomEvent): void => {\n    const target = event.target as HTMLCalciteDatePickerDayElement;\n    if (target.disabled) {\n      this.calciteInternalDatePickerMouseOut.emit();\n    } else {\n      this.calciteInternalDatePickerHover.emit(target.value);\n    }\n    event.stopPropagation();\n  };\n\n  daySelect = (event: CustomEvent): void => {\n    const target = event.target as HTMLCalciteDatePickerDayElement;\n    this.calciteInternalDatePickerSelect.emit(target.value);\n  };\n\n  /**\n   * Render calcite-date-picker-day\n   *\n   * @param active.active\n   * @param active\n   * @param day\n   * @param dayInWeek\n   * @param date\n   * @param currentMonth\n   * @param ref\n   * @param active.currentMonth\n   * @param active.date\n   * @param active.day\n   * @param active.dayInWeek\n   * @param active.ref\n   * @param key\n   */\n  private renderDateDay({ active, currentMonth, date, day, dayInWeek, ref }: Day, key: number) {\n    const isFocusedOnStart = this.isFocusedOnStart();\n    const isHoverInRange =\n      this.isHoverInRange() ||\n      (!this.endDate && this.hoverRange && sameDate(this.hoverRange?.end, this.startDate));\n\n    return (\n      <div class=\"day\" key={key} role=\"gridcell\">\n        <calcite-date-picker-day\n          active={active}\n          class={{\n            \"hover--inside-range\": this.startDate && isHoverInRange,\n            \"hover--outside-range\": this.startDate && !isHoverInRange,\n            \"focused--start\": isFocusedOnStart,\n            \"focused--end\": !isFocusedOnStart,\n          }}\n          currentMonth={currentMonth}\n          dateTimeFormat={this.dateTimeFormat}\n          day={day}\n          disabled={!inRange(date, this.min, this.max)}\n          endOfRange={this.isEndOfRange(date)}\n          highlighted={this.betweenSelectedRange(date)}\n          onCalciteDaySelect={this.daySelect}\n          onCalciteInternalDayHover={this.dayHover}\n          range={!!this.startDate && !!this.endDate && !sameDate(this.startDate, this.endDate)}\n          rangeEdge={dayInWeek === 0 ? \"start\" : dayInWeek === 6 ? \"end\" : undefined}\n          rangeHover={this.isRangeHover(date)}\n          ref={(el: HTMLCalciteDatePickerDayElement) => {\n            // when moving via keyboard, focus must be updated on active date\n            if (ref && active && this.activeFocus) {\n              el?.setFocus();\n            }\n          }}\n          scale={this.scale}\n          selected={this.isSelected(date)}\n          startOfRange={this.isStartOfRange(date)}\n          value={date}\n        />\n      </div>\n    );\n  }\n\n  private isFocusedOnStart(): boolean {\n    return this.hoverRange?.focused === \"start\";\n  }\n\n  private isHoverInRange(): boolean {\n    if (!this.hoverRange) {\n      return false;\n    }\n    const { start, end } = this.hoverRange;\n    return !!(\n      (!this.isFocusedOnStart() && this.startDate && (!this.endDate || end < this.endDate)) ||\n      (this.isFocusedOnStart() && this.startDate && start > this.startDate)\n    );\n  }\n\n  private isRangeHover(date): boolean {\n    if (!this.hoverRange) {\n      return false;\n    }\n    const { start, end } = this.hoverRange;\n    const isStart = this.isFocusedOnStart();\n    const insideRange = this.isHoverInRange();\n    const cond1 =\n      insideRange &&\n      ((!isStart && date > this.startDate && (date < end || sameDate(date, end))) ||\n        (isStart && date < this.endDate && (date > start || sameDate(date, start))));\n    const cond2 =\n      !insideRange &&\n      ((!isStart && date >= this.endDate && (date < end || sameDate(date, end))) ||\n        (isStart &&\n          ((this.startDate && date < this.startDate) ||\n            (this.endDate && sameDate(date, this.startDate))) &&\n          ((start && date > start) || sameDate(date, start))));\n    return cond1 || cond2;\n  }\n}\n","export const CSS = {\n  header: \"header\",\n  month: \"month\",\n  chevron: \"chevron\",\n  suffix: \"suffix\",\n  yearSuffix: \"year--suffix\",\n  yearWrap: \"year-wrap\",\n  textReverse: \"text--reverse\",\n};\n\nexport const ICON = {\n  chevronLeft: \"chevron-left\",\n  chevronRight: \"chevron-right\",\n} as const;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  Fragment,\n  h,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  dateFromRange,\n  parseCalendarYear,\n  getOrder,\n  nextMonth,\n  prevMonth,\n  formatCalendarYear,\n} from \"../../utils/date\";\nimport { closestElementCrossShadowBoundary } from \"../../utils/dom\";\nimport { isActivationKey } from \"../../utils/key\";\nimport { numberStringFormatter } from \"../../utils/locale\";\nimport { DatePickerMessages } from \"../date-picker/assets/date-picker/t9n\";\nimport { DateLocaleData } from \"../date-picker/utils\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { Scale } from \"../interfaces\";\nimport { getIconScale } from \"../../utils/component\";\nimport { CSS, ICON } from \"./resources\";\n\n@Component({\n  tag: \"calcite-date-picker-month-header\",\n  styleUrl: \"date-picker-month-header.scss\",\n  shadow: true,\n})\nexport class DatePickerMonthHeader {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Already selected date. */\n  @Prop() selectedDate: Date;\n\n  /** The focused date is indicated and will become the selected date if the user proceeds. */\n  @Prop() activeDate: Date;\n\n  /**\n   * Specifies the number at which section headings should start.\n   */\n  @Prop() headingLevel: HeadingLevel;\n\n  /** Specifies the earliest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() min: Date;\n\n  /** Specifies the latest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop() max: Date;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale;\n\n  /** CLDR locale data for translated calendar info. */\n  @Prop() localeData: DateLocaleData;\n\n  /**\n   * This property specifies accessible strings for the component's previous month button ,next month button & year input elements.\n   * Made into a prop for testing purposes only.\n   *\n   * @internal\n   * @readonly\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: DatePickerMessages;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /**\n   *  Fires to active date\n   *\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalDatePickerSelect: EventEmitter<Date>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  componentWillLoad(): void {\n    this.parentDatePickerEl = closestElementCrossShadowBoundary(\n      this.el,\n      \"calcite-date-picker\",\n    ) as HTMLCalciteDatePickerElement;\n  }\n\n  connectedCallback(): void {\n    this.setNextPrevMonthDates();\n  }\n\n  render(): VNode {\n    return <div class={CSS.header}>{this.renderContent()}</div>;\n  }\n\n  renderContent(): VNode {\n    const { messages, localeData, activeDate } = this;\n    if (!activeDate || !localeData) {\n      return null;\n    }\n\n    if (this.parentDatePickerEl) {\n      const { numberingSystem, lang: locale } = this.parentDatePickerEl;\n\n      numberStringFormatter.numberFormatOptions = {\n        useGrouping: false,\n        ...(numberingSystem && { numberingSystem }),\n        ...(locale && { locale }),\n      };\n    }\n\n    const activeMonth = activeDate.getMonth();\n    const { months, unitOrder } = localeData;\n    const localizedMonth = (months.wide || months.narrow || months.abbreviated)[activeMonth];\n    const localizedYear = this.formatCalendarYear(activeDate.getFullYear());\n    const order = getOrder(unitOrder);\n    const reverse = order.indexOf(\"y\") < order.indexOf(\"m\");\n    const suffix = localeData.year?.suffix;\n    return (\n      <Fragment>\n        <a\n          aria-disabled={`${this.prevMonthDate.getMonth() === activeMonth}`}\n          aria-label={messages.prevMonth}\n          class={CSS.chevron}\n          href=\"#\"\n          onClick={this.prevMonthClick}\n          onKeyDown={this.prevMonthKeydown}\n          role=\"button\"\n          tabindex={this.prevMonthDate.getMonth() === activeMonth ? -1 : 0}\n        >\n          <calcite-icon flip-rtl icon={ICON.chevronLeft} scale={getIconScale(this.scale)} />\n        </a>\n        <div class={{ text: true, [CSS.textReverse]: reverse }}>\n          <Heading class={CSS.month} level={this.headingLevel}>\n            {localizedMonth}\n          </Heading>\n          <span class={CSS.yearWrap}>\n            <input\n              aria-label={messages.year}\n              class={{\n                year: true,\n                [CSS.yearSuffix]: !!suffix,\n              }}\n              inputmode=\"numeric\"\n              maxlength=\"4\"\n              minlength=\"1\"\n              onChange={this.onYearChange}\n              onInput={this.onYearInput}\n              onKeyDown={this.onYearKey}\n              pattern=\"\\d*\"\n              ref={(el) => (this.yearInput = el)}\n              type=\"text\"\n              value={localizedYear}\n            />\n            {suffix && <span class={CSS.suffix}>{suffix}</span>}\n          </span>\n        </div>\n        <a\n          aria-disabled={`${this.nextMonthDate.getMonth() === activeMonth}`}\n          aria-label={messages.nextMonth}\n          class={CSS.chevron}\n          href=\"#\"\n          onClick={this.nextMonthClick}\n          onKeyDown={this.nextMonthKeydown}\n          role=\"button\"\n          tabindex={this.nextMonthDate.getMonth() === activeMonth ? -1 : 0}\n        >\n          <calcite-icon flip-rtl icon={ICON.chevronRight} scale={getIconScale(this.scale)} />\n        </a>\n      </Fragment>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerMonthHeaderElement;\n\n  private yearInput: HTMLInputElement;\n\n  private parentDatePickerEl: HTMLCalciteDatePickerElement;\n\n  @State() nextMonthDate: Date;\n\n  @State() prevMonthDate: Date;\n\n  @Watch(\"min\")\n  @Watch(\"max\")\n  @Watch(\"activeDate\")\n  setNextPrevMonthDates(): void {\n    if (!this.activeDate) {\n      return;\n    }\n\n    this.nextMonthDate = dateFromRange(nextMonth(this.activeDate), this.min, this.max);\n    this.prevMonthDate = dateFromRange(prevMonth(this.activeDate), this.min, this.max);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Increment year on UP/DOWN keys\n   *\n   * @param event\n   */\n  private onYearKey = (event: KeyboardEvent): void => {\n    const localizedYear = this.parseCalendarYear((event.target as HTMLInputElement).value);\n    switch (event.key) {\n      case \"ArrowDown\":\n        event.preventDefault();\n        this.setYear({ localizedYear, offset: -1 });\n        break;\n      case \"ArrowUp\":\n        event.preventDefault();\n        this.setYear({ localizedYear, offset: 1 });\n        break;\n    }\n  };\n\n  private formatCalendarYear(year: number): string {\n    return numberStringFormatter.localize(`${formatCalendarYear(year, this.localeData)}`);\n  }\n\n  private parseCalendarYear(year: string): string {\n    return numberStringFormatter.localize(\n      `${parseCalendarYear(Number(numberStringFormatter.delocalize(year)), this.localeData)}`,\n    );\n  }\n\n  private onYearChange = (event: Event): void => {\n    this.setYear({\n      localizedYear: this.parseCalendarYear((event.target as HTMLInputElement).value),\n    });\n  };\n\n  private onYearInput = (event: Event): void => {\n    this.setYear({\n      localizedYear: this.parseCalendarYear((event.target as HTMLInputElement).value),\n      commit: false,\n    });\n  };\n\n  private prevMonthClick = (event: KeyboardEvent | MouseEvent): void => {\n    this.handleArrowClick(event, this.prevMonthDate);\n  };\n\n  private prevMonthKeydown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.prevMonthClick(event);\n    }\n  };\n\n  private nextMonthClick = (event: MouseEvent | KeyboardEvent): void => {\n    this.handleArrowClick(event, this.nextMonthDate);\n  };\n\n  private nextMonthKeydown = (event: KeyboardEvent): void => {\n    if (isActivationKey(event.key)) {\n      this.nextMonthClick(event);\n    }\n  };\n\n  /*\n   * Update active month on clicks of left/right arrows\n   */\n  private handleArrowClick = (event: MouseEvent | KeyboardEvent, date: Date): void => {\n    event.preventDefault();\n    this.calciteInternalDatePickerSelect.emit(date);\n  };\n\n  private getInRangeDate({\n    localizedYear,\n    offset = 0,\n  }: {\n    localizedYear: string;\n    offset?: number;\n  }): Date {\n    const { min, max, activeDate } = this;\n    const parsedYear = Number(numberStringFormatter.delocalize(localizedYear));\n    const length = parsedYear.toString().length;\n    const year = isNaN(parsedYear) ? false : parsedYear + offset;\n    const inRange =\n      year && (!min || min.getFullYear() <= year) && (!max || max.getFullYear() >= year);\n    // if you've supplied a year and it's in range\n    if (year && inRange && length === localizedYear.length) {\n      const nextDate = new Date(activeDate);\n      nextDate.setFullYear(year as number);\n      return dateFromRange(nextDate, min, max);\n    }\n  }\n\n  /**\n   * Parse localized year string from input,\n   * set to active if in range\n   *\n   * @param root0\n   * @param root0.localizedYear\n   * @param root0.commit\n   * @param root0.offset\n   */\n  private setYear({\n    localizedYear,\n    commit = true,\n    offset = 0,\n  }: {\n    localizedYear: string;\n    commit?: boolean;\n    offset?: number;\n  }): void {\n    const { yearInput, activeDate } = this;\n    const inRangeDate = this.getInRangeDate({ localizedYear, offset });\n\n    // if you've supplied a year and it's in range, update active date\n    if (inRangeDate) {\n      this.calciteInternalDatePickerSelect.emit(inRangeDate);\n    }\n\n    if (commit) {\n      yearInput.value = this.formatCalendarYear((inRangeDate || activeDate).getFullYear());\n    }\n  }\n}\n",":host {\n  @apply block;\n}\n\n.header {\n  @apply flex justify-between;\n  @apply py-0 px-1;\n}\n\n:host([scale=\"s\"]) {\n  .text {\n    @apply text-n1h my-2;\n  }\n  .chevron {\n    @apply h-9;\n  }\n}\n\n:host([scale=\"m\"]) {\n  .text {\n    @apply text-0h my-3;\n  }\n  .chevron {\n    @apply h-12;\n  }\n}\n\n:host([scale=\"l\"]) {\n  .text {\n    @apply text-1h my-4;\n  }\n  .chevron {\n    block-size: 3.5rem;\n  }\n}\n\n.chevron {\n  @apply text-color-3\n    bg-foreground-1\n    focus-base\n    -mx-1\n    box-content\n    flex\n    flex-grow-0\n    cursor-pointer\n    items-center\n    justify-center\n    border-none\n    px-1\n    outline-none\n    transition-default;\n  inline-size: calc(100% / 7);\n\n  &:focus {\n    @apply focus-inset;\n  }\n\n  &:hover,\n  &:focus {\n    @apply text-color-1 bg-foreground-2 fill-color-1;\n  }\n\n  &:active {\n    @apply bg-foreground-3;\n  }\n\n  &[aria-disabled=\"true\"] {\n    @apply pointer-events-none opacity-0;\n  }\n}\n\n.text {\n  @apply my-auto\n    w-full\n    flex\n    flex-auto\n    items-center\n    justify-center\n    text-center\n    leading-none;\n}\n\n.text--reverse {\n  @apply flex-row-reverse;\n}\n\n.month,\n.year,\n.suffix {\n  @apply text-color-1\n    bg-foreground-1\n    mx-1\n    my-auto\n    inline-block\n    font-medium\n    leading-tight;\n  font-size: inherit;\n}\n\n.year {\n  @apply font-inherit\n    focus-base\n    relative\n    w-10\n    border-none\n    bg-transparent\n    text-center;\n  &:hover {\n    @apply duration-100 ease-in-out;\n    transition-property: outline-color;\n    outline: 2px solid var(--calcite-color-border-2);\n    outline-offset: 2px;\n  }\n  &:focus {\n    @apply focus-outset;\n  }\n}\n\n.year--suffix {\n  @apply text-left;\n}\n\n.year-wrap {\n  @apply relative;\n}\n\n.suffix {\n  @apply top-0\n    whitespace-nowrap\n    text-start;\n  inset-inline-start: 0;\n}\n\n@include base-component();\n","export const HEADING_LEVEL = 2;\n\nexport const DATE_PICKER_FORMAT_OPTIONS: Intl.DateTimeFormatOptions = { dateStyle: \"full\" };\n","import { getAssetPath } from \"@stencil/core\";\nimport { dateFromISO } from \"../../utils/date\";\nimport { getSupportedLocale } from \"../../utils/locale\";\n\n/**\n * Translation resource data structure\n *\n * @private\n */\nexport interface DateLocaleData {\n  \"default-calendar\": \"gregorian\" | \"buddhist\";\n  separator: string;\n  unitOrder: string;\n  weekStart: number;\n  placeholder: string;\n  days: {\n    abbreviated?: string[];\n    narrow?: string[];\n    short?: string[];\n    wide?: string[];\n  };\n  numerals: string;\n  months: {\n    abbreviated: string[];\n    narrow: string[];\n    wide: string[];\n  };\n  year?: {\n    suffix: string;\n  };\n}\n\n/**\n * CLDR cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const translationCache: Record<string, DateLocaleData> = {};\n\n/**\n * CLDR request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<DateLocaleData>> = {};\n\n/**\n * Fetch calendar data for a given locale from list of supported languages\n *\n * @param lang\n * @public\n */\nexport async function getLocaleData(lang: string): Promise<DateLocaleData> {\n  const locale = getSupportedLocale(lang);\n  if (translationCache[locale]) {\n    return translationCache[locale];\n  }\n  if (!requestCache[locale]) {\n    requestCache[locale] = fetch(getAssetPath(`./assets/date-picker/nls/${locale}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`Translations for \"${locale}\" not found or invalid, falling back to english`);\n        return getLocaleData(\"en\");\n      });\n  }\n\n  const data = await requestCache[locale];\n  translationCache[locale] = data;\n\n  return data;\n}\n\n/**\n *  Maps value to valueAsDate\n *\n * @param value\n */\n\nexport function getValueAsDateRange(value: string[]): Date[] {\n  return value.map((v, index) => dateFromISO(v, index === 1));\n}\n",":host {\n  @extend %component-host;\n  @apply align-top\n    border\n    border-color-1\n    border-solid\n    inline-block\n    overflow-visible\n    rounded-none\n    w-auto;\n}\n\n:host([scale=\"s\"]) {\n  inline-size: 234px;\n  min-inline-size: 216px;\n  max-inline-size: 380px;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: 304px;\n  min-inline-size: 272px;\n  max-inline-size: 480px;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: 370px;\n  min-inline-size: 320px;\n  max-inline-size: 600px;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  dateFromISO,\n  dateFromRange,\n  dateToISO,\n  getDaysDiff,\n  HoverRange,\n  setEndOfDay,\n} from \"../../utils/date\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  getDateTimeFormat,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { HeadingLevel } from \"../functional/Heading\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { DatePickerMessages } from \"./assets/date-picker/t9n\";\nimport { DATE_PICKER_FORMAT_OPTIONS, HEADING_LEVEL } from \"./resources\";\nimport { DateLocaleData, getLocaleData, getValueAsDateRange } from \"./utils\";\n\n@Component({\n  assetsDirs: [\"assets\"],\n  tag: \"calcite-date-picker\",\n  styleUrl: \"date-picker.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n})\nexport class DatePicker implements LocalizedComponent, LoadableComponent, T9nComponent {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the component's active date. */\n  @Prop({ mutable: true }) activeDate: Date;\n\n  @Watch(\"activeDate\")\n  activeDateWatcher(newActiveDate: Date): void {\n    if (this.activeRange === \"end\") {\n      this.activeEndDate = newActiveDate;\n    }\n  }\n\n  /**\n   * When `range` is true, specifies the active `range`. Where `\"start\"` specifies the starting range date and `\"end\"` the ending range date.\n   */\n  @Prop({ reflect: true }) activeRange: \"start\" | \"end\";\n\n  /**\n   * Specifies the selected date as a string (`\"yyyy-mm-dd\"`), or an array of strings for `range` values (`[\"yyyy-mm-dd\", \"yyyy-mm-dd\"]`).\n   */\n  @Prop({ mutable: true }) value: string | string[];\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** Specifies the selected date as a full date object (`new Date(\"yyyy-mm-dd\")`), or an array containing full date objects (`[new Date(\"yyyy-mm-dd\"), new Date(\"yyyy-mm-dd\")]`). */\n  @Prop({ mutable: true }) valueAsDate: Date | Date[];\n\n  @Watch(\"valueAsDate\")\n  valueAsDateWatcher(newValueAsDate: Date | Date[]): void {\n    if (this.range && Array.isArray(newValueAsDate)) {\n      const { activeStartDate, activeEndDate } = this;\n      const newActiveStartDate = newValueAsDate[0];\n      const newActiveEndDate = newValueAsDate[1];\n      this.activeStartDate = activeStartDate !== newActiveStartDate && newActiveStartDate;\n      this.activeEndDate = activeEndDate !== newActiveEndDate && newActiveEndDate;\n    } else if (newValueAsDate && newValueAsDate !== this.activeDate) {\n      this.activeDate = newValueAsDate as Date;\n    }\n  }\n\n  /** Specifies the earliest allowed date as a full date object (`new Date(\"yyyy-mm-dd\")`). */\n  @Prop({ mutable: true }) minAsDate: Date;\n\n  /** Specifies the latest allowed date as a full date object (`new Date(\"yyyy-mm-dd\")`). */\n  @Prop({ mutable: true }) maxAsDate: Date;\n\n  /** Specifies the earliest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop({ reflect: true }) min: string;\n\n  @Watch(\"min\")\n  onMinChanged(min: string): void {\n    this.minAsDate = dateFromISO(min);\n  }\n\n  /** Specifies the latest allowed date (`\"yyyy-mm-dd\"`). */\n  @Prop({ reflect: true }) max: string;\n\n  @Watch(\"max\")\n  onMaxChanged(max: string): void {\n    this.maxAsDate = dateFromISO(max);\n  }\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization. This property cannot be dynamically changed.\n   *\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: \"s\" | \"m\" | \"l\" = \"m\";\n\n  /** When `true`, activates the component's range mode to allow a start and end date. */\n  @Prop({ reflect: true }) range = false;\n\n  /** When `true`, disables the default behavior on the third click of narrowing or extending the range and instead starts a new range. */\n  @Prop({ reflect: true }) proximitySelectionDisabled = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<DatePickerMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: DatePickerMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n  /**\n   * Fires when a user changes the component's date. For `range` events, use `calciteDatePickerRangeChange`.\n   */\n  @Event({ cancelable: false }) calciteDatePickerChange: EventEmitter<void>;\n\n  /**\n   * Fires when a user changes the component's date `range`. For components without `range` use `calciteDatePickerChange`.\n   */\n  @Event({ cancelable: false }) calciteDatePickerRangeChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component's first focusable element. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    this.el.focus();\n  }\n\n  /**\n   * Resets active date state.\n   * @internal\n   */\n  @Method()\n  async reset(): Promise<void> {\n    this.resetActiveDates();\n    this.mostRecentRangeValue = undefined;\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n\n    if (Array.isArray(this.value)) {\n      this.valueAsDate = getValueAsDateRange(this.value);\n    } else if (this.value) {\n      this.valueAsDate = dateFromISO(this.value);\n    }\n\n    if (this.min) {\n      this.minAsDate = dateFromISO(this.min);\n    }\n\n    if (this.max) {\n      this.maxAsDate = dateFromISO(this.max);\n    }\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await this.loadLocaleData();\n    this.onMinChanged(this.min);\n    this.onMaxChanged(this.max);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  render(): VNode {\n    const date = dateFromRange(\n      this.range && Array.isArray(this.valueAsDate) ? this.valueAsDate[0] : this.valueAsDate,\n      this.minAsDate,\n      this.maxAsDate,\n    );\n    let activeDate = this.getActiveDate(date, this.minAsDate, this.maxAsDate);\n    const endDate =\n      this.range && Array.isArray(this.valueAsDate)\n        ? dateFromRange(this.valueAsDate[1], this.minAsDate, this.maxAsDate)\n        : null;\n    const activeEndDate = this.getActiveEndDate(endDate, this.minAsDate, this.maxAsDate);\n    if (\n      (this.activeRange === \"end\" ||\n        (this.hoverRange?.focused === \"end\" && (!this.proximitySelectionDisabled || endDate))) &&\n      activeEndDate\n    ) {\n      activeDate = activeEndDate;\n    }\n    if (this.range && this.mostRecentRangeValue) {\n      activeDate = this.mostRecentRangeValue;\n    }\n\n    const minDate =\n      this.range && this.activeRange\n        ? this.activeRange === \"start\"\n          ? this.minAsDate\n          : date || this.minAsDate\n        : this.minAsDate;\n\n    const maxDate =\n      this.range && this.activeRange\n        ? this.activeRange === \"start\"\n          ? endDate || this.maxAsDate\n          : this.maxAsDate\n        : this.maxAsDate;\n    return (\n      <Host onBlur={this.resetActiveDates} onKeyDown={this.keyDownHandler}>\n        {this.renderCalendar(activeDate, maxDate, minDate, date, endDate)}\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteDatePickerElement;\n\n  /**\n   * Active end date.\n   */\n  @State() activeEndDate: Date;\n\n  /**\n   * Active start date.\n   */\n  @State() activeStartDate: Date;\n\n  /**\n   * The DateTimeFormat used to provide screen reader labels.\n   *\n   * @internal\n   */\n  @State() dateTimeFormat: Intl.DateTimeFormat;\n\n  @State() defaultMessages: DatePickerMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() endAsDate: Date;\n\n  @State() private hoverRange: HoverRange;\n\n  @State() private localeData: DateLocaleData;\n\n  @State() private mostRecentRangeValue?: Date;\n\n  @State() startAsDate: Date;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (event.key === \"Escape\") {\n      this.resetActiveDates();\n    }\n  };\n\n  @Watch(\"value\")\n  valueHandler(value: string | string[]): void {\n    if (Array.isArray(value)) {\n      this.valueAsDate = getValueAsDateRange(value);\n    } else if (value) {\n      this.valueAsDate = dateFromISO(value);\n    }\n  }\n\n  @Watch(\"effectiveLocale\")\n  private async loadLocaleData(): Promise<void> {\n    if (!isBrowser()) {\n      return;\n    }\n\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem: this.numberingSystem,\n      locale: this.effectiveLocale,\n      useGrouping: false,\n    };\n\n    this.localeData = await getLocaleData(this.effectiveLocale);\n    this.dateTimeFormat = getDateTimeFormat(this.effectiveLocale, DATE_PICKER_FORMAT_OPTIONS);\n  }\n\n  monthHeaderSelectChange = (event: CustomEvent<Date>): void => {\n    const date = new Date(event.detail);\n    if (!this.range) {\n      this.activeDate = date;\n    } else {\n      if (this.activeRange === \"end\") {\n        this.activeEndDate = date;\n      } else {\n        this.activeStartDate = date;\n      }\n      this.mostRecentRangeValue = date;\n    }\n  };\n\n  monthActiveDateChange = (event: CustomEvent<Date>): void => {\n    const date = new Date(event.detail);\n    if (!this.range) {\n      this.activeDate = date;\n    } else {\n      if (this.activeRange === \"end\") {\n        this.activeEndDate = date;\n      } else {\n        this.activeStartDate = date;\n      }\n      this.mostRecentRangeValue = date;\n    }\n  };\n\n  monthHoverChange = (event: CustomEvent<Date>): void => {\n    if (!this.range) {\n      this.hoverRange = undefined;\n      return;\n    }\n\n    const { valueAsDate } = this;\n    const start = Array.isArray(valueAsDate) && valueAsDate[0];\n    const end = Array.isArray(valueAsDate) && valueAsDate[1];\n\n    const date = new Date(event.detail);\n    this.hoverRange = {\n      focused: this.activeRange || \"start\",\n      start,\n      end,\n    };\n\n    if (this.proximitySelectionDisabled) {\n      if ((end && start) || (!end && date >= start)) {\n        this.hoverRange.focused = \"end\";\n        this.hoverRange.end = date;\n      } else if (!end && date < start) {\n        this.hoverRange = {\n          focused: \"start\",\n          start: date,\n          end: start,\n        };\n      } else {\n        this.hoverRange = undefined;\n      }\n    } else {\n      if (start && end) {\n        const startDiff = getDaysDiff(date, start);\n        const endDiff = getDaysDiff(date, end);\n        if (endDiff > 0) {\n          this.hoverRange.end = date;\n          this.hoverRange.focused = \"end\";\n        } else if (startDiff < 0) {\n          this.hoverRange.start = date;\n          this.hoverRange.focused = \"start\";\n        } else if (startDiff > endDiff) {\n          this.hoverRange.start = date;\n          this.hoverRange.focused = \"start\";\n        } else {\n          this.hoverRange.end = date;\n          this.hoverRange.focused = \"end\";\n        }\n      } else {\n        if (start) {\n          if (date < start) {\n            this.hoverRange = {\n              focused: \"start\",\n              start: date,\n              end: start,\n            };\n          } else {\n            this.hoverRange.end = date;\n            this.hoverRange.focused = \"end\";\n          }\n        }\n      }\n    }\n    event.stopPropagation();\n  };\n\n  monthMouseOutChange = (): void => {\n    if (this.hoverRange) {\n      this.hoverRange = undefined;\n    }\n  };\n\n  /**\n   * Render calcite-date-picker-month-header and calcite-date-picker-month\n   *\n   * @param activeDate\n   * @param maxDate\n   * @param minDate\n   * @param date\n   * @param endDate\n   */\n  private renderCalendar(\n    activeDate: Date,\n    maxDate: Date,\n    minDate: Date,\n    date: Date,\n    endDate: Date,\n  ) {\n    return (\n      this.localeData && [\n        <calcite-date-picker-month-header\n          activeDate={activeDate}\n          headingLevel={this.headingLevel || HEADING_LEVEL}\n          localeData={this.localeData}\n          max={maxDate}\n          messages={this.messages}\n          min={minDate}\n          onCalciteInternalDatePickerSelect={this.monthHeaderSelectChange}\n          scale={this.scale}\n          selectedDate={this.activeRange === \"end\" ? endDate : date || new Date()}\n        />,\n        <calcite-date-picker-month\n          activeDate={activeDate}\n          dateTimeFormat={this.dateTimeFormat}\n          endDate={this.range ? endDate : undefined}\n          hoverRange={this.hoverRange}\n          localeData={this.localeData}\n          max={maxDate}\n          min={minDate}\n          onCalciteInternalDatePickerActiveDateChange={this.monthActiveDateChange}\n          onCalciteInternalDatePickerHover={this.monthHoverChange}\n          onCalciteInternalDatePickerMouseOut={this.monthMouseOutChange}\n          onCalciteInternalDatePickerSelect={this.monthDateChange}\n          scale={this.scale}\n          selectedDate={this.activeRange === \"end\" ? endDate : date}\n          startDate={this.range ? date : undefined}\n        />,\n      ]\n    );\n  }\n\n  private resetActiveDates = (): void => {\n    const { valueAsDate } = this;\n\n    if (!Array.isArray(valueAsDate) && valueAsDate && valueAsDate !== this.activeDate) {\n      this.activeDate = new Date(valueAsDate);\n    }\n\n    if (Array.isArray(valueAsDate)) {\n      if (valueAsDate[0] && valueAsDate[0] !== this.activeStartDate) {\n        this.activeStartDate = new Date(valueAsDate[0]);\n      }\n      if (valueAsDate[1] && valueAsDate[1] !== this.activeEndDate) {\n        this.activeEndDate = new Date(valueAsDate[1]);\n      }\n    }\n  };\n\n  private getEndDate(): Date {\n    return (Array.isArray(this.valueAsDate) && this.valueAsDate[1]) || undefined;\n  }\n\n  private setEndDate(date: Date): void {\n    const startDate = this.getStartDate();\n    const newEndDate = date ? setEndOfDay(date) : date;\n    this.value = [dateToISO(startDate), dateToISO(date)];\n    this.valueAsDate = [startDate, date];\n    this.mostRecentRangeValue = newEndDate;\n    this.calciteDatePickerRangeChange.emit();\n    this.activeEndDate = date || null;\n  }\n\n  private getStartDate(): Date {\n    return Array.isArray(this.valueAsDate) && this.valueAsDate[0];\n  }\n\n  private setStartDate(date: Date): void {\n    const endDate = this.getEndDate();\n    this.value = [dateToISO(date), dateToISO(endDate)];\n    this.valueAsDate = [date, endDate];\n    this.mostRecentRangeValue = date;\n    this.calciteDatePickerRangeChange.emit();\n    this.activeStartDate = date || null;\n  }\n\n  /**\n   * Event handler for when the selected date changes\n   *\n   * @param event\n   */\n  private monthDateChange = (event: CustomEvent<Date>): void => {\n    const date = new Date(event.detail);\n    const isoDate = dateToISO(date);\n\n    if (!this.range && isoDate === dateToISO(this.valueAsDate as Date)) {\n      return;\n    }\n\n    if (!this.range) {\n      this.value = isoDate || \"\";\n      this.valueAsDate = date || null;\n      this.activeDate = date || null;\n      this.calciteDatePickerChange.emit();\n      return;\n    }\n\n    const start = this.getStartDate();\n    const end = this.getEndDate();\n\n    if (!start || (!end && date < start)) {\n      if (start) {\n        this.setEndDate(new Date(start));\n      }\n      if (this.activeRange == \"end\") {\n        this.setEndDate(date);\n      } else {\n        this.setStartDate(date);\n      }\n    } else if (!end) {\n      this.setEndDate(date);\n    } else {\n      if (this.proximitySelectionDisabled) {\n        this.setStartDate(date);\n        this.setEndDate(null);\n      } else {\n        if (this.activeRange) {\n          if (this.activeRange == \"end\") {\n            this.setEndDate(date);\n          } else {\n            this.setStartDate(date);\n          }\n        } else {\n          const startDiff = getDaysDiff(date, start);\n          const endDiff = getDaysDiff(date, end);\n          if (endDiff === 0 || startDiff < 0) {\n            this.setStartDate(date);\n          } else if (startDiff === 0 || endDiff < 0) {\n            this.setEndDate(date);\n          } else if (startDiff < endDiff) {\n            this.setStartDate(date);\n          } else {\n            this.setEndDate(date);\n          }\n        }\n      }\n    }\n    this.calciteDatePickerChange.emit();\n  };\n\n  /**\n   * Get an active date using the value, or current date as default\n   *\n   * @param value\n   * @param min\n   * @param max\n   */\n  private getActiveDate(value: Date | null, min: Date | null, max: Date | null): Date {\n    return dateFromRange(this.activeDate, min, max) || value || dateFromRange(new Date(), min, max);\n  }\n\n  private getActiveEndDate(value: Date | null, min: Date | null, max: Date | null): Date {\n    return (\n      dateFromRange(this.activeEndDate, min, max) || value || dateFromRange(new Date(), min, max)\n    );\n  }\n}\n","export const CSS = {\n  assistiveText: \"assistive-text\",\n  calendarWrapper: \"calendar-wrapper\",\n  calendarWrapperEnd: \"calendar-wrapper--end\",\n  horizontalArrowContainer: \"horizontal-arrow-container\",\n  inputBorderTopColorOne: \"border-top-color-one\",\n  inputContainer: \"input-container\",\n  inputNoBottomBorder: \"no-bottom-border\",\n  inputWrapper: \"input-wrapper\",\n  input: \"input\",\n  menu: \"menu-container\",\n  menuActive: \"menu-container--active\",\n  toggleIcon: \"toggle-icon\",\n  verticalArrowContainer: \"vertical-arrow-container\",\n  chevronIcon: \"chevron-icon\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Listen,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { FocusTrap } from \"focus-trap\";\nimport {\n  dateFromISO,\n  dateFromLocalizedString,\n  dateFromRange,\n  datePartsFromISO,\n  datePartsFromLocalizedString,\n  dateToISO,\n  inRange,\n} from \"../../utils/date\";\nimport { focusFirstTabbable, toAriaBoolean } from \"../../utils/dom\";\nimport {\n  connectFloatingUI,\n  defaultMenuPlacement,\n  disconnectFloatingUI,\n  filterValidFlipPlacements,\n  FloatingCSS,\n  FloatingUIComponent,\n  FlipPlacement,\n  MenuPlacement,\n  OverlayPositioning,\n  reposition,\n} from \"../../utils/floating-ui\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  MutableValidityState,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  getSupportedNumberingSystem,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { DatePickerMessages } from \"../date-picker/assets/date-picker/t9n\";\nimport { DateLocaleData, getLocaleData, getValueAsDateRange } from \"../date-picker/utils\";\nimport { HeadingLevel } from \"../functional/Heading\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  activateFocusTrap,\n  connectFocusTrap,\n  deactivateFocusTrap,\n  FocusTrapComponent,\n} from \"../../utils/focusTrapComponent\";\nimport { guid } from \"../../utils/guid\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Status } from \"../interfaces\";\nimport { Validation } from \"../functional/Validation\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { syncHiddenFormInput } from \"../input/common/input\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { normalizeToCurrentCentury, isTwoDigitYear } from \"./utils\";\nimport { InputDatePickerMessages } from \"./assets/input-date-picker/t9n\";\nimport { CSS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-input-date-picker\",\n  styleUrl: \"input-date-picker.scss\",\n  shadow: {\n    delegatesFocus: true,\n  },\n  assetsDirs: [\"assets\"],\n})\nexport class InputDatePicker\n  implements\n    FloatingUIComponent,\n    FocusTrapComponent,\n    FormComponent,\n    InteractiveComponent,\n    LabelableComponent,\n    LoadableComponent,\n    LocalizedComponent,\n    OpenCloseComponent,\n    T9nComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When `true`, prevents focus trapping.\n   */\n  @Prop({ reflect: true }) focusTrapDisabled = false;\n\n  @Watch(\"focusTrapDisabled\")\n  handleFocusTrapDisabled(focusTrapDisabled: boolean): void {\n    if (!this.open) {\n      return;\n    }\n\n    focusTrapDisabled ? deactivateFocusTrap(this) : activateFocusTrap(this);\n  }\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, the component's value can be read, but controls are not accessible and the value cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  @Watch(\"disabled\")\n  @Watch(\"readOnly\")\n  handleDisabledAndReadOnlyChange(value: boolean): void {\n    if (!value) {\n      this.open = false;\n    }\n  }\n\n  /** Selected date as a string in ISO format (`\"yyyy-mm-dd\"`). */\n  @Prop({ mutable: true }) value: string | string[] = \"\";\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string | string[]): void {\n    if (!this.userChangedValue) {\n      let newValueAsDate: Date | Date[];\n\n      if (Array.isArray(newValue)) {\n        newValueAsDate = getValueAsDateRange(newValue);\n      } else if (newValue) {\n        newValueAsDate = dateFromISO(newValue);\n      } else {\n        newValueAsDate = undefined;\n      }\n\n      if (!this.valueAsDateChangedExternally && newValueAsDate !== this.valueAsDate) {\n        this.valueAsDate = newValueAsDate;\n      }\n\n      this.localizeInputValues();\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"valueAsDate\")\n  valueAsDateWatcher(valueAsDate: Date): void {\n    this.datePickerActiveDate = valueAsDate;\n    const newValue =\n      this.range && Array.isArray(valueAsDate)\n        ? [dateToISO(valueAsDate[0]), dateToISO(valueAsDate[1])]\n        : dateToISO(valueAsDate);\n    if (this.value !== newValue) {\n      this.valueAsDateChangedExternally = true;\n      this.value = newValue;\n      this.valueAsDateChangedExternally = false;\n    }\n  }\n\n  /**\n   * Defines the available placements that can be used when a flip occurs.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  @Watch(\"flipPlacements\")\n  flipPlacementsHandler(): void {\n    this.setFilteredPlacements();\n    this.reposition(true);\n  }\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** The component's value as a full date object. */\n  @Prop({ mutable: true }) valueAsDate: Date | Date[];\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputDatePickerMessages & DatePickerMessages>;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputDatePickerMessages;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /** Specifies the earliest allowed date as a full date object. */\n  @Prop({ mutable: true }) minAsDate: Date;\n\n  /** Specifies the latest allowed date as a full date object. */\n  @Prop({ mutable: true }) maxAsDate: Date;\n\n  /** Specifies the earliest allowed date (\"yyyy-mm-dd\"). */\n  @Prop({ reflect: true }) min: string;\n\n  @Watch(\"min\")\n  onMinChanged(min: string): void {\n    this.minAsDate = dateFromISO(min);\n  }\n\n  /** Specifies the latest allowed date (\"yyyy-mm-dd\"). */\n  @Prop({ reflect: true }) max: string;\n\n  @Watch(\"max\")\n  onMaxChanged(max: string): void {\n    this.maxAsDate = dateFromISO(max);\n  }\n\n  /** When `true`, displays the `calcite-date-picker` component. */\n  @Prop({ mutable: true, reflect: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n\n    if (this.disabled || this.readOnly) {\n      this.open = false;\n      return;\n    }\n\n    this.reposition(true);\n  }\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization. This property cannot be dynamically changed.\n   *\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: \"s\" | \"m\" | \"l\" = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the placement of the `calcite-date-picker` relative to the component.\n   *\n   * @default \"bottom-start\"\n   */\n  @Prop({ reflect: true }) placement: MenuPlacement = defaultMenuPlacement;\n\n  /** When `true`, activates a range for the component. */\n  @Prop({ reflect: true }) range = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  @Watch(\"overlayPositioning\")\n  overlayPositioningHandler(): void {\n    this.reposition(true);\n  }\n\n  /**\n   * When `true`, disables the default behavior on the third click of narrowing or extending the range.\n   * Instead starts a new range.\n   */\n  @Prop() proximitySelectionDisabled = false;\n\n  /** Defines the layout of the component. */\n  @Prop({ reflect: true }) layout: \"horizontal\" | \"vertical\" = \"horizontal\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteDaySelect\")\n  calciteDaySelectHandler(): void {\n    if (this.shouldFocusRangeStart() || this.shouldFocusRangeEnd()) {\n      return;\n    }\n\n    this.open = false;\n  }\n\n  private calciteInternalInputInputHandler = (event: CustomEvent<any>): void => {\n    const target = event.target as HTMLCalciteInputElement;\n    const value = target.value;\n    const parsedValue = this.parseNumerals(value);\n    const formattedValue = this.formatNumerals(parsedValue);\n\n    target.value = formattedValue;\n\n    const { year } = datePartsFromLocalizedString(value, this.localeData);\n\n    if (year && year.length < 4) {\n      return;\n    }\n\n    const date = dateFromLocalizedString(value, this.localeData) as Date;\n\n    if (inRange(date, this.min, this.max)) {\n      this.datePickerActiveDate = date;\n    }\n  };\n\n  private calciteInternalInputBlurHandler = (): void => {\n    this.commitValue();\n  };\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Fires when the component's `value` changes.\n   */\n  @Event({ cancelable: false }) calciteInputDatePickerChange: EventEmitter<void>;\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteInputDatePickerBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteInputDatePickerClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteInputDatePickerBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteInputDatePickerOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  /**\n   * Updates the position of the component.\n   *\n   * @param delayed If true, the repositioning is delayed.\n   * @returns void\n   */\n  @Method()\n  async reposition(delayed = false): Promise<void> {\n    const { floatingEl, referenceEl, placement, overlayPositioning, filteredFlipPlacements } = this;\n\n    return reposition(\n      this,\n      {\n        floatingEl,\n        referenceEl,\n        overlayPositioning,\n        placement,\n        flipPlacements: filteredFlipPlacements,\n        type: \"menu\",\n      },\n      delayed,\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n\n    const { open } = this;\n    open && this.openHandler();\n\n    if (this.min) {\n      this.minAsDate = dateFromISO(this.min);\n    }\n\n    if (this.max) {\n      this.maxAsDate = dateFromISO(this.max);\n    }\n\n    if (Array.isArray(this.value)) {\n      this.valueAsDate = getValueAsDateRange(this.value);\n    } else if (this.value) {\n      try {\n        const date = dateFromISO(this.value);\n        const dateInRange = dateFromRange(date, this.minAsDate, this.maxAsDate);\n        this.valueAsDate = dateInRange;\n      } catch (error) {\n        this.warnAboutInvalidValue(this.value);\n        this.value = \"\";\n      }\n    } else if (this.valueAsDate) {\n      if (this.range) {\n        this.setRangeValue(this.valueAsDate as Date[]);\n      } else if (!Array.isArray(this.valueAsDate)) {\n        this.value = dateToISO(this.valueAsDate);\n      }\n    }\n\n    connectLabel(this);\n    connectForm(this);\n    connectMessages(this);\n\n    this.setFilteredPlacements();\n\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem: this.numberingSystem,\n      locale: this.effectiveLocale,\n      useGrouping: false,\n    };\n\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await Promise.all([this.loadLocaleData(), setUpMessages(this)]);\n    this.onMinChanged(this.min);\n    this.onMaxChanged(this.max);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n    this.localizeInputValues();\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  }\n\n  disconnectedCallback(): void {\n    deactivateFocusTrap(this);\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectFloatingUI(this, this.referenceEl, this.floatingEl);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  render(): VNode {\n    const { disabled, effectiveLocale, messages, numberingSystem, readOnly } = this;\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem,\n      locale: effectiveLocale,\n      useGrouping: false,\n    };\n\n    return (\n      <Host onBlur={this.blurHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          {this.localeData && (\n            <div class={CSS.inputContainer}>\n              <div\n                class={CSS.inputWrapper}\n                data-position=\"start\"\n                onClick={this.onInputWrapperClick}\n                onPointerDown={this.onInputWrapperPointerDown}\n                ref={this.setStartWrapper}\n              >\n                <calcite-input-text\n                  aria-autocomplete=\"none\"\n                  aria-controls={this.dialogId}\n                  aria-describedby={this.placeholderTextId}\n                  aria-expanded={toAriaBoolean(this.open)}\n                  aria-haspopup=\"dialog\"\n                  class={{\n                    [CSS.input]: true,\n                    [CSS.inputNoBottomBorder]: this.layout === \"vertical\" && this.range,\n                  }}\n                  disabled={disabled}\n                  icon=\"calendar\"\n                  onCalciteInputTextInput={this.calciteInternalInputInputHandler}\n                  onCalciteInternalInputTextBlur={this.calciteInternalInputBlurHandler}\n                  onCalciteInternalInputTextFocus={this.startInputFocus}\n                  placeholder={this.localeData?.placeholder}\n                  readOnly={readOnly}\n                  ref={this.setStartInput}\n                  role=\"combobox\"\n                  scale={this.scale}\n                  status={this.status}\n                />\n                {!this.readOnly &&\n                  this.renderToggleIcon(this.open && this.focusedInput === \"start\")}\n                <span aria-hidden=\"true\" class={CSS.assistiveText} id={this.placeholderTextId}>\n                  Date Format: {this.localeData?.placeholder}\n                </span>\n              </div>\n              <div\n                aria-hidden={toAriaBoolean(!this.open)}\n                aria-label={messages.chooseDate}\n                aria-live=\"polite\"\n                aria-modal=\"true\"\n                class={{\n                  [CSS.menu]: true,\n                  [CSS.menuActive]: this.open,\n                }}\n                id={this.dialogId}\n                ref={this.setFloatingEl}\n                role=\"dialog\"\n              >\n                <div\n                  class={{\n                    [CSS.calendarWrapper]: true,\n                    [CSS.calendarWrapperEnd]: this.focusedInput === \"end\",\n                    [FloatingCSS.animation]: true,\n                    [FloatingCSS.animationActive]: this.open,\n                  }}\n                  ref={this.setTransitionEl}\n                >\n                  <calcite-date-picker\n                    activeDate={this.datePickerActiveDate}\n                    activeRange={this.focusedInput}\n                    headingLevel={this.headingLevel}\n                    max={this.max}\n                    maxAsDate={this.maxAsDate}\n                    messageOverrides={this.messageOverrides}\n                    min={this.min}\n                    minAsDate={this.minAsDate}\n                    numberingSystem={numberingSystem}\n                    onCalciteDatePickerChange={this.handleDateChange}\n                    onCalciteDatePickerRangeChange={this.handleDateRangeChange}\n                    proximitySelectionDisabled={this.proximitySelectionDisabled}\n                    range={this.range}\n                    ref={this.setDatePickerRef}\n                    scale={this.scale}\n                    tabIndex={this.open ? undefined : -1}\n                    valueAsDate={this.valueAsDate}\n                  />\n                </div>\n              </div>\n\n              {this.range && this.layout === \"horizontal\" && (\n                <div class={CSS.horizontalArrowContainer}>\n                  <calcite-icon\n                    flipRtl={true}\n                    icon=\"arrow-right\"\n                    scale={getIconScale(this.scale)}\n                  />\n                </div>\n              )}\n              {this.range && this.layout === \"vertical\" && this.scale !== \"s\" && (\n                <div class={CSS.verticalArrowContainer}>\n                  <calcite-icon icon=\"arrow-down\" scale={getIconScale(this.scale)} />\n                </div>\n              )}\n              {this.range && (\n                <div\n                  class={CSS.inputWrapper}\n                  data-position=\"end\"\n                  onClick={this.onInputWrapperClick}\n                  onPointerDown={this.onInputWrapperPointerDown}\n                  ref={this.setEndWrapper}\n                >\n                  <calcite-input-text\n                    aria-autocomplete=\"none\"\n                    aria-controls={this.dialogId}\n                    aria-expanded={toAriaBoolean(this.open)}\n                    aria-haspopup=\"dialog\"\n                    class={{\n                      [CSS.input]: true,\n                      [CSS.inputBorderTopColorOne]: this.layout === \"vertical\" && this.range,\n                    }}\n                    disabled={disabled}\n                    icon=\"calendar\"\n                    onCalciteInputTextInput={this.calciteInternalInputInputHandler}\n                    onCalciteInternalInputTextBlur={this.calciteInternalInputBlurHandler}\n                    onCalciteInternalInputTextFocus={this.endInputFocus}\n                    placeholder={this.localeData?.placeholder}\n                    readOnly={readOnly}\n                    ref={this.setEndInput}\n                    role=\"combobox\"\n                    scale={this.scale}\n                    status={this.status}\n                  />\n                  {!this.readOnly &&\n                    this.renderToggleIcon(this.open && this.focusedInput === \"end\")}\n                </div>\n              )}\n            </div>\n          )}\n          <HiddenFormInputSlot component={this} />\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n\n  renderToggleIcon(open: boolean): VNode {\n    return (\n      // we set tab index to -1 to prevent delegatesFocus from stealing focus before we can set it\n      <span class={CSS.toggleIcon} tabIndex={-1}>\n        <calcite-icon\n          class={CSS.chevronIcon}\n          icon={open ? \"chevron-up\" : \"chevron-down\"}\n          scale={getIconScale(this.scale)}\n        />\n      </span>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputDatePickerElement;\n\n  private currentOpenInput: \"start\" | \"end\";\n\n  private datePickerEl: HTMLCalciteDatePickerElement;\n\n  private dialogId = `date-picker-dialog--${guid()}`;\n\n  filteredFlipPlacements: FlipPlacement[];\n\n  private focusOnOpen = false;\n\n  focusTrap: FocusTrap;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: InputDatePicker[\"value\"];\n\n  @State() datePickerActiveDate: Date;\n\n  @State() defaultMessages: InputDatePickerMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n    this.loadLocaleData();\n  }\n\n  @State() focusedInput: \"start\" | \"end\" = \"start\";\n\n  @State() private localeData: DateLocaleData;\n\n  private startInput: HTMLCalciteInputElement;\n\n  private endInput: HTMLCalciteInputElement;\n\n  private floatingEl: HTMLDivElement;\n\n  private referenceEl: HTMLDivElement;\n\n  private startWrapper: HTMLDivElement;\n\n  private endWrapper: HTMLDivElement;\n\n  private userChangedValue = false;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLDivElement;\n\n  @Watch(\"layout\")\n  @Watch(\"focusedInput\")\n  setReferenceEl(): void {\n    const { focusedInput, layout, endWrapper, startWrapper } = this;\n\n    this.referenceEl =\n      focusedInput === \"end\" || layout === \"vertical\"\n        ? endWrapper || startWrapper\n        : startWrapper || endWrapper;\n\n    requestAnimationFrame(() => connectFloatingUI(this, this.referenceEl, this.floatingEl));\n  }\n\n  private valueAsDateChangedExternally = false;\n\n  private placeholderTextId = `calcite-input-date-picker-placeholder-${guid()}`;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private onInputWrapperPointerDown = (): void => {\n    this.currentOpenInput = this.focusedInput;\n  };\n\n  private onInputWrapperClick = (event: MouseEvent) => {\n    const { range, endInput, startInput, currentOpenInput } = this;\n    const currentTarget = event.currentTarget as HTMLDivElement;\n    const position = currentTarget.getAttribute(\"data-position\") as \"start\" | \"end\";\n    const path = event.composedPath();\n    const wasToggleClicked = path.find((el: HTMLElement) => el.classList?.contains(CSS.toggleIcon));\n\n    if (wasToggleClicked) {\n      const targetInput = position === \"start\" ? startInput : endInput;\n      targetInput.setFocus();\n    }\n\n    if (!range || !this.open || currentOpenInput === position) {\n      this.open = !this.open;\n    }\n  };\n\n  setFilteredPlacements = (): void => {\n    const { el, flipPlacements } = this;\n\n    this.filteredFlipPlacements = flipPlacements\n      ? filterValidFlipPlacements(flipPlacements, el)\n      : null;\n  };\n\n  private setTransitionEl = (el: HTMLDivElement): void => {\n    this.transitionEl = el;\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  onBeforeOpen(): void {\n    this.calciteInputDatePickerBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    activateFocusTrap(this, {\n      onActivate: () => {\n        if (this.focusOnOpen) {\n          this.datePickerEl.setFocus();\n          this.focusOnOpen = false;\n        }\n      },\n    });\n    this.calciteInputDatePickerOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteInputDatePickerBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteInputDatePickerClose.emit();\n    deactivateFocusTrap(this);\n    this.restoreInputFocus();\n    this.focusOnOpen = false;\n    this.datePickerEl.reset();\n  }\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(\"date\", this, input);\n  }\n\n  setStartInput = (el: HTMLCalciteInputElement): void => {\n    this.startInput = el;\n  };\n\n  setEndInput = (el: HTMLCalciteInputElement): void => {\n    this.endInput = el;\n  };\n\n  private blurHandler = (): void => {\n    this.open = false;\n  };\n\n  private commitValue(): void {\n    const { focusedInput, value } = this;\n    const focusedInputName = `${focusedInput}Input`;\n    const focusedInputValue = this[focusedInputName].value;\n    const date = dateFromLocalizedString(focusedInputValue, this.localeData) as Date;\n    const dateAsISO = dateToISO(date);\n    const valueIsArray = Array.isArray(value);\n    if (this.range) {\n      const focusedInputValueIndex = focusedInput === \"start\" ? 0 : 1;\n      if (valueIsArray) {\n        if (dateAsISO === value[focusedInputValueIndex]) {\n          return;\n        }\n        if (date) {\n          this.setRangeValue([\n            focusedInput === \"start\" ? date : dateFromISO(value[0]),\n            focusedInput === \"end\" ? date : dateFromISO(value[1]),\n          ]);\n          this.localizeInputValues();\n        } else {\n          this.setRangeValue([\n            focusedInput === \"end\" && dateFromISO(value[0]),\n            focusedInput === \"start\" && dateFromISO(value[1]),\n          ]);\n        }\n      } else {\n        if (date) {\n          this.setRangeValue([\n            focusedInput === \"start\" ? date : dateFromISO(value[0]),\n            focusedInput === \"end\" ? date : dateFromISO(value[1]),\n          ]);\n          this.localizeInputValues();\n        }\n      }\n    } else {\n      if (dateAsISO === value) {\n        return;\n      }\n      this.setValue(date);\n      this.localizeInputValues();\n    }\n  }\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    const { defaultPrevented, key } = event;\n\n    if (defaultPrevented) {\n      return;\n    }\n\n    if (key === \"Enter\") {\n      event.preventDefault();\n      this.commitValue();\n\n      if (this.shouldFocusRangeEnd()) {\n        this.endInput?.setFocus();\n      } else if (this.shouldFocusRangeStart()) {\n        this.startInput?.setFocus();\n      }\n\n      if (submitForm(this)) {\n        this.restoreInputFocus();\n      }\n    } else if (key === \"ArrowDown\") {\n      this.open = true;\n      this.focusOnOpen = true;\n      event.preventDefault();\n    } else if (key === \"Escape\") {\n      this.open = false;\n      event.preventDefault();\n      this.restoreInputFocus();\n    }\n  };\n\n  startInputFocus = (): void => {\n    this.focusedInput = \"start\";\n  };\n\n  endInputFocus = (): void => {\n    this.focusedInput = \"end\";\n  };\n\n  setFloatingEl = (el: HTMLDivElement): void => {\n    this.floatingEl = el;\n    connectFloatingUI(this, this.referenceEl, this.floatingEl);\n  };\n\n  setStartWrapper = (el: HTMLDivElement): void => {\n    this.startWrapper = el;\n    this.setReferenceEl();\n  };\n\n  setEndWrapper = (el: HTMLDivElement): void => {\n    this.endWrapper = el;\n    this.setReferenceEl();\n  };\n\n  setDatePickerRef = (el: HTMLCalciteDatePickerElement): void => {\n    this.datePickerEl = el;\n    connectFocusTrap(this, {\n      focusTrapEl: el,\n      focusTrapOptions: {\n        initialFocus: false,\n        setReturnFocus: false,\n      },\n    });\n  };\n\n  private async loadLocaleData(): Promise<void> {\n    if (!isBrowser()) {\n      return;\n    }\n    numberStringFormatter.numberFormatOptions = {\n      numberingSystem: this.numberingSystem,\n      locale: this.effectiveLocale,\n      useGrouping: false,\n    };\n    this.localeData = await getLocaleData(this.effectiveLocale);\n    this.localizeInputValues();\n  }\n\n  /**\n   * Event handler for when the selected date changes\n   *\n   * @param event CalciteDatePicker custom change event\n   */\n  handleDateChange = (event: CustomEvent<void>): void => {\n    if (this.range) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    this.setValue((event.target as HTMLCalciteDatePickerElement).valueAsDate as Date);\n    this.localizeInputValues();\n    this.restoreInputFocus();\n  };\n\n  private shouldFocusRangeStart(): boolean {\n    const startValue = this.value[0];\n    const endValue = this.value[1];\n    return !!(endValue && !startValue && this.focusedInput === \"end\" && this.startInput);\n  }\n\n  private shouldFocusRangeEnd(): boolean {\n    const startValue = this.value[0];\n    const endValue = this.value[1];\n    return !!(startValue && !endValue && this.focusedInput === \"start\" && this.endInput);\n  }\n\n  private handleDateRangeChange = (event: CustomEvent<void>): void => {\n    if (!this.range) {\n      return;\n    }\n\n    event.stopPropagation();\n\n    const value = (event.target as HTMLCalciteDatePickerElement).valueAsDate as Date[];\n\n    this.setRangeValue(value);\n    this.localizeInputValues();\n    this.restoreInputFocus();\n  };\n\n  private restoreInputFocus(): void {\n    if (!this.range) {\n      this.startInput.setFocus();\n      return;\n    }\n\n    const focusedInput = this.focusedInput === \"start\" ? this.startInput : this.endInput;\n    focusedInput.setFocus();\n  }\n\n  private localizeInputValues(): void {\n    const date = dateFromRange(\n      (this.range\n        ? (Array.isArray(this.valueAsDate) && this.valueAsDate[0]) || undefined\n        : this.valueAsDate) as Date,\n      this.minAsDate,\n      this.maxAsDate,\n    );\n    const endDate = this.range\n      ? dateFromRange(\n          (Array.isArray(this.valueAsDate) && this.valueAsDate[1]) || undefined,\n          this.minAsDate,\n          this.maxAsDate,\n        )\n      : null;\n\n    const formattingOptions = {\n      // we explicitly set numberingSystem to prevent the browser-inferred value\n      // see https://github.com/Esri/calcite-design-system/issues/3079#issuecomment-1168964195 for more info\n      numberingSystem: getSupportedNumberingSystem(this.numberingSystem),\n    };\n\n    const localizedDate = date && date.toLocaleDateString(this.effectiveLocale, formattingOptions);\n    const localizedEndDate =\n      endDate && endDate.toLocaleDateString(this.effectiveLocale, formattingOptions);\n\n    this.setInputValue(localizedDate ?? \"\", \"start\");\n    this.setInputValue((this.range && localizedEndDate) ?? \"\", \"end\");\n  }\n\n  private setInputValue = (newValue: string, input: \"start\" | \"end\" = \"start\"): void => {\n    const inputEl = this[`${input}Input`];\n    if (!inputEl) {\n      return;\n    }\n    inputEl.value = newValue;\n  };\n\n  private setRangeValue = (valueAsDate: Date[]): void => {\n    if (!this.range) {\n      return;\n    }\n\n    const { value: oldValue } = this;\n    const oldValueIsArray = Array.isArray(oldValue);\n    const valueIsArray = Array.isArray(valueAsDate);\n\n    const newStartDate = valueIsArray ? valueAsDate[0] : null;\n    let newStartDateISO = valueIsArray ? dateToISO(newStartDate) : \"\";\n    if (newStartDateISO) {\n      newStartDateISO = this.getNormalizedDate(newStartDateISO);\n    }\n\n    const newEndDate = valueIsArray ? valueAsDate[1] : null;\n    let newEndDateISO = valueIsArray ? dateToISO(newEndDate) : \"\";\n    if (newEndDateISO) {\n      newEndDateISO = this.getNormalizedDate(newEndDateISO);\n    }\n\n    const newValue = newStartDateISO || newEndDateISO ? [newStartDateISO, newEndDateISO] : \"\";\n\n    if (newValue === oldValue) {\n      return;\n    }\n\n    this.userChangedValue = true;\n    this.value = newValue;\n    this.valueAsDate = newValue ? getValueAsDateRange(newValue) : undefined;\n\n    const changeEvent = this.calciteInputDatePickerChange.emit();\n\n    if (changeEvent && changeEvent.defaultPrevented) {\n      this.value = oldValue;\n      if (oldValueIsArray) {\n        this.setInputValue(oldValue[0], \"start\");\n        this.setInputValue(oldValue[1], \"end\");\n      } else {\n        this.value = oldValue;\n        this.setInputValue(oldValue as string);\n      }\n    }\n  };\n\n  private setValue = (value: Date | string): void => {\n    if (this.range) {\n      return;\n    }\n\n    const oldValue = this.value;\n    let newValue = dateToISO(value as Date);\n    newValue = this.getNormalizedDate(newValue);\n\n    if (newValue === oldValue) {\n      return;\n    }\n\n    this.userChangedValue = true;\n    this.valueAsDate = newValue ? dateFromISO(newValue) : undefined;\n    this.value = newValue || \"\";\n\n    const changeEvent = this.calciteInputDatePickerChange.emit();\n\n    if (changeEvent.defaultPrevented) {\n      this.value = oldValue;\n      this.setInputValue(oldValue as string);\n    }\n  };\n\n  private warnAboutInvalidValue(value: string): void {\n    console.warn(\n      `The specified value \"${value}\" does not conform to the required format, \"YYYY-MM-DD\".`,\n    );\n  }\n\n  private commonDateSeparators = [\".\", \"-\", \"/\"];\n\n  private formatNumerals = (value: string): string =>\n    value\n      ? value\n          .split(\"\")\n          .map((char: string) =>\n            this.commonDateSeparators?.includes(char)\n              ? this.localeData?.separator\n              : numberKeys?.includes(char)\n                ? numberStringFormatter?.numberFormatter?.format(Number(char))\n                : char,\n          )\n          .join(\"\")\n      : \"\";\n\n  private parseNumerals = (value: string): string =>\n    value\n      ? value\n          .split(\"\")\n          .map((char: string) =>\n            numberKeys.includes(char) ? numberStringFormatter.delocalize(char) : char,\n          )\n          .join(\"\")\n      : \"\";\n\n  private getNormalizedDate(value: string): string {\n    if (!value) {\n      return \"\";\n    }\n\n    if (!isTwoDigitYear(value)) {\n      return value;\n    }\n\n    const { day, month, year } = datePartsFromISO(value);\n    const normalizedYear = normalizeToCurrentCentury(Number(year));\n    return `${normalizedYear}-${month}-${day}`;\n  }\n}\n","import { datePartsFromISO } from \"../../utils/date\";\n\n/**\n * Specifies if an ISO string date (YYYY-MM-DD) has two digit year.\n *\n * @param {string} value\n * @returns {boolean}\n */\nexport function isTwoDigitYear(value: string): boolean {\n  if (!value) {\n    return false;\n  }\n  const { year } = datePartsFromISO(value);\n  return Number(year) < 100;\n}\n\n/**\n * Returns a normalized year to current century from a given two digit year number.\n *\n * @param {number} twoDigitYear\n * @returns {string}\n */\nexport function normalizeToCurrentCentury(twoDigitYear: number): number {\n  const currentYear = new Date().getFullYear();\n  const normalizedYear = Math.floor(currentYear / 100) * 100 + twoDigitYear;\n  return normalizedYear;\n}\n",":host {\n  @extend %component-spacing;\n  @include floatingUIElemAnim(\".menu-container\");\n  @apply relative\n    inline-block\n    w-full\n    overflow-visible\n    align-top\n    shadow-none;\n}\n\n@function get-trailing-text-input-padding($chevron-spacing) {\n  @return calc(var(--calcite-toggle-spacing) + $chevron-spacing);\n}\n\n:host([scale=\"s\"]) {\n  --calcite-toggle-spacing: theme(\"spacing.2\");\n  --calcite-internal-input-text-input-padding-inline-end: #{get-trailing-text-input-padding(theme(\"spacing.4\"))};\n}\n\n:host([scale=\"m\"]) {\n  --calcite-toggle-spacing: theme(\"spacing.3\");\n  --calcite-internal-input-text-input-padding-inline-end: #{get-trailing-text-input-padding(theme(\"spacing.6\"))};\n}\n\n:host([scale=\"l\"]) {\n  --calcite-toggle-spacing: theme(\"spacing.4\");\n  --calcite-internal-input-text-input-padding-inline-end: #{get-trailing-text-input-padding(theme(\"spacing.8\"))};\n}\n\n@include disabled();\n\n.calendar-wrapper {\n  @apply shadow-none;\n  transform: translate3d(0, 0, 0);\n}\n\n.input-wrapper {\n  @apply relative;\n\n  .chevron-icon {\n    color: var(--calcite-color-text-3);\n  }\n\n  &:focus-within,\n  &:active,\n  &:hover {\n    .chevron-icon {\n      color: var(--calcite-color-text-1);\n    }\n  }\n}\n\n.toggle-icon {\n  @apply absolute flex cursor-pointer items-center;\n  inset-inline-end: 0;\n  inset-block: 0;\n  padding-inline: var(--calcite-toggle-spacing);\n}\n\n:host([range]) {\n  .input-container {\n    @apply flex;\n  }\n\n  .input-wrapper {\n    @apply flex-auto;\n  }\n\n  .horizontal-arrow-container {\n    @apply bg-background\n      border-color-input\n      flex\n      items-center\n      border\n      border-l-0\n      border-r-0\n      border-solid\n      py-0\n      px-1;\n  }\n}\n\n:host([range][layout=\"vertical\"]) {\n  .input-wrapper {\n    @apply w-full;\n  }\n\n  .input-container {\n    @apply flex-col\n      items-start;\n  }\n\n  .calendar-wrapper--end {\n    transform: translate3d(0, 0, 0);\n  }\n\n  .vertical-arrow-container {\n    inset-block-start: theme(\"spacing.6\");\n    @apply bg-foreground-1\n      absolute\n      z-default\n      mx-px\n      px-2.5;\n    inset-inline-start: 0;\n  }\n}\n\n.menu-container {\n  --calcite-floating-ui-z-index: theme(\"zIndex.dropdown\");\n  @include floatingUIContainer();\n  @include floatingUIWrapper();\n  @apply invisible;\n}\n\n@include floatingUIElemAnim(\".menu-container\");\n\n:host([open]) .menu-container {\n  @include floatingUIWrapperActive();\n}\n\n.menu-container--active {\n  @include floatingUIWrapperActive();\n}\n\n.input .calcite-input__wrapper {\n  @apply mt-0;\n}\n\n:host([range][layout=\"vertical\"][scale=\"m\"]) .vertical-arrow-container {\n  inset-block-start: theme(\"spacing.6\");\n  padding-inline-start: theme(\"spacing.3\");\n\n  calcite-icon {\n    @apply h-3\n      w-3\n      min-w-0;\n  }\n}\n\n:host([range][layout=\"vertical\"][scale=\"l\"]) .vertical-arrow-container {\n  inset-block-start: theme(\"spacing.9\");\n  @apply px-3.5;\n}\n\n:host([range][layout=\"vertical\"][open]) {\n  .vertical-arrow-container {\n    @apply hidden;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n\n.assistive-text {\n  @apply sr-only;\n}\n\n@include base-component();\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: The component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n"],"names":["Heading","props","children","HeadingTag","level","h","inRange","date","min","max","time","getTime","afterMin","Date","beforeMax","dateFromRange","beforeMin","afterMax","dateFromISO","iso8601","isEndDate","arguments","length","undefined","d","split","map","parseFloat","setFullYear","isNaN","Error","setEndOfDay","dateFromLocalizedString","value","localeData","separator","parts","string","day","month","year","datePartsFromLocalizedString","parseInt","parseDateString","parseCalendarYear","validDay","validMonth","validDate","validLength","filter","c","validYear","toString","processCalendarYear","mode","unitOrder","order","getOrder","values","part","numberStringFormatter","delocalize","indexOf","dateToISO","String","getMonth","padStart","getDate","getFullYear","datePartsFromISO","isoDate","dateParts","sameDate","d1","d2","toLowerCase","sort","a","b","getDaysDiff","date1","date2","setHours","DatePickerDay","proxyCustomElement","HTMLElement","onClick","this","disabled","calciteDaySelect","emit","keyDownHandler","event","isActivationKey","key","preventDefault","pointerOverHandler","calciteInternalDayHover","componentWillLoad","setUpLoadableComponent","parentDatePickerEl","closestElementCrossShadowBoundary","el","componentDidLoad","setComponentLoaded","setFocus","componentFocusable","focus","render","dayId","replaceAll","numberingSystem","lang","locale","numberFormatOptions","useGrouping","formattedDay","localize","dayLabel","dateTimeFormat","format","Host","toAriaBoolean","active","id","onKeyDown","role","tabIndex","InteractiveContainer","class","connectedCallback","connectInteractive","componentDidRender","updateHostInteraction","disconnectedCallback","disconnectInteractive","DatePickerMonth","defaultPrevented","isRTL","dir","addDays","addMonths","activeDate","setDate","activeFocus","disableActiveFocus","dayHover","target","calciteInternalDatePickerMouseOut","calciteInternalDatePickerHover","stopPropagation","daySelect","calciteInternalDatePickerSelect","pointerOutHandler","startOfWeek","weekStart","abbreviated","short","narrow","days","weekDays","scale","adjustedWeekDays","slice","curMonDays","getCurrentMonthDays","prevMonDays","getPreviousMonthDays","nextMonDays","getNextMonthDays","dayInWeek","getDayInWeek","currentMonth","ref","onFocusout","weekday","index","renderDateDay","step","nextDate","setMonth","calciteInternalDatePickerActiveDateChange","lastDate","startDay","getDay","i","push","num","endDay","betweenSelectedRange","startDate","endDate","isRangeHover","isSelected","selectedDate","isStartOfRange","isEndOfRange","hoverRange","end","_ref","isFocusedOnStart","isHoverInRange","endOfRange","highlighted","onCalciteDaySelect","onCalciteInternalDayHover","range","rangeEdge","rangeHover","selected","startOfRange","focused","start","isStart","insideRange","cond1","cond2","CSS","ICON","DatePickerMonthHeader","onYearKey","localizedYear","setYear","offset","onYearChange","onYearInput","commit","prevMonthClick","handleArrowClick","prevMonthDate","prevMonthKeydown","nextMonthClick","nextMonthDate","nextMonthKeydown","setNextPrevMonthDates","renderContent","messages","activeMonth","months","localizedMonth","wide","formatCalendarYear","reverse","suffix","Fragment","prevMonth","href","tabindex","icon","getIconScale","text","headingLevel","inputmode","maxlength","minlength","onChange","onInput","pattern","yearInput","type","nextMonth","Number","getInRangeDate","parsedYear","_ref2","inRangeDate","DATE_PICKER_FORMAT_OPTIONS","dateStyle","translationCache","requestCache","async","getLocaleData","getSupportedLocale","fetch","getAssetPath","then","resp","json","catch","console","error","data","getValueAsDateRange","v","DatePicker","resetActiveDates","monthHeaderSelectChange","detail","activeRange","activeEndDate","activeStartDate","mostRecentRangeValue","monthActiveDateChange","monthHoverChange","valueAsDate","Array","isArray","proximitySelectionDisabled","startDiff","endDiff","monthMouseOutChange","monthDateChange","calciteDatePickerChange","getStartDate","getEndDate","setEndDate","setStartDate","activeDateWatcher","newActiveDate","valueAsDateWatcher","newValueAsDate","newActiveStartDate","newActiveEndDate","onMinChanged","minAsDate","onMaxChanged","maxAsDate","onMessagesChange","reset","connectLocalized","connectMessages","disconnectLocalized","disconnectMessages","loadLocaleData","setUpMessages","getActiveDate","getActiveEndDate","minDate","maxDate","onBlur","renderCalendar","effectiveLocaleChange","updateMessages","effectiveLocale","valueHandler","isBrowser","getDateTimeFormat","onCalciteInternalDatePickerSelect","onCalciteInternalDatePickerActiveDateChange","onCalciteInternalDatePickerHover","onCalciteInternalDatePickerMouseOut","newEndDate","calciteDatePickerRangeChange","InputDatePicker","calciteInternalInputInputHandler","parsedValue","parseNumerals","formattedValue","formatNumerals","datePickerActiveDate","calciteInternalInputBlurHandler","commitValue","dialogId","guid","focusOnOpen","userChangedValue","openTransitionProp","valueAsDateChangedExternally","placeholderTextId","onInputWrapperPointerDown","currentOpenInput","focusedInput","onInputWrapperClick","endInput","startInput","position","currentTarget","getAttribute","composedPath","find","classList","contains","open","setFilteredPlacements","flipPlacements","filteredFlipPlacements","filterValidFlipPlacements","setTransitionEl","transitionEl","setStartInput","setEndInput","blurHandler","shouldFocusRangeEnd","shouldFocusRangeStart","submitForm","restoreInputFocus","startInputFocus","endInputFocus","setFloatingEl","floatingEl","connectFloatingUI","referenceEl","setStartWrapper","startWrapper","setReferenceEl","setEndWrapper","endWrapper","setDatePickerRef","datePickerEl","connectFocusTrap","focusTrapEl","focusTrapOptions","initialFocus","setReturnFocus","handleDateChange","setValue","localizeInputValues","handleDateRangeChange","setRangeValue","setInputValue","newValue","inputEl","_this","oldValue","oldValueIsArray","valueIsArray","newStartDate","newStartDateISO","getNormalizedDate","newEndDateISO","changeEvent","calciteInputDatePickerChange","commonDateSeparators","char","includes","numberKeys","numberFormatter","join","valid","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","defaultMenuPlacement","handleFocusTrapDisabled","focusTrapDisabled","deactivateFocusTrap","activateFocusTrap","handleDisabledAndReadOnlyChange","valueWatcher","flipPlacementsHandler","reposition","openHandler","onToggleOpenCloseComponent","readOnly","overlayPositioningHandler","calciteDaySelectHandler","focusFirstTabbable","delayed","placement","overlayPositioning","dateInRange","warnAboutInvalidValue","connectLabel","connectForm","Promise","all","disconnectLabel","disconnectForm","disconnectFloatingUI","onPointerDown","layout","onCalciteInputTextInput","onCalciteInternalInputTextBlur","onCalciteInternalInputTextFocus","placeholder","status","renderToggleIcon","chooseDate","FloatingCSS","animation","animationActive","messageOverrides","onCalciteDatePickerChange","onCalciteDatePickerRangeChange","flipRtl","HiddenFormInputSlot","component","validationMessage","Validation","validationIcon","message","requestAnimationFrame","onLabelClick","onBeforeOpen","calciteInputDatePickerBeforeOpen","onOpen","onActivate","calciteInputDatePickerOpen","onBeforeClose","calciteInputDatePickerBeforeClose","onClose","calciteInputDatePickerClose","syncHiddenFormInput","input","dateAsISO","startValue","endValue","formattingOptions","getSupportedNumberingSystem","localizedDate","toLocaleDateString","localizedEndDate","warn","isTwoDigitYear","twoDigitYear","currentYear","Math","floor","normalizeToCurrentCentury","iconCache","scaleToPx","s","m","l","generateIconId","size","name","numberLeadingName","charAt","firstNonDigitInPartPattern","partIndex","replace","match","toUpperCase","normalizeIconName","filled","substring","getCachedIconDataByKey","Icon","visible","waitUntilVisible","loadIconPathData","intersectionObserver","disconnect","pathData","textLabel","getElementDir","semantic","paths","concat","svg","fill","height","viewBox","width","xmlns","path","opacity","fetchIconProps","cachedIconKey","cachedIconData","fetchIcon","callback","createObserver","entries","forEach","entry","isIntersecting","rootMargin","observe"],"sourceRoot":""}