{"version":3,"file":"static/js/4388.2ccc30a1.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/utils/array.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action-menu/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/action-menu/action-menu.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/action-menu/action-menu.scss?tag=calcite-action-menu&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/block/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/block/block.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/block/block.scss?tag=calcite-block&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/utils/conditionalSlot.ts","../node_modules/@esri/calcite-components/dist/components/src/components/handle/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/handle/handle.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/handle/handle.scss?tag=calcite-handle&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/scrim/scrim.scss?tag=calcite-scrim&encapsulation=shadow"],"sourcesContent":["export function getRoundRobinIndex(index: number, total: number): number {\n  return (index + total) % total;\n}\n","export const CSS = {\n  menu: \"menu\",\n  defaultTrigger: \"default-trigger\",\n};\n\nexport const SLOTS = {\n  tooltip: \"tooltip\",\n  trigger: \"trigger\",\n};\n\nexport const ICONS = {\n  menu: \"ellipsis\",\n} as const;\n\nexport const activeAttr = \"data-active\";\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  Watch,\n} from \"@stencil/core\";\nimport { Fragment, VNode } from \"@stencil/core/internal\";\nimport { getRoundRobinIndex } from \"../../utils/array\";\nimport { focusElement, toAriaBoolean } from \"../../utils/dom\";\nimport { FlipPlacement, LogicalPlacement, OverlayPositioning } from \"../../utils/floating-ui\";\nimport { guid } from \"../../utils/guid\";\nimport { isActivationKey } from \"../../utils/key\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { Appearance, Scale } from \"../interfaces\";\nimport { activeAttr, CSS, ICONS, SLOTS } from \"./resources\";\n\nconst SUPPORTED_MENU_NAV_KEYS = [\"ArrowUp\", \"ArrowDown\", \"End\", \"Home\"];\n\n/**\n * @slot - A slot for adding `calcite-action`s.\n * @slot trigger - A slot for adding a `calcite-action` to trigger opening the menu.\n * @slot tooltip - A slot for adding an tooltip for the menu.\n */\n@Component({\n  tag: \"calcite-action-menu\",\n  styleUrl: \"action-menu.scss\",\n  shadow: true,\n})\nexport class ActionMenu implements LoadableComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.connectMenuButtonEl();\n  }\n\n  componentWillLoad(): void {\n    setUpLoadableComponent(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  disconnectedCallback(): void {\n    this.disconnectMenuButtonEl();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /** Specifies the appearance of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"transparent\", Appearance> = \"solid\";\n\n  /**\n   * When `true`, the component is expanded.\n   */\n  @Prop({ reflect: true }) expanded = false;\n\n  @Watch(\"expanded\")\n  expandedHandler(): void {\n    this.open = false;\n    this.setTooltipReferenceElement();\n  }\n\n  /**\n   * Defines the available placements that can be used when a flip occurs.\n   */\n  @Prop() flipPlacements: FlipPlacement[];\n\n  /**\n   *  Specifies the text string for the component.\n   */\n  @Prop() label!: string;\n\n  /**\n   * When `true`, the component is open.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(open: boolean): void {\n    this.activeMenuItemIndex = this.open ? 0 : -1;\n    if (this.menuButtonEl) {\n      this.menuButtonEl.active = open;\n    }\n    this.calciteActionMenuOpen.emit();\n\n    this.setTooltipReferenceElement();\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  /**\n   * Determines where the component will be positioned relative to the `referenceElement`.\n   */\n  @Prop({ reflect: true }) placement: LogicalPlacement = \"auto\";\n\n  /**\n   * Specifies the size of the component's trigger `calcite-action`.\n   */\n  @Prop({ reflect: true }) scale: Scale;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires when the `open` property is toggled.\n   *\n   */\n  @Event({ cancelable: false }) calciteActionMenuOpen: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteActionMenuElement;\n\n  @State() menuButtonEl: HTMLCalciteActionElement;\n\n  slottedMenuButtonEl: HTMLCalciteActionElement;\n\n  defaultMenuButtonEl: HTMLCalciteActionElement;\n\n  actionElements: HTMLCalciteActionElement[] = [];\n\n  guid = `calcite-action-menu-${guid()}`;\n\n  menuId = `${this.guid}-menu`;\n\n  menuButtonId = `${this.guid}-menu-button`;\n\n  tooltipEl: HTMLCalciteTooltipElement;\n\n  @State() activeMenuItemIndex = -1;\n\n  @Watch(\"activeMenuItemIndex\")\n  activeMenuItemIndexHandler(): void {\n    this.updateActions(this.actionElements);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    return focusElement(this.menuButtonEl);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Component Methods\n  //\n  // --------------------------------------------------------------------------\n\n  connectMenuButtonEl = (): void => {\n    const { menuButtonId, menuId, open, label } = this;\n    const menuButtonEl = this.slottedMenuButtonEl || this.defaultMenuButtonEl;\n\n    if (this.menuButtonEl === menuButtonEl) {\n      return;\n    }\n\n    this.disconnectMenuButtonEl();\n\n    this.menuButtonEl = menuButtonEl;\n\n    this.setTooltipReferenceElement();\n\n    if (!menuButtonEl) {\n      return;\n    }\n\n    menuButtonEl.active = open;\n    menuButtonEl.setAttribute(\"aria-controls\", menuId);\n    menuButtonEl.setAttribute(\"aria-expanded\", toAriaBoolean(open));\n    menuButtonEl.setAttribute(\"aria-haspopup\", \"true\");\n\n    if (!menuButtonEl.id) {\n      menuButtonEl.id = menuButtonId;\n    }\n\n    if (!menuButtonEl.label) {\n      menuButtonEl.label = label;\n    }\n\n    if (!menuButtonEl.text) {\n      menuButtonEl.text = label;\n    }\n\n    menuButtonEl.addEventListener(\"click\", this.menuButtonClick);\n    menuButtonEl.addEventListener(\"keydown\", this.menuButtonKeyDown);\n  };\n\n  disconnectMenuButtonEl = (): void => {\n    const { menuButtonEl } = this;\n\n    if (!menuButtonEl) {\n      return;\n    }\n\n    menuButtonEl.removeEventListener(\"click\", this.menuButtonClick);\n    menuButtonEl.removeEventListener(\"keydown\", this.menuButtonKeyDown);\n  };\n\n  setMenuButtonEl = (event: Event): void => {\n    const actions = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el) => el?.matches(\"calcite-action\")) as HTMLCalciteActionElement[];\n\n    this.slottedMenuButtonEl = actions[0];\n    this.connectMenuButtonEl();\n  };\n\n  setDefaultMenuButtonEl = (el: HTMLCalciteActionElement): void => {\n    this.defaultMenuButtonEl = el;\n    this.connectMenuButtonEl();\n  };\n\n  renderMenuButton(): VNode {\n    const { appearance, label, scale, expanded } = this;\n\n    const menuButtonSlot = (\n      <slot name={SLOTS.trigger} onSlotchange={this.setMenuButtonEl}>\n        <calcite-action\n          appearance={appearance}\n          class={CSS.defaultTrigger}\n          icon={ICONS.menu}\n          ref={this.setDefaultMenuButtonEl}\n          scale={scale}\n          text={label}\n          textEnabled={expanded}\n        />\n      </slot>\n    );\n\n    return menuButtonSlot;\n  }\n\n  renderMenuItems(): VNode {\n    const {\n      actionElements,\n      activeMenuItemIndex,\n      open,\n      menuId,\n      menuButtonEl,\n      label,\n      placement,\n      overlayPositioning,\n      flipPlacements,\n    } = this;\n\n    const activeAction = actionElements[activeMenuItemIndex];\n    const activeDescendantId = activeAction?.id || null;\n\n    return (\n      <calcite-popover\n        autoClose={true}\n        flipPlacements={flipPlacements}\n        focusTrapDisabled={true}\n        label={label}\n        offsetDistance={0}\n        onCalcitePopoverClose={this.handlePopoverClose}\n        onCalcitePopoverOpen={this.handlePopoverOpen}\n        open={open}\n        overlayPositioning={overlayPositioning}\n        placement={placement}\n        pointerDisabled={true}\n        referenceElement={menuButtonEl}\n      >\n        <div\n          aria-activedescendant={activeDescendantId}\n          aria-labelledby={menuButtonEl?.id}\n          class={CSS.menu}\n          id={menuId}\n          onClick={this.handleCalciteActionClick}\n          role=\"menu\"\n          tabIndex={-1}\n        >\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </div>\n      </calcite-popover>\n    );\n  }\n\n  render(): VNode {\n    return (\n      <Fragment>\n        {this.renderMenuButton()}\n        {this.renderMenuItems()}\n        <slot name={SLOTS.tooltip} onSlotchange={this.updateTooltip} />\n      </Fragment>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  handleCalciteActionClick = (): void => {\n    this.open = false;\n    this.setFocus();\n  };\n\n  private menuButtonClick = (): void => {\n    this.toggleOpen();\n  };\n\n  updateTooltip = (event: Event): void => {\n    const tooltips = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .filter((el) => el?.matches(\"calcite-tooltip\")) as HTMLCalciteTooltipElement[];\n\n    this.tooltipEl = tooltips[0];\n    this.setTooltipReferenceElement();\n  };\n\n  setTooltipReferenceElement = (): void => {\n    const { tooltipEl, expanded, menuButtonEl, open } = this;\n\n    if (tooltipEl) {\n      tooltipEl.referenceElement = !expanded && !open ? menuButtonEl : null;\n    }\n  };\n\n  updateAction = (action: HTMLCalciteActionElement, index: number): void => {\n    const { guid, activeMenuItemIndex } = this;\n    const id = `${guid}-action-${index}`;\n\n    action.tabIndex = -1;\n    action.setAttribute(\"role\", \"menuitem\");\n\n    if (!action.id) {\n      action.id = id;\n    }\n\n    // data attribute is used to style the \"activeMenuItemIndex\" action using token focus styling.\n    action.toggleAttribute(activeAttr, index === activeMenuItemIndex);\n  };\n\n  updateActions = (actions: HTMLCalciteActionElement[]): void => {\n    actions?.forEach(this.updateAction);\n  };\n\n  handleDefaultSlotChange = (event: Event): void => {\n    const actions = (event.target as HTMLSlotElement)\n      .assignedElements({\n        flatten: true,\n      })\n      .reduce(\n        (previousValue: HTMLCalciteActionElement[], currentValue): HTMLCalciteActionElement[] => {\n          if (currentValue?.matches(\"calcite-action\")) {\n            previousValue.push(currentValue as HTMLCalciteActionElement);\n            return previousValue;\n          }\n\n          if (currentValue?.matches(\"calcite-action-group\")) {\n            return previousValue.concat(\n              Array.from(currentValue.querySelectorAll(\"calcite-action\")),\n            );\n          }\n\n          return previousValue;\n        },\n        [],\n      );\n\n    this.actionElements = actions.filter((action) => !action.disabled && !action.hidden);\n  };\n\n  isValidKey(key: string, supportedKeys: string[]): boolean {\n    return !!supportedKeys.find((k) => k === key);\n  }\n\n  menuButtonKeyDown = (event: KeyboardEvent): void => {\n    const { key } = event;\n    const { actionElements, activeMenuItemIndex, open } = this;\n\n    if (!actionElements.length) {\n      return;\n    }\n\n    if (isActivationKey(key)) {\n      event.preventDefault();\n\n      if (!open) {\n        this.toggleOpen();\n        return;\n      }\n\n      const action = actionElements[activeMenuItemIndex];\n      action ? action.click() : this.toggleOpen(false);\n    }\n\n    if (key === \"Tab\") {\n      this.open = false;\n      return;\n    }\n\n    if (key === \"Escape\") {\n      this.toggleOpen(false);\n      event.preventDefault();\n      return;\n    }\n\n    this.handleActionNavigation(event, key, actionElements);\n  };\n\n  handleActionNavigation = (\n    event: KeyboardEvent,\n    key: string,\n    actions: HTMLCalciteActionElement[],\n  ): void => {\n    if (!this.isValidKey(key, SUPPORTED_MENU_NAV_KEYS)) {\n      return;\n    }\n\n    event.preventDefault();\n\n    if (!this.open) {\n      this.toggleOpen();\n\n      if (key === \"Home\" || key === \"ArrowDown\") {\n        this.activeMenuItemIndex = 0;\n      }\n\n      if (key === \"End\" || key === \"ArrowUp\") {\n        this.activeMenuItemIndex = actions.length - 1;\n      }\n\n      return;\n    }\n\n    if (key === \"Home\") {\n      this.activeMenuItemIndex = 0;\n    }\n\n    if (key === \"End\") {\n      this.activeMenuItemIndex = actions.length - 1;\n    }\n\n    const currentIndex = this.activeMenuItemIndex;\n\n    if (key === \"ArrowUp\") {\n      this.activeMenuItemIndex = getRoundRobinIndex(Math.max(currentIndex - 1, -1), actions.length);\n    }\n\n    if (key === \"ArrowDown\") {\n      this.activeMenuItemIndex = getRoundRobinIndex(currentIndex + 1, actions.length);\n    }\n  };\n\n  toggleOpenEnd = (): void => {\n    this.setFocus();\n    this.el.removeEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n  };\n\n  toggleOpen = (value = !this.open): void => {\n    this.el.addEventListener(\"calcitePopoverOpen\", this.toggleOpenEnd);\n    this.open = value;\n  };\n\n  private handlePopoverOpen = (): void => {\n    this.open = true;\n  };\n\n  private handlePopoverClose = (): void => {\n    this.open = false;\n  };\n}\n",":host {\n  @apply text-color-2\n  text-1\n  box-border\n  flex\n  flex-col;\n}\n\n::slotted(calcite-action-group) {\n  border-block-end: 1px solid var(--calcite-color-border-3);\n}\n\n::slotted(calcite-action-group:last-child) {\n  border-block-end: 0;\n}\n\n.default-trigger {\n  @apply relative\n  h-full\n  flex-initial\n  self-stretch;\n}\n\n@include slotted(\"trigger\", \"calcite-action\") {\n  @apply relative\n  h-full\n  flex-initial\n  self-stretch;\n}\n\n.menu {\n  @apply flex-col\n  flex-nowrap\n  outline-none\n  overflow-y-auto\n  overflow-x-hidden\n  max-h-menu;\n}\n\n@include base-component();\n","export const IDS = {\n  content: \"content\",\n  toggle: \"toggle\",\n  header: \"header\",\n};\n\nexport const CSS = {\n  actionsEnd: \"actions-end\",\n  button: \"button\",\n  container: \"container\",\n  content: \"content\",\n  contentStart: \"content-start\",\n  controlContainer: \"control-container\",\n  description: \"description\",\n  header: \"header\",\n  headerContainer: \"header-container\",\n  headerHasText: \"header--has-text\",\n  heading: \"heading\",\n  icon: \"icon\",\n  iconStart: \"icon--start\",\n  iconEnd: \"icon--end\",\n  iconEndContainer: \"icon-end-container\",\n  invalid: \"invalid\",\n  statusIcon: \"status-icon\",\n  summary: \"summary\",\n  title: \"title\",\n  toggle: \"toggle\",\n  toggleIcon: \"toggle-icon\",\n  valid: \"valid\",\n};\n\nexport const SLOTS = {\n  actionsEnd: \"actions-end\",\n  contentStart: \"content-start\",\n  control: \"control\",\n  headerMenuActions: \"header-menu-actions\",\n  icon: \"icon\",\n};\n\nexport const ICONS = {\n  opened: \"chevron-up\",\n  closed: \"chevron-down\",\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n} as const;\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  ConditionalSlotComponent,\n  connectConditionalSlotComponent,\n  disconnectConditionalSlotComponent,\n} from \"../../utils/conditionalSlot\";\nimport {\n  focusFirstTabbable,\n  getSlotted,\n  toAriaBoolean,\n  slotChangeHasAssignedElement,\n} from \"../../utils/dom\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { Heading, HeadingLevel } from \"../functional/Heading\";\nimport { Status, Position } from \"../interfaces\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { onToggleOpenCloseComponent, OpenCloseComponent } from \"../../utils/openCloseComponent\";\nimport { OverlayPositioning } from \"../../utils/floating-ui\";\nimport { FlipContext } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { CSS, ICONS, IDS, SLOTS } from \"./resources\";\nimport { BlockMessages } from \"./assets/block/t9n\";\n\n/**\n * @slot - A slot for adding custom content.\n * @slot actions-end - A slot for adding actionable `calcite-action` elements after the content of the component. It is recommended to use two or fewer actions.\n * @slot icon - [Deprecated] A slot for adding a leading header icon with `calcite-icon`. Use `icon-start` instead.\n * @slot content-start - A slot for adding non-actionable elements before content of the component.\n * @slot control - [Deprecated] A slot for adding a single HTML input element in a header. Use `actions-end` instead.\n * @slot header-menu-actions - A slot for adding an overflow menu with `calcite-action`s inside a dropdown menu.\n */\n@Component({\n  tag: \"calcite-block\",\n  styleUrl: \"block.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Block\n  implements\n    ConditionalSlotComponent,\n    InteractiveComponent,\n    LocalizedComponent,\n    T9nComponent,\n    LoadableComponent,\n    OpenCloseComponent\n{\n  // --------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is collapsible.\n   */\n  @Prop({ reflect: true }) collapsible = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * When `true`, displays a drag handle in the header.\n   */\n  @Prop({ reflect: true }) dragHandle = false;\n\n  /**\n   * The component header text.\n   */\n  @Prop() heading!: string;\n\n  /**\n   * Specifies the heading level of the component's `heading` for proper document structure, without affecting visual styling.\n   */\n  @Prop({ reflect: true }) headingLevel: HeadingLevel;\n\n  /** Specifies an icon to display at the end of the component. */\n  @Prop({ reflect: true }) iconEnd: IconNameOrString;\n\n  /** Displays the `iconStart` and/or `iconEnd` as flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl: FlipContext;\n\n  /** Specifies an icon to display at the start of the component. */\n  @Prop({ reflect: true }) iconStart: IconNameOrString;\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * When `true`, expands the component and its contents.\n   */\n  @Prop({ reflect: true, mutable: true }) open = false;\n\n  @Watch(\"open\")\n  openHandler(): void {\n    onToggleOpenCloseComponent(this);\n  }\n\n  /**\n   * Displays a status-related indicator icon.\n   *\n   * @deprecated Use `icon-start` instead.\n   */\n  @Prop({ reflect: true }) status: Status;\n\n  /**\n   * A description for the component, which displays below the heading.\n   */\n  @Prop() description: string;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: BlockMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<BlockMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  /**\n   * Determines the type of positioning to use for the overlaid content.\n   *\n   * Using `\"absolute\"` will work for most cases. The component will be positioned inside of overflowing parent containers and will affect the container's layout.\n   *\n   * `\"fixed\"` should be used to escape an overflowing parent container, or when the reference element's `position` CSS property is `\"fixed\"`.\n   *\n   */\n  @Prop({ reflect: true }) overlayPositioning: OverlayPositioning = \"absolute\";\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Sets focus on the component's first tabbable element.\n   *\n   */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n    focusFirstTabbable(this.el);\n  }\n\n  onBeforeOpen(): void {\n    this.calciteBlockBeforeOpen.emit();\n  }\n\n  onOpen(): void {\n    this.calciteBlockOpen.emit();\n  }\n\n  onBeforeClose(): void {\n    this.calciteBlockBeforeClose.emit();\n  }\n\n  onClose(): void {\n    this.calciteBlockClose.emit();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteBlockElement;\n\n  @State() defaultMessages: BlockMessages;\n\n  @State() effectiveLocale: string;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() hasContentStart = false;\n\n  @State() hasEndActions = false;\n\n  openTransitionProp = \"opacity\";\n\n  transitionEl: HTMLElement;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  // --------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectConditionalSlotComponent(this);\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    disconnectConditionalSlotComponent(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n    setUpLoadableComponent(this);\n\n    if (this.open) {\n      onToggleOpenCloseComponent(this);\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /** Fires when the component is requested to be closed and before the closing transition begins. */\n  @Event({ cancelable: false }) calciteBlockBeforeClose: EventEmitter<void>;\n\n  /** Fires when the component is added to the DOM but not rendered, and before the opening transition begins. */\n  @Event({ cancelable: false }) calciteBlockBeforeOpen: EventEmitter<void>;\n\n  /** Fires when the component is closed and animation is complete. */\n  @Event({ cancelable: false }) calciteBlockClose: EventEmitter<void>;\n\n  /** Fires when the component is open and animation is complete. */\n  @Event({ cancelable: false }) calciteBlockOpen: EventEmitter<void>;\n\n  /**\n   * Fires when the component's header is clicked.\n   *\n   * @deprecated Use `openClose` events such as `calciteBlockOpen`, `calciteBlockClose`, `calciteBlockBeforeOpen`, and `calciteBlockBeforeClose` instead.\n   */\n  @Event({ cancelable: false }) calciteBlockToggle: EventEmitter<void>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  onHeaderClick = (): void => {\n    this.open = !this.open;\n    this.calciteBlockToggle.emit();\n  };\n\n  private setTransitionEl = (el: HTMLElement): void => {\n    this.transitionEl = el;\n  };\n\n  private actionsEndSlotChangeHandler = (event: Event): void => {\n    this.hasEndActions = slotChangeHasAssignedElement(event);\n  };\n\n  private handleContentStartSlotChange = (event: Event): void => {\n    this.hasContentStart = slotChangeHasAssignedElement(event);\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  renderScrim(): VNode[] {\n    const { loading } = this;\n    const defaultSlot = <slot />;\n\n    return [loading ? <calcite-scrim loading={loading} /> : null, defaultSlot];\n  }\n\n  private renderLoaderStatusIcon(): VNode[] {\n    const { loading, messages, status } = this;\n\n    const hasSlottedIcon = !!getSlotted(this.el, SLOTS.icon);\n\n    return loading ? (\n      <div class={CSS.icon} key=\"loader\">\n        <calcite-loader inline label={messages.loading} />\n      </div>\n    ) : status ? (\n      <div class={CSS.icon} key=\"status-icon\">\n        <calcite-icon\n          class={{\n            [CSS.statusIcon]: true,\n            [CSS.valid]: status == \"valid\",\n            [CSS.invalid]: status == \"invalid\",\n          }}\n          icon={ICONS[status]}\n          scale=\"s\"\n        />\n      </div>\n    ) : hasSlottedIcon ? (\n      <div class={CSS.icon} key=\"icon-slot\">\n        <slot key=\"icon-slot\" name={SLOTS.icon} />\n      </div>\n    ) : null;\n  }\n\n  private renderActionsEnd(): VNode {\n    return (\n      <div class={CSS.actionsEnd}>\n        <slot name={SLOTS.actionsEnd} onSlotchange={this.actionsEndSlotChangeHandler} />\n      </div>\n    );\n  }\n\n  private renderContentStart(): VNode {\n    const { hasContentStart } = this;\n    return (\n      <div class={CSS.contentStart} hidden={!hasContentStart}>\n        <slot name={SLOTS.contentStart} onSlotchange={this.handleContentStartSlotChange} />\n      </div>\n    );\n  }\n\n  renderTitle(): VNode {\n    const { heading, headingLevel, description } = this;\n    return heading || description ? (\n      <div class={CSS.title}>\n        <Heading class={CSS.heading} level={headingLevel}>\n          {heading}\n        </Heading>\n        {description ? <div class={CSS.description}>{description}</div> : null}\n      </div>\n    ) : null;\n  }\n\n  private renderIcon(position: Extract<\"start\" | \"end\", Position>): VNode {\n    const { iconFlipRtl } = this;\n\n    const flipRtl =\n      iconFlipRtl === \"both\" || position === \"start\"\n        ? iconFlipRtl === \"start\"\n        : iconFlipRtl === \"end\";\n\n    const iconValue = position === \"start\" ? this.iconStart : this.iconEnd;\n    const iconClass = position === \"start\" ? CSS.iconStart : CSS.iconEnd;\n\n    if (!iconValue) {\n      return undefined;\n    }\n\n    /** Icon scale is not variable as the component does not have a scale property */\n    return (\n      <calcite-icon\n        class={iconClass}\n        flipRtl={flipRtl}\n        icon={iconValue}\n        key={iconValue}\n        scale=\"s\"\n      />\n    );\n  }\n\n  render(): VNode {\n    const { collapsible, el, loading, open, heading, messages, description } = this;\n\n    const toggleLabel = open ? messages.collapse : messages.expand;\n\n    const headerContent = (\n      <header\n        class={{ [CSS.header]: true, [CSS.headerHasText]: !!(heading || description) }}\n        id={IDS.header}\n      >\n        {this.renderIcon(\"start\")}\n        {this.renderContentStart()}\n        {this.renderLoaderStatusIcon()}\n        {this.renderTitle()}\n      </header>\n    );\n\n    const hasControl = !!getSlotted(el, SLOTS.control);\n    const hasMenuActions = !!getSlotted(el, SLOTS.headerMenuActions);\n    const collapseIcon = open ? ICONS.opened : ICONS.closed;\n\n    const headerNode = (\n      <div class={CSS.headerContainer}>\n        {this.dragHandle ? <calcite-handle label={heading} /> : null}\n        {collapsible ? (\n          <button\n            aria-controls={IDS.content}\n            aria-describedby={IDS.header}\n            aria-expanded={collapsible ? toAriaBoolean(open) : null}\n            class={CSS.toggle}\n            id={IDS.toggle}\n            onClick={this.onHeaderClick}\n            title={toggleLabel}\n          >\n            {headerContent}\n            <div class={CSS.iconEndContainer}>\n              {this.renderIcon(\"end\")}\n              <calcite-icon class={CSS.toggleIcon} icon={collapseIcon} scale=\"s\" />\n            </div>\n          </button>\n        ) : this.iconEnd ? (\n          <div>\n            {headerContent}\n            <div class={CSS.iconEndContainer}>{this.renderIcon(\"end\")}</div>\n          </div>\n        ) : (\n          headerContent\n        )}\n        {hasControl ? (\n          <div aria-labelledby={IDS.header} class={CSS.controlContainer}>\n            <slot name={SLOTS.control} />\n          </div>\n        ) : null}\n        {hasMenuActions ? (\n          <calcite-action-menu\n            label={messages.options}\n            overlayPositioning={this.overlayPositioning}\n          >\n            <slot name={SLOTS.headerMenuActions} />\n          </calcite-action-menu>\n        ) : null}\n        {this.renderActionsEnd()}\n      </div>\n    );\n\n    return (\n      <Host>\n        <InteractiveContainer disabled={this.disabled}>\n          <article\n            aria-busy={toAriaBoolean(loading)}\n            class={{\n              [CSS.container]: true,\n            }}\n          >\n            {headerNode}\n            <section\n              aria-labelledby={IDS.toggle}\n              class={CSS.content}\n              hidden={!open}\n              id={IDS.content}\n              ref={this.setTransitionEl}\n            >\n              {this.renderScrim()}\n            </section>\n          </article>\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-block-padding: Specifies the padding of the block `default` slot.\n */\n\n:host {\n  @extend %component-host;\n  @extend %component-spacing;\n  @apply transition-margin ease-cubic border-color-3 flex flex-shrink-0 flex-grow-0\n    flex-col border-0 border-b border-solid p-0 duration-150;\n  flex-basis: auto;\n}\n\n@include disabled();\n\n@import \"../../assets/styles/animation\";\n@import \"../../assets/styles/header\";\n\n.header {\n  @apply justify-start;\n}\n\n.header--has-text {\n  padding: var(--calcite-spacing-md);\n}\n\n.header,\n.toggle {\n  grid-area: header;\n}\n\n.header-container {\n  @apply grid items-stretch;\n  grid-template: auto / auto 1fr auto auto;\n  grid-template-areas: \"handle header control menu actions-end\";\n  grid-column: header-start / actions-end;\n  grid-row: 1 / 2;\n}\n\n.content-start,\n.icon,\n.icon--start,\n.icon--end {\n  margin-inline-end: var(--calcite-spacing-md);\n}\n\n.icon {\n  & calcite-loader {\n    margin-inline-end: var(--calcite-spacing-xxxs);\n  }\n}\n\n.icon--start,\n.icon--end {\n  @apply text-color-3;\n}\n\n.actions-end {\n  grid-area: actions-end;\n}\n\n.toggle {\n  @apply font-sans\n    focus-base\n    m-0\n    flex\n    cursor-pointer\n    flex-nowrap\n    items-center\n    justify-between\n    border-none\n    p-0;\n\n  text-align: initial;\n  background-color: transparent;\n\n  &:hover {\n    @apply bg-foreground-2;\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n}\n\ncalcite-loader[inline] {\n  grid-area: control;\n  @apply self-center;\n}\n\ncalcite-handle {\n  grid-area: handle;\n}\n\n.title {\n  @apply m-0;\n}\n\n.header .title .heading {\n  @apply text-n1\n    text-color-2\n    word-break\n    transition-color\n    p-0\n    font-medium\n    leading-tight\n    duration-150\n    ease-in-out;\n}\n\n.description {\n  @apply text-n2-wrap\n    text-color-3\n    word-break\n    mt-0.5\n    p-0;\n}\n\n.icon {\n  @apply flex;\n}\n\n.status-icon.valid {\n  color: theme(\"colors.success\");\n}\n\n.status-icon.invalid {\n  color: theme(\"colors.danger\");\n}\n\n@keyframes spin {\n  0% {\n    transform: rotate(0deg);\n  }\n  50% {\n    transform: rotate(180deg);\n  }\n  100% {\n    transform: rotate(360deg);\n  }\n}\n\n.icon-end-container {\n  @apply flex items-center;\n\n  margin-inline-start: auto;\n}\n\n.toggle-icon {\n  @apply text-color-3\n  transition-color\n  self-center\n  justify-self-end\n  duration-150\n  ease-in-out;\n\n  margin-inline-end: var(--calcite-spacing-md);\n}\n\n.toggle:hover .toggle-icon {\n  @apply text-color-1;\n}\n\n.container {\n  @apply flex flex-col h-full relative;\n}\n\n.content {\n  @apply animate-in flex-1 relative min-h-0;\n  padding-block: var(--calcite-block-padding, var(--calcite-spacing-sm));\n  padding-inline: var(--calcite-block-padding, var(--calcite-spacing-md));\n}\n\n.content-start {\n  @apply text-color-3 flex items-center;\n}\n\n.control-container {\n  @apply m-0 flex;\n  grid-area: control;\n}\n\ncalcite-action-menu {\n  grid-area: menu;\n}\n\n.actions-end {\n  @apply flex items-stretch;\n}\n\n:host([open]) {\n  @apply my-2;\n\n  .header .title .heading {\n    @apply text-color-1;\n  }\n}\n\n@include base-component();\n","import { forceUpdate } from \"@stencil/core\";\nimport { createObserver, ExtendedMutationObserver } from \"./observers\";\n\n/**\n * Defines interface for components with a dynamically changing slot.\n *\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport interface ConditionalSlotComponent {\n  /**\n   * The host element.\n   */\n  readonly el: HTMLElement;\n}\n\nlet mutationObserver: ExtendedMutationObserver;\nconst observerOptions: Pick<Parameters<MutationObserver[\"observe\"]>[1], \"childList\"> = { childList: true };\n\n/**\n * Helper to set up a conditional slot component on connectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function connectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  if (!mutationObserver) {\n    mutationObserver = createObserver(\"mutation\", processMutations);\n  }\n\n  mutationObserver.observe(component.el, observerOptions);\n}\n\n/**\n * Helper to tear down a conditional slot component on disconnectedCallback.\n *\n * @param component\n * @deprecated Use `onSlotchange` event with `slotChangeHasAssignedElement` DOM utility instead.\n *\n * ```\n * <slot onSlotchange={(event) => this.mySlotHasElement = slotChangeHasAssignedElement(event)} />}\n * ```\n */\nexport function disconnectConditionalSlotComponent(component: ConditionalSlotComponent): void {\n  mutationObserver.unobserve(component.el);\n}\n\nfunction processMutations(mutations: MutationRecord[]): void {\n  mutations.forEach(({ target }) => {\n    forceUpdate(target);\n  });\n}\n","export const CSS = {\n  handle: \"handle\",\n  handleSelected: \"handle--selected\",\n};\n\nexport const ICONS = {\n  drag: \"drag\",\n} as const;\n\nexport const SUBSTITUTIONS = {\n  itemLabel: \"{itemLabel}\",\n  position: \"{position}\",\n  total: \"{total}\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { toAriaBoolean } from \"../../utils/dom\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport { connectLocalized, disconnectLocalized } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { HandleMessages } from \"./assets/handle/t9n\";\nimport { HandleChange, HandleNudge } from \"./interfaces\";\nimport { CSS, ICONS, SUBSTITUTIONS } from \"./resources\";\n\n@Component({\n  tag: \"calcite-handle\",\n  styleUrl: \"handle.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Handle implements LoadableComponent, T9nComponent, InteractiveComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, the component is selected.\n   */\n  @Prop({ mutable: true, reflect: true }) selected = false;\n\n  @Watch(\"messages\")\n  @Watch(\"label\")\n  @Watch(\"selected\")\n  @Watch(\"setPosition\")\n  @Watch(\"setSize\")\n  handleAriaTextChange(): void {\n    const message = this.getAriaText(\"live\");\n\n    if (message) {\n      this.calciteInternalAssistiveTextChange.emit({\n        message,\n      });\n    }\n  }\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  /**\n   * Value for the button title attribute.\n   */\n  @Prop({ reflect: true }) dragHandle: string;\n\n  /**\n   * Made into a prop for testing purposes only.\n   *\n   * @internal\n   * @readonly\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: HandleMessages;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setPosition: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() setSize: number;\n\n  /**\n   *\n   *\n   * @internal\n   */\n  @Prop() label: string;\n\n  /**\n   * When `true`, disables unselecting the component when blurred.\n   *\n   * @internal\n   */\n  @Prop() blurUnselectDisabled = false;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<HandleMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectMessages(this);\n    connectLocalized(this);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    await setUpMessages(this);\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectMessages(this);\n    disconnectLocalized(this);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteHandleElement;\n\n  handleButton: HTMLElement;\n\n  @State() effectiveLocale: string;\n\n  @State() defaultMessages: HandleMessages;\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * Fires whenever the component is selected or unselected.\n   *\n   */\n  @Event({ cancelable: false }) calciteHandleChange: EventEmitter<void>;\n\n  /**\n   * Fires when the handle is selected and the up or down arrow key is pressed.\n   */\n  @Event({ cancelable: false }) calciteHandleNudge: EventEmitter<HandleNudge>;\n\n  /**\n   * Fires when the assistive text has changed.\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalAssistiveTextChange: EventEmitter<HandleChange>;\n\n  // --------------------------------------------------------------------------\n  //\n  //  Methods\n  //\n  // --------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    this.handleButton?.focus();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private getTooltip(): string {\n    const { label, messages } = this;\n\n    if (!messages) {\n      return \"\";\n    }\n\n    if (!label) {\n      return messages.dragHandleUntitled;\n    }\n\n    return messages.dragHandle.replace(SUBSTITUTIONS.itemLabel, label);\n  }\n\n  getAriaText(type: \"label\" | \"live\"): string {\n    const { setPosition, setSize, label, messages, selected } = this;\n\n    if (!messages || !label || typeof setSize !== \"number\" || typeof setPosition !== \"number\") {\n      return null;\n    }\n\n    const text =\n      type === \"label\"\n        ? selected\n          ? messages.dragHandleChange\n          : messages.dragHandleIdle\n        : selected\n          ? messages.dragHandleActive\n          : messages.dragHandleCommit;\n\n    const replacePosition = text.replace(SUBSTITUTIONS.position, setPosition.toString());\n    const replaceLabel = replacePosition.replace(SUBSTITUTIONS.itemLabel, label);\n    return replaceLabel.replace(SUBSTITUTIONS.total, setSize.toString());\n  }\n\n  handleKeyDown = (event: KeyboardEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    switch (event.key) {\n      case \" \":\n        this.selected = !this.selected;\n        this.calciteHandleChange.emit();\n        event.preventDefault();\n        break;\n      case \"ArrowUp\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"up\" });\n        break;\n      case \"ArrowDown\":\n        if (!this.selected) {\n          return;\n        }\n        event.preventDefault();\n        this.calciteHandleNudge.emit({ direction: \"down\" });\n        break;\n    }\n  };\n\n  handleBlur = (): void => {\n    if (this.blurUnselectDisabled || this.disabled) {\n      return;\n    }\n\n    if (this.selected) {\n      this.selected = false;\n      this.calciteHandleChange.emit();\n    }\n  };\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    return (\n      // Needs to be a span because of https://github.com/SortableJS/Sortable/issues/1486\n      <span\n        aria-checked={this.disabled ? null : toAriaBoolean(this.selected)}\n        aria-disabled={this.disabled ? toAriaBoolean(this.disabled) : null}\n        aria-label={this.disabled ? null : this.getAriaText(\"label\")}\n        class={{ [CSS.handle]: true, [CSS.handleSelected]: !this.disabled && this.selected }}\n        onBlur={this.handleBlur}\n        onKeyDown={this.handleKeyDown}\n        ref={(el): void => {\n          this.handleButton = el;\n        }}\n        // role of radio is being applied to allow space key to select in screen readers\n        role=\"radio\"\n        tabIndex={this.disabled ? null : 0}\n        title={this.getTooltip()}\n      >\n        <calcite-icon icon={ICONS.drag} scale=\"s\" />\n      </span>\n    );\n  }\n}\n",":host {\n  @apply flex;\n}\n\n.handle {\n  @apply focus-base\n    flex\n    items-center\n    justify-center\n    self-stretch\n    border-none;\n  color: theme(\"borderColor.color.input\");\n  padding-block: theme(\"spacing.3\");\n  padding-inline: theme(\"spacing.1\");\n  line-height: 0;\n\n  calcite-icon {\n    color: inherit;\n  }\n}\n\n:host(:not([disabled])) .handle {\n  @apply cursor-move;\n  &:hover {\n    @apply bg-foreground-2 text-color-1;\n  }\n  &:focus {\n    @apply text-color-1 focus-inset;\n  }\n  &--selected {\n    @apply bg-foreground-3 text-color-1;\n  }\n}\n\n@include disabled();\n\n@include base-component();\n","export const CSS = {\n  scrim: \"scrim\",\n  content: \"content\",\n};\n\nexport const BREAKPOINTS = {\n  s: 72, // Less than 72px.\n  // medium is assumed default.\n  l: 480, // Greater than or equal to 480px.\n};\n","import { Component, Element, h, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { connectLocalized, disconnectLocalized, LocalizedComponent } from \"../../utils/locale\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { slotChangeHasContent } from \"../../utils/dom\";\nimport { CSS, BREAKPOINTS } from \"./resources\";\nimport { ScrimMessages } from \"./assets/scrim/t9n\";\n\n/**\n * @slot - A slot for adding custom content, primarily loading information.\n */\n@Component({\n  tag: \"calcite-scrim\",\n  styleUrl: \"scrim.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Scrim implements LocalizedComponent, T9nComponent {\n  // --------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  // --------------------------------------------------------------------------\n\n  /**\n   * When `true`, a busy indicator is displayed.\n   */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: ScrimMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<ScrimMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  // --------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteScrimElement;\n\n  resizeObserver = createObserver(\"resize\", () => this.handleResize());\n\n  loaderEl: HTMLCalciteLoaderElement;\n\n  @State() loaderScale: Scale;\n\n  @State() defaultMessages: ScrimMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() hasContent = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectLocalized(this);\n    connectMessages(this);\n    this.resizeObserver?.observe(this.el);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    await setUpMessages(this);\n  }\n\n  disconnectedCallback(): void {\n    disconnectLocalized(this);\n    disconnectMessages(this);\n    this.resizeObserver?.disconnect();\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Method\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const { hasContent, loading, messages } = this;\n\n    return (\n      <div class={CSS.scrim}>\n        {loading ? (\n          <calcite-loader\n            label={messages.loading}\n            ref={this.storeLoaderEl}\n            scale={this.loaderScale}\n          />\n        ) : null}\n        <div class={CSS.content} hidden={!hasContent}>\n          <slot onSlotchange={this.handleDefaultSlotChange} />\n        </div>\n      </div>\n    );\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  // --------------------------------------------------------------------------\n\n  private handleDefaultSlotChange = (event: Event): void => {\n    this.hasContent = slotChangeHasContent(event);\n  };\n\n  private storeLoaderEl = (el: HTMLCalciteLoaderElement): void => {\n    this.loaderEl = el;\n    this.handleResize();\n  };\n\n  private getScale(size: number): Scale {\n    if (size < BREAKPOINTS.s) {\n      return \"s\";\n    } else if (size >= BREAKPOINTS.l) {\n      return \"l\";\n    } else {\n      return \"m\";\n    }\n  }\n\n  private handleResize(): void {\n    const { loaderEl, el } = this;\n\n    if (!loaderEl) {\n      return;\n    }\n\n    this.loaderScale = this.getScale(Math.min(el.clientHeight, el.clientWidth) ?? 0);\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-scrim-background: Specifies the background color of the scrim.\n */\n:host {\n  --calcite-scrim-background: var(--calcite-color-transparent-scrim);\n}\n\n:host {\n  @apply absolute\n  inset-0\n  z-overlay\n  flex\n  h-full\n  w-full\n  flex-col\n  items-stretch;\n}\n\n@keyframes calcite-scrim-fade-in {\n  0% {\n    @apply bg-opacity-0;\n  }\n  100% {\n    @apply text-opacity-100;\n  }\n}\n\n.scrim {\n  @apply absolute\n  inset-0\n  flex\n  flex-col\n  content-center\n  items-center\n  justify-center\n  overflow-hidden;\n  animation: calcite-scrim-fade-in var(--calcite-internal-animation-timing-medium) ease-in-out;\n  background-color: var(--calcite-scrim-background, var(--calcite-color-transparent-scrim));\n}\n\n.content {\n  @apply p-4;\n}\n\n@include base-component();\n"],"names":["getRoundRobinIndex","index","total","CSS","SLOTS","tooltip","trigger","ICONS","SUPPORTED_MENU_NAV_KEYS","ActionMenu","proxyCustomElement","HTMLElement","actionElements","guid","concat","menuId","this","menuButtonId","connectMenuButtonEl","open","label","menuButtonEl","slottedMenuButtonEl","defaultMenuButtonEl","disconnectMenuButtonEl","setTooltipReferenceElement","active","setAttribute","toAriaBoolean","id","text","addEventListener","menuButtonClick","menuButtonKeyDown","removeEventListener","setMenuButtonEl","event","actions","target","assignedElements","flatten","filter","el","matches","setDefaultMenuButtonEl","handleCalciteActionClick","setFocus","toggleOpen","updateTooltip","tooltips","tooltipEl","expanded","referenceElement","updateAction","action","activeMenuItemIndex","tabIndex","toggleAttribute","updateActions","forEach","handleDefaultSlotChange","reduce","previousValue","currentValue","push","Array","from","querySelectorAll","disabled","hidden","key","length","isActivationKey","preventDefault","click","handleActionNavigation","isValidKey","currentIndex","Math","max","toggleOpenEnd","value","arguments","undefined","_this","handlePopoverOpen","handlePopoverClose","connectedCallback","componentWillLoad","setUpLoadableComponent","componentDidLoad","setComponentLoaded","disconnectedCallback","expandedHandler","openHandler","calciteActionMenuOpen","emit","activeMenuItemIndexHandler","componentFocusable","focusElement","renderMenuButton","appearance","scale","h","name","onSlotchange","class","icon","ref","textEnabled","renderMenuItems","placement","overlayPositioning","flipPlacements","activeAction","activeDescendantId","autoClose","focusTrapDisabled","offsetDistance","onCalcitePopoverClose","onCalcitePopoverOpen","pointerDisabled","onClick","role","render","Fragment","supportedKeys","find","k","IDS","opened","closed","valid","invalid","Block","openTransitionProp","onHeaderClick","calciteBlockToggle","setTransitionEl","transitionEl","actionsEndSlotChangeHandler","hasEndActions","slotChangeHasAssignedElement","handleContentStartSlotChange","hasContentStart","onToggleOpenCloseComponent","onMessagesChange","focusFirstTabbable","onBeforeOpen","calciteBlockBeforeOpen","onOpen","calciteBlockOpen","onBeforeClose","calciteBlockBeforeClose","onClose","calciteBlockClose","effectiveLocaleChange","updateMessages","effectiveLocale","connectConditionalSlotComponent","connectInteractive","connectLocalized","connectMessages","disconnectInteractive","disconnectLocalized","disconnectMessages","disconnectConditionalSlotComponent","setUpMessages","componentDidRender","updateHostInteraction","renderScrim","loading","defaultSlot","renderLoaderStatusIcon","messages","status","hasSlottedIcon","getSlotted","inline","renderActionsEnd","renderContentStart","renderTitle","heading","headingLevel","description","Heading","level","renderIcon","position","iconFlipRtl","flipRtl","iconValue","iconStart","iconEnd","iconClass","collapsible","toggleLabel","collapse","expand","headerContent","hasControl","hasMenuActions","collapseIcon","headerNode","dragHandle","title","options","Host","InteractiveContainer","mutationObserver","observerOptions","childList","component","createObserver","processMutations","observe","unobserve","mutations","_ref","forceUpdate","SUBSTITUTIONS","Handle","handleKeyDown","selected","calciteHandleChange","calciteHandleNudge","direction","handleBlur","blurUnselectDisabled","handleAriaTextChange","message","getAriaText","calciteInternalAssistiveTextChange","_this$handleButton","handleButton","focus","getTooltip","replace","dragHandleUntitled","type","setPosition","setSize","dragHandleChange","dragHandleIdle","dragHandleActive","dragHandleCommit","toString","onBlur","onKeyDown","BREAKPOINTS","Scrim","resizeObserver","handleResize","hasContent","slotChangeHasContent","storeLoaderEl","loaderEl","_this$resizeObserver","_this$resizeObserver2","disconnect","loaderScale","getScale","size","_Math$min","min","clientHeight","clientWidth"],"sourceRoot":""}