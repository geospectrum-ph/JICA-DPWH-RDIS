{"version":3,"file":"static/js/9007.18183316.chunk.js","mappings":";qKA+CgBA,EACdC,EACAC,EACAC,GAEA,KAAKC,EAAAA,EAAAA,KACH,OAGF,MAAMC,EAIR,SAA6CJ,GAE3C,MAAMK,UAAiCC,OAAOC,iBAQ5CC,WAAAA,CAAYP,GACVQ,MAAMR,GARA,KAAAS,cAGH,GAMHC,KAAKV,SAAWA,EAGlBW,OAAAA,CAAQC,EAAcX,GAGpB,OAFAS,KAAKD,cAAcI,KAAK,CAAED,SAAQX,YAE3BO,MAAMG,QAAQC,EAAQX,GAG/Ba,SAAAA,CAAUF,GACR,MAAMG,EAAqBL,KAAKD,cAAcO,QAAQC,GAAaA,EAASL,SAAWA,IACvFF,KAAKD,cAAgB,GACrBC,KAAKV,SAASQ,MAAMU,cAAeR,MACnCA,KAAKS,aACLJ,EAAmBK,SAASH,GAAaP,KAAKC,QAAQM,EAASL,OAAQK,EAAShB,YAIpF,MAEa,iBAATF,EACIM,OAAOgB,qBACE,aAATtB,EACEK,EACAC,OAAOiB,cAGnB,CA3CmBC,CAAexB,GAChC,OAAO,IAAII,EAASH,EAAiBC,EACvC,6GC1DA,MCsBauB,GAASC,EAAAA,EAAAA,IAAA,cAAAC,EAAAA,2JAwGpB,KAAAC,kBAAmB7B,EAAAA,EAAAA,GAAe,YAAY,IAAMY,KAAKkB,yCAhG2B,0BAGR,oBAI1E,qBAGsC,uBAcpC,WAMJC,iBAAAA,GACEnB,KAAKkB,uBAoBPE,iBAAAA,GACEpB,KAAKiB,kBAAkBhB,QAAQD,KAAKqB,GAAI,CAAEC,WAAW,IACrDtB,KAAKkB,uBAGPK,oBAAAA,GACEvB,KAAKiB,kBAAkBR,aAGzBe,MAAAA,GACE,MAAMC,EAAkC,gBAApBzB,KAAK0B,WACzB,OACEC,EAAAA,EAAAA,GAAA,OAAAC,IAAA,2CACEC,MAAO,CACL,yBAA0BJ,EAC1BK,WAAYL,KAGdE,EAAAA,EAAAA,GAAA,QAAAC,IAAA,8CAYNG,wBAAAA,CAAyBC,GACvBhC,KAAKiC,+BAA+BC,KAAK,CACvCC,uBAAwBH,EAAMI,OAAOD,yBAEvCH,EAAMK,kBAmBAnB,oBAAAA,GACNlB,KAAKqB,GAAGiB,iBAAiB,0BAA0B5B,SAAS6B,IAC1DA,EAAKC,aAAexC,KAAKwC,aACzBD,EAAKE,SAAWzC,KAAKyC,SACrBF,EAAKG,MAAQ1C,KAAK0C,KAAK,IAIzBC,SAASC,cAAc,IAAIC,YAAY,oPD9ItB","sources":["../node_modules/@esri/calcite-components/dist/components/src/utils/observers.ts","../node_modules/@esri/calcite-components/dist/components/src/components/accordion/accordion.scss?tag=calcite-accordion&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/accordion/accordion.tsx"],"sourcesContent":["import { isBrowser } from \"./browser\";\n\nexport interface ExtendedMutationObserver extends MutationObserver {\n  new: () => ExtendedMutationObserver;\n  unobserve: (target: Node) => void;\n}\n\ndeclare const ExtendedMutationObserver: {\n  prototype: ExtendedMutationObserver;\n  new (callback: MutationCallback): ExtendedMutationObserver;\n};\n\ntype ObserverType = \"mutation\" | \"intersection\" | \"resize\";\n\ntype ObserverCallbackType<T extends ObserverType> = T extends \"mutation\"\n  ? MutationCallback\n  : T extends \"intersection\"\n    ? IntersectionObserverCallback\n    : T extends \"resize\"\n      ? ResizeObserverCallback\n      : never;\n\ntype ObserverOptions<T extends ObserverType> = T extends \"intersection\" ? IntersectionObserverInit : never;\n\ntype ObserverClassType<T extends ObserverType> = T extends \"mutation\"\n  ? typeof ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? typeof IntersectionObserver\n    : T extends \"resize\"\n      ? typeof ResizeObserver\n      : never;\n\ntype ObserverInstanceType<T extends ObserverType> = T extends \"mutation\"\n  ? ExtendedMutationObserver\n  : T extends \"intersection\"\n    ? IntersectionObserver\n    : T extends \"resize\"\n      ? ResizeObserver\n      : never;\n\n/**\n * This utility ensures observers are created only for browser contexts.\n *\n * @param type - the type of observer to create\n * @param callback - the observer callback\n * @param options - the observer options\n */\nexport function createObserver<T extends ObserverType>(\n  type: T,\n  callback: ObserverCallbackType<T>,\n  options?: ObserverOptions<T>,\n): ObserverInstanceType<T> | undefined {\n  if (!isBrowser()) {\n    return undefined;\n  }\n\n  const Observer = getObserver<T>(type);\n  return new Observer(callback as any, options) as any;\n}\n\nfunction getObserver<T extends ObserverType>(type: T): ObserverClassType<T> {\n  // based on https://github.com/whatwg/dom/issues/126#issuecomment-1049814948\n  class ExtendedMutationObserver extends window.MutationObserver implements ExtendedMutationObserver {\n    private observedEntry: Array<{\n      target: Node;\n      options?: MutationObserverInit;\n    }> = [];\n\n    private readonly callback: MutationCallback;\n\n    constructor(callback: MutationCallback) {\n      super(callback);\n      this.callback = callback;\n    }\n\n    observe(target: Node, options?: MutationObserverInit): void {\n      this.observedEntry.push({ target, options });\n\n      return super.observe(target, options);\n    }\n\n    unobserve(target: Node): void {\n      const newObservedEntries = this.observedEntry.filter((observed) => observed.target !== target);\n      this.observedEntry = [];\n      this.callback(super.takeRecords(), this);\n      this.disconnect();\n      newObservedEntries.forEach((observed) => this.observe(observed.target, observed.options));\n    }\n  }\n\n  return (function () {\n    return (\n      type === \"intersection\"\n        ? window.IntersectionObserver\n        : type === \"mutation\"\n          ? ExtendedMutationObserver\n          : window.ResizeObserver\n    ) as any;\n  })();\n}\n","// scale variants for child\n:host([scale=\"s\"]) {\n  --calcite-accordion-item-spacing-unit: theme(\"spacing.1\");\n  --calcite-accordion-icon-margin: theme(\"spacing.2\");\n  --calcite-accordion-item-padding: var(--calcite-accordion-item-spacing-unit) theme(\"spacing.2\");\n  @apply text-n2h;\n}\n\n:host([scale=\"m\"]) {\n  --calcite-accordion-item-spacing-unit: theme(\"spacing.2\");\n  --calcite-accordion-icon-margin: theme(\"spacing.3\");\n  --calcite-accordion-item-padding: var(--calcite-accordion-item-spacing-unit) theme(\"spacing.3\");\n  @apply text-n1h;\n}\n\n:host([scale=\"l\"]) {\n  --calcite-accordion-item-spacing-unit: theme(\"spacing.3\");\n  --calcite-accordion-icon-margin: theme(\"spacing.4\");\n  --calcite-accordion-item-padding: var(--calcite-accordion-item-spacing-unit) theme(\"spacing.4\");\n  @apply text-0h;\n}\n\n:host {\n  @apply relative\n    block\n    max-w-full\n    leading-6;\n  --calcite-accordion-item-border: theme(\"borderColor.color.2\");\n  --calcite-accordion-item-background: theme(\"backgroundColor.foreground.1\");\n}\n\n.accordion--transparent {\n  --calcite-accordion-item-border: transparent;\n  --calcite-accordion-item-background: transparent;\n}\n\n.accordion {\n  @apply border border-solid border-color-2 border-b-0;\n}\n\n@include base-component();\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  h,\n  Listen,\n  Prop,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport { Appearance, Position, IconType, Scale, SelectionMode } from \"../interfaces\";\nimport { createObserver } from \"../../utils/observers\";\nimport { RequestedItem } from \"./interfaces\";\n/**\n * @slot - A slot for adding `calcite-accordion-item`s. `calcite-accordion` cannot be nested, however `calcite-accordion-item`s can.\n */\n@Component({\n  tag: \"calcite-accordion\",\n  styleUrl: \"accordion.scss\",\n  shadow: true,\n})\nexport class Accordion {\n  //--------------------------------------------------------------------------\n  //\n  //  Public Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the appearance of the component. */\n  @Prop({ reflect: true }) appearance: Extract<\"solid\" | \"transparent\", Appearance> = \"solid\";\n\n  /** Specifies the placement of the icon in the header. */\n  @Prop({ reflect: true }) iconPosition: Extract<\"start\" | \"end\", Position> = \"end\";\n\n  /** Specifies the type of the icon in the header. */\n  @Prop({ reflect: true }) iconType: Extract<\"chevron\" | \"caret\" | \"plus-minus\", IconType> =\n    \"chevron\";\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /**\n   * Specifies the selection mode of the component, where:\n   *\n   * `\"multiple\"` allows any number of selections,\n   *\n   * `\"single\"` allows only one selection, and\n   *\n   * `\"single-persist\"` allows one selection and prevents de-selection.\n   */\n  @Prop({ reflect: true }) selectionMode: Extract<\n    \"single\" | \"single-persist\" | \"multiple\",\n    SelectionMode\n  > = \"multiple\";\n\n  @Watch(\"iconPosition\")\n  @Watch(\"iconType\")\n  @Watch(\"scale\")\n  @Watch(\"selectionMode\")\n  handlePropsChange(): void {\n    this.updateAccordionItems();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) private calciteInternalAccordionChange: EventEmitter<RequestedItem>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.mutationObserver?.observe(this.el, { childList: true });\n    this.updateAccordionItems();\n  }\n\n  disconnectedCallback(): void {\n    this.mutationObserver?.disconnect();\n  }\n\n  render(): VNode {\n    const transparent = this.appearance === \"transparent\";\n    return (\n      <div\n        class={{\n          \"accordion--transparent\": transparent,\n          accordion: !transparent,\n        }}\n      >\n        <slot />\n      </div>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Event Listeners\n  //\n  //--------------------------------------------------------------------------\n\n  @Listen(\"calciteInternalAccordionItemSelect\")\n  updateActiveItemOnChange(event: CustomEvent): void {\n    this.calciteInternalAccordionChange.emit({\n      requestedAccordionItem: event.detail.requestedAccordionItem,\n    });\n    event.stopPropagation();\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteAccordionElement;\n\n  mutationObserver = createObserver(\"mutation\", () => this.updateAccordionItems());\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private updateAccordionItems(): void {\n    this.el.querySelectorAll(\"calcite-accordion-item\").forEach((item) => {\n      item.iconPosition = this.iconPosition;\n      item.iconType = this.iconType;\n      item.scale = this.scale;\n    });\n\n    // sync props on items across shadow DOM\n    document.dispatchEvent(new CustomEvent(\"calciteInternalAccordionItemsSync\"));\n  }\n}\n"],"names":["createObserver","type","callback","options","isBrowser","Observer","ExtendedMutationObserver","window","MutationObserver","constructor","super","observedEntry","this","observe","target","push","unobserve","newObservedEntries","filter","observed","takeRecords","disconnect","forEach","IntersectionObserver","ResizeObserver","getObserver","Accordion","proxyCustomElement","HTMLElement","mutationObserver","updateAccordionItems","handlePropsChange","connectedCallback","el","childList","disconnectedCallback","render","transparent","appearance","h","key","class","accordion","updateActiveItemOnChange","event","calciteInternalAccordionChange","emit","requestedAccordionItem","detail","stopPropagation","querySelectorAll","item","iconPosition","iconType","scale","document","dispatchEvent","CustomEvent"],"sourceRoot":""}