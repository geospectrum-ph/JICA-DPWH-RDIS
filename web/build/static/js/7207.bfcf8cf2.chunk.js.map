{"version":3,"file":"static/js/7207.bfcf8cf2.chunk.js","mappings":"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","sources":["../node_modules/@esri/calcite-components/dist/components/src/components/functional/Validation.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/icon/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/utils.ts","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.scss?tag=calcite-icon&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/icon/icon.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/interfaces.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input-message/input-message.scss?tag=calcite-input-message&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/input/common/input.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input/resources.ts","../node_modules/@esri/calcite-components/dist/components/src/components/input/input.tsx","../node_modules/@esri/calcite-components/dist/components/src/components/input/input.scss?tag=calcite-input&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/progress/progress.scss?tag=calcite-progress&encapsulation=shadow","../node_modules/@esri/calcite-components/dist/components/src/components/progress/progress.tsx"],"sourcesContent":["import { FunctionalComponent, h } from \"@stencil/core\";\nimport { JSXBase } from \"@stencil/core/internal\";\nimport { Scale, Status } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\n\ninterface ValidationProps extends JSXBase.HTMLAttributes {\n  scale: Scale;\n  status: Status;\n  icon?: IconNameOrString | boolean;\n  message: string;\n}\n\nexport const CSS = {\n  validationContainer: \"validation-container\",\n};\n\nexport const Validation: FunctionalComponent<ValidationProps> = ({\n  scale,\n  status,\n  icon,\n  message,\n}) => (\n  <div class={CSS.validationContainer}>\n    <calcite-input-message icon={icon} scale={scale} status={status}>\n      {message}\n    </calcite-input-message>\n  </div>\n);\n","export const CSS = {\n  icon: \"icon\",\n  flipRtl: \"flip-rtl\",\n};\n","import { CalciteIconPath } from \"@esri/calcite-ui-icons\";\nimport { getAssetPath } from \"@stencil/core\";\nimport { Scale } from \"../interfaces\";\nimport { IconNameOrString } from \"./interfaces\";\n\nexport interface FetchIconProps {\n  icon: IconNameOrString;\n  scale: Scale;\n}\n\n/**\n * Icon data cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const iconCache: Record<string, CalciteIconPath> = {};\n\n/**\n * Icon request cache.\n * Exported for testing purposes.\n *\n * @private\n */\nexport const requestCache: Record<string, Promise<CalciteIconPath>> = {};\n\nexport const scaleToPx: Record<Scale, number> = {\n  s: 16,\n  m: 24,\n  l: 32,\n};\n\nfunction generateIconId({ icon, scale }: FetchIconProps): string {\n  const size = scaleToPx[scale];\n  const name = normalizeIconName(icon);\n  const filled = name.charAt(name.length - 1) === \"F\";\n  const iconName = filled ? name.substring(0, name.length - 1) : name;\n\n  return `${iconName}${size}${filled ? \"F\" : \"\"}`;\n}\n\nexport async function fetchIcon(props: FetchIconProps): Promise<CalciteIconPath> {\n  const cachedIconKey = generateIconId(props);\n  const cachedIconData = getCachedIconDataByKey(cachedIconKey);\n\n  if (cachedIconData) {\n    return cachedIconData;\n  }\n\n  if (!requestCache[cachedIconKey]) {\n    requestCache[cachedIconKey] = fetch(getAssetPath(`./assets/icon/${cachedIconKey}.json`))\n      .then((resp) => resp.json())\n      .catch(() => {\n        console.error(`\"${cachedIconKey}\" is not a valid calcite-ui-icon name`);\n        return \"\";\n      });\n  }\n\n  const path = await requestCache[cachedIconKey];\n  iconCache[cachedIconKey] = path;\n\n  return path;\n}\n\n/**\n * Util to retrieve cached icon data based on icon name and scale.\n *\n * @param props – icon properties\n */\nexport function getCachedIconData(props: FetchIconProps): CalciteIconPath {\n  return getCachedIconDataByKey(generateIconId(props));\n}\n\nfunction getCachedIconDataByKey(id: string): CalciteIconPath {\n  return iconCache[id];\n}\n\n/**\n * Normalize the icon name to match the path data module exports.\n * Exported for testing purposes.\n *\n * @param name – an icon name that can be either kebab or camel-cased\n * @private\n */\nexport function normalizeIconName(name: string): string {\n  const numberLeadingName = !isNaN(Number(name.charAt(0)));\n  const parts = name.split(\"-\");\n  const kebabCased = parts.length > 0;\n\n  if (kebabCased) {\n    const firstNonDigitInPartPattern = /[a-z]/i;\n\n    name = parts\n      .map((part, partIndex) => {\n        return part.replace(firstNonDigitInPartPattern, function replacer(match, offset) {\n          const isFirstCharInName = partIndex === 0 && offset === 0;\n\n          if (isFirstCharInName) {\n            return match;\n          }\n\n          return match.toUpperCase();\n        });\n      })\n      .join(\"\");\n  }\n\n  return numberLeadingName ? `i${name}` : name;\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-ui-icon-color: The component's color. Defaults to `currentColor`.\n */\n\n:host {\n  @apply text-color-icon inline-flex;\n}\n\n$icon-size-s: 16px;\n$icon-size-m: 24px;\n$icon-size-l: 32px;\n\n:host([scale=\"s\"]) {\n  inline-size: $icon-size-s;\n  block-size: $icon-size-s;\n  min-inline-size: $icon-size-s;\n  min-block-size: $icon-size-s;\n}\n\n:host([scale=\"m\"]) {\n  inline-size: $icon-size-m;\n  block-size: $icon-size-m;\n  min-inline-size: $icon-size-m;\n  min-block-size: $icon-size-m;\n}\n\n:host([scale=\"l\"]) {\n  inline-size: $icon-size-l;\n  block-size: $icon-size-l;\n  min-inline-size: $icon-size-l;\n  min-block-size: $icon-size-l;\n}\n\n.flip-rtl {\n  transform: scaleX(-1);\n}\n\n.svg {\n  @apply block;\n}\n\n@include base-component();\n","import { CalciteIconPath, CalciteMultiPathEntry } from \"@esri/calcite-ui-icons\";\nimport { Component, Element, h, Host, Prop, State, VNode, Watch } from \"@stencil/core\";\nimport { getElementDir, toAriaBoolean } from \"../../utils/dom\";\nimport { createObserver } from \"../../utils/observers\";\nimport { Scale } from \"../interfaces\";\nimport { isBrowser } from \"../../utils/browser\";\nimport { CSS } from \"./resources\";\nimport { fetchIcon, getCachedIconData, scaleToPx } from \"./utils\";\nimport { IconNameOrString } from \"./interfaces\";\n\n@Component({\n  tag: \"calcite-icon\",\n  styleUrl: \"icon.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Icon {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * Displays a specific icon.\n   *\n   * @see [Icons](https://esri.github.io/calcite-ui-icons)\n   */\n  @Prop({\n    reflect: true,\n  })\n  icon: IconNameOrString = null;\n\n  /**\n   * When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`).\n   */\n  @Prop({\n    reflect: true,\n  })\n  flipRtl = false;\n\n  /**\n   * Specifies the size of the component.\n   */\n  @Prop({\n    reflect: true,\n  })\n  scale: Scale = \"m\";\n\n  /**\n   * Accessible name for the component.\n   *\n   * It is recommended to set this value if your icon is semantic.\n   */\n  @Prop()\n  textLabel: string;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    if (!this.visible) {\n      this.waitUntilVisible(() => {\n        this.visible = true;\n        this.loadIconPathData();\n      });\n    }\n  }\n\n  disconnectedCallback(): void {\n    this.intersectionObserver?.disconnect();\n    this.intersectionObserver = null;\n  }\n\n  render(): VNode {\n    const { el, flipRtl, pathData, scale, textLabel } = this;\n    const dir = getElementDir(el);\n    const size = scaleToPx[scale];\n    const semantic = !!textLabel;\n    const paths = [].concat(pathData || \"\");\n    return (\n      <Host\n        aria-hidden={toAriaBoolean(!semantic)}\n        aria-label={semantic ? textLabel : null}\n        role={semantic ? \"img\" : null}\n      >\n        <svg\n          aria-hidden=\"true\"\n          class={{\n            [CSS.flipRtl]: dir === \"rtl\" && flipRtl,\n            svg: true,\n          }}\n          fill=\"currentColor\"\n          height=\"100%\"\n          viewBox={`0 0 ${size} ${size}`}\n          width=\"100%\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          {paths.map((path: string | CalciteMultiPathEntry) =>\n            typeof path === \"string\" ? (\n              <path d={path} />\n            ) : (\n              <path d={path.d} opacity={\"opacity\" in path ? path.opacity : 1} />\n            ),\n          )}\n        </svg>\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteIconElement;\n\n  private intersectionObserver: IntersectionObserver;\n\n  @State()\n  private pathData: CalciteIconPath;\n\n  @State()\n  private visible = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"icon\")\n  @Watch(\"scale\")\n  private async loadIconPathData(): Promise<void> {\n    const { icon, scale, visible } = this;\n\n    if (!isBrowser() || !icon || !visible) {\n      return;\n    }\n\n    const fetchIconProps = { icon, scale };\n    const pathData = getCachedIconData(fetchIconProps) || (await fetchIcon(fetchIconProps));\n\n    // While the fetchIcon method is awaiting response, the icon requested can change. This check is to verify the response received belongs to the current icon.\n    if (icon !== this.icon) {\n      return;\n    }\n\n    this.pathData = pathData;\n  }\n\n  private waitUntilVisible(callback: () => void): void {\n    this.intersectionObserver = createObserver(\n      \"intersection\",\n      (entries) => {\n        entries.forEach((entry) => {\n          if (entry.isIntersecting) {\n            this.intersectionObserver.disconnect();\n            this.intersectionObserver = null;\n            callback();\n          }\n        });\n      },\n      { rootMargin: \"50px\" },\n    );\n\n    if (!this.intersectionObserver) {\n      callback();\n      return;\n    }\n\n    this.intersectionObserver.observe(this.el);\n  }\n}\n","export const StatusIconDefaults = {\n  valid: \"check-circle\",\n  invalid: \"exclamation-mark-triangle\",\n  idle: \"information\",\n} as const;\n","import { Component, Element, h, Host, Prop, VNode, Watch } from \"@stencil/core\";\nimport { setRequestedIcon } from \"../../utils/dom\";\nimport { Scale, Status } from \"../interfaces\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { StatusIconDefaults } from \"./interfaces\";\n\n/**\n * @slot - A slot for adding text.\n */\n@Component({\n  tag: \"calcite-input-message\",\n  styleUrl: \"input-message.scss\",\n  shadow: true,\n})\nexport class InputMessage {\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies an icon to display. */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  @Watch(\"status\")\n  @Watch(\"icon\")\n  handleIconEl(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    this.requestedIcon = setRequestedIcon(StatusIconDefaults, this.icon, this.status);\n  }\n\n  render(): VNode {\n    const hidden = this.el.hidden;\n    return (\n      <Host calcite-hydrated-hidden={hidden}>\n        {this.renderIcon(this.requestedIcon)}\n        <slot />\n      </Host>\n    );\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private State/Props\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputMessageElement;\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  private renderIcon(iconName: IconNameOrString): VNode {\n    if (iconName) {\n      return (\n        <calcite-icon\n          class=\"calcite-input-message-icon\"\n          flipRtl={this.iconFlipRtl}\n          icon={iconName}\n          scale=\"s\"\n        />\n      );\n    }\n  }\n}\n","/**\n * CSS Custom Properties\n *\n * These properties can be overridden using the component's tag as selector.\n *\n * @prop --calcite-input-message-spacing-value: The top margin spacing above the component.\n */\n\n:host {\n  @apply text-color-1 transition-default box-border flex h-auto w-full items-center font-medium opacity-100;\n  --calcite-input-message-spacing-value: theme(\"spacing.1\");\n  margin-block-start: var(--calcite-input-message-spacing-value);\n}\n\n.calcite-input-message-icon {\n  @apply transition-default pointer-events-none inline-flex flex-shrink-0;\n  margin-inline-end: theme(\"margin.2\");\n}\n\n:host([status=\"invalid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-danger);\n}\n\n:host([status=\"warning\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-warning);\n}\n\n:host([status=\"valid\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-status-success);\n}\n\n:host([status=\"idle\"]) .calcite-input-message-icon {\n  color: var(--calcite-color-brand);\n}\n\n:host([scale=\"s\"]) {\n  @apply text-n3h;\n}\n\n:host([scale=\"m\"]) {\n  @apply text-n2h;\n}\n\n:host([scale=\"l\"]) {\n  @apply text-n1h;\n}\n\n@include base-component();\n","export type InputComponent = NumericInputComponent | TextualInputComponent | DateTimeInputComponent;\n\nexport interface DateTimeInputComponent {\n  min: string;\n  max: string;\n}\n\nexport interface NumericInputComponent {\n  min: number;\n  max: number;\n  step: number | \"any\";\n}\n\nexport interface TextualInputComponent {\n  pattern?: string;\n  minLength: number;\n  maxLength: number;\n}\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxStepTypes = [\"date\", \"datetime-local\", \"month\", \"number\", \"range\", \"time\", \"week\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const patternTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"url\"];\n\n/**\n * Exported for testing purposes only\n */\nexport const minMaxLengthTypes = [\"email\", \"password\", \"search\", \"tel\", \"text\", \"textarea\", \"url\"];\n\nfunction updateConstraintValidation(\n  inputComponent: InputComponent,\n  input: HTMLInputElement,\n  propName: string,\n  matchesType: boolean,\n): void {\n  const attributeName = propName.toLowerCase();\n  const value = inputComponent[propName];\n\n  if (matchesType && value != null) {\n    input.setAttribute(attributeName, `${value}`);\n  } else {\n    // we remove the attribute to ensure validation-constraints are properly reset\n    input.removeAttribute(attributeName);\n  }\n}\n\n/**\n * Synchronizes the hidden form input with the validation-related input properties.\n *\n * Note: loss of precision is expected due to the hidden input's value and validation-constraint props being strings.\n *\n * @param type - The input type.\n * @param inputComponent\n * @param hiddenFormInput\n */\nexport function syncHiddenFormInput(\n  type: HTMLInputElement[\"type\"] | \"textarea\",\n  inputComponent: InputComponent,\n  hiddenFormInput: HTMLInputElement,\n): void {\n  hiddenFormInput.type = type === \"textarea\" ? \"text\" : type;\n\n  const isMinMaxStepType = minMaxStepTypes.includes(type);\n  const numericInputComponent = inputComponent as NumericInputComponent;\n\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"min\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"max\", isMinMaxStepType);\n  updateConstraintValidation(numericInputComponent, hiddenFormInput, \"step\", isMinMaxStepType);\n\n  const isMinMaxLengthType = minMaxLengthTypes.includes(type);\n\n  const textualInputComponent = inputComponent as TextualInputComponent;\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"minLength\", isMinMaxLengthType);\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"maxLength\", isMinMaxLengthType);\n\n  const isPatternType = patternTypes.includes(type);\n\n  updateConstraintValidation(textualInputComponent, hiddenFormInput, \"pattern\", isPatternType);\n}\n","export const CSS = {\n  loader: \"loader\",\n  clearButton: \"clear-button\",\n  editingEnabled: \"editing-enabled\",\n  inlineChild: \"inline-child\",\n  inputIcon: \"icon\",\n  prefix: \"prefix\",\n  suffix: \"suffix\",\n  numberButtonWrapper: \"number-button-wrapper\",\n  buttonItemHorizontal: \"number-button-item--horizontal\",\n  wrapper: \"element-wrapper\",\n  inputWrapper: \"wrapper\",\n  actionWrapper: \"action-wrapper\",\n  resizeIconWrapper: \"resize-icon-wrapper\",\n  numberButtonItem: \"number-button-item\",\n};\n\nexport const INPUT_TYPE_ICONS = {\n  tel: \"phone\",\n  password: \"lock\",\n  email: \"email-address\",\n  date: \"calendar\",\n  time: \"clock\",\n  search: \"search\",\n} as const;\n\nexport const SLOTS = {\n  action: \"action\",\n};\n","import {\n  Component,\n  Element,\n  Event,\n  EventEmitter,\n  forceUpdate,\n  h,\n  Host,\n  Method,\n  Prop,\n  State,\n  VNode,\n  Watch,\n} from \"@stencil/core\";\nimport {\n  getElementDir,\n  getSlotted,\n  isPrimaryPointerButton,\n  setRequestedIcon,\n} from \"../../utils/dom\";\nimport { Scale, Status, Alignment } from \"../interfaces\";\nimport {\n  connectForm,\n  disconnectForm,\n  FormComponent,\n  HiddenFormInputSlot,\n  internalHiddenInputInputEvent,\n  MutableValidityState,\n  submitForm,\n} from \"../../utils/form\";\nimport {\n  connectInteractive,\n  disconnectInteractive,\n  InteractiveComponent,\n  InteractiveContainer,\n  updateHostInteraction,\n} from \"../../utils/interactive\";\nimport { numberKeys } from \"../../utils/key\";\nimport { connectLabel, disconnectLabel, getLabelText, LabelableComponent } from \"../../utils/label\";\nimport {\n  componentFocusable,\n  LoadableComponent,\n  setComponentLoaded,\n  setUpLoadableComponent,\n} from \"../../utils/loadable\";\nimport {\n  connectLocalized,\n  disconnectLocalized,\n  LocalizedComponent,\n  NumberingSystem,\n  numberStringFormatter,\n} from \"../../utils/locale\";\nimport {\n  addLocalizedTrailingDecimalZeros,\n  BigDecimal,\n  isValidNumber,\n  parseNumberString,\n  sanitizeNumberString,\n} from \"../../utils/number\";\nimport { createObserver } from \"../../utils/observers\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\nimport {\n  connectMessages,\n  disconnectMessages,\n  setUpMessages,\n  T9nComponent,\n  updateMessages,\n} from \"../../utils/t9n\";\nimport { getIconScale } from \"../../utils/component\";\nimport { Validation } from \"../functional/Validation\";\nimport { IconNameOrString } from \"../icon/interfaces\";\nimport { InputMessages } from \"./assets/input/t9n\";\nimport { InputPlacement, NumberNudgeDirection, SetValueOrigin } from \"./interfaces\";\nimport { CSS, INPUT_TYPE_ICONS, SLOTS } from \"./resources\";\nimport { NumericInputComponent, syncHiddenFormInput, TextualInputComponent } from \"./common/input\";\n\n/**\n * @slot action - A slot for positioning a `calcite-button` next to the component.\n */\n@Component({\n  tag: \"calcite-input\",\n  styleUrl: \"input.scss\",\n  shadow: true,\n  assetsDirs: [\"assets\"],\n})\nexport class Input\n  implements\n    LabelableComponent,\n    FormComponent,\n    InteractiveComponent,\n    T9nComponent,\n    LocalizedComponent,\n    LoadableComponent,\n    NumericInputComponent,\n    TextualInputComponent\n{\n  //--------------------------------------------------------------------------\n  //\n  //  Global attributes\n  //\n  //--------------------------------------------------------------------------\n\n  @Watch(\"autofocus\")\n  @Watch(\"enterkeyhint\")\n  @Watch(\"inputmode\")\n  handleGlobalAttributesChanged(): void {\n    forceUpdate(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Properties\n  //\n  //--------------------------------------------------------------------------\n\n  /** Specifies the text alignment of the component's value. */\n  @Prop({ reflect: true }) alignment: Extract<\"start\" | \"end\", Alignment> = \"start\";\n\n  /**\n   * Adds global prop, missing from Stencil's `HTMLElement` type, see https://github.com/ionic-team/stencil/issues/5726\n   *\n   * @ignore\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() autofocus: boolean;\n\n  /**\n   * When `true`, a clear button is displayed when the component has a value. The clear button shows by default for `\"search\"`, `\"time\"`, and `\"date\"` types, and will not display for the `\"textarea\"` type.\n   */\n  @Prop({ reflect: true }) clearable = false;\n\n  /**\n   * When `true`, interaction is prevented and the component is displayed with lower opacity.\n   *\n   * @mdn [disabled](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/disabled)\n   */\n  @Prop({ reflect: true }) disabled = false;\n\n  @Watch(\"disabled\")\n  disabledWatcher(): void {\n    this.setDisabledAction();\n  }\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() enterKeyHint: string;\n\n  /**\n   * The `id` of the form that will be associated with the component.\n   *\n   * When not set, the component will be associated with its ancestor form element, if any.\n   */\n  @Prop({ reflect: true }) form: string;\n\n  /**\n   * When `true`, number values are displayed with a group separator corresponding to the language and country format.\n   */\n  @Prop({ reflect: true }) groupSeparator = false;\n\n  /**\n   * When `true`, shows a default recommended icon. Alternatively, pass a Calcite UI Icon name to display a specific icon.\n   */\n  @Prop({ reflect: true }) icon: IconNameOrString | boolean;\n\n  /** When `true`, the icon will be flipped when the element direction is right-to-left (`\"rtl\"`). */\n  @Prop({ reflect: true }) iconFlipRtl = false;\n\n  /**\n   * Adds support for kebab-cased attribute, removed in https://github.com/Esri/calcite-design-system/pull/9123\n   *\n   * @futureBreaking kebab-cased attribute will not be supported in a future release\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/reserved-member-names\n  @Prop() inputMode: string;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** When `true`, a busy indicator is displayed. */\n  @Prop({ reflect: true }) loading = false;\n\n  /**\n   * Specifies the Unicode numeral system used by the component for localization.\n   *\n   */\n  @Prop({ reflect: true }) numberingSystem: NumberingSystem;\n\n  /**\n   * When `true`, uses locale formatting for numbers.\n   *\n   * @internal\n   */\n  @Prop() localeFormat = false;\n\n  /**\n   * Specifies the maximum value for type \"number\".\n   *\n   * @mdn [max](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#max)\n   */\n  @Prop({ reflect: true }) max: number;\n\n  /** watcher to update number-to-string for max */\n  @Watch(\"max\")\n  maxWatcher(): void {\n    this.maxString = this.max?.toString() || null;\n  }\n\n  /**\n   * Specifies the minimum value for `type=\"number\"`.\n   *\n   * @mdn [min](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#min)\n   */\n  @Prop({ reflect: true }) min: number;\n\n  /** watcher to update number-to-string for min */\n  @Watch(\"min\")\n  minWatcher(): void {\n    this.minString = this.min?.toString() || null;\n  }\n\n  /**\n   * Specifies the maximum length of text for the component's value.\n   *\n   * @mdn [maxlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#maxlength)\n   */\n  @Prop({ reflect: true }) maxLength: number;\n\n  /**\n   * Specifies the minimum length of text for the component's value.\n   *\n   * @mdn [minlength](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#minlength)\n   */\n  @Prop({ reflect: true }) minLength: number;\n\n  /** Specifies the validation message to display under the component. */\n  @Prop() validationMessage: string;\n\n  /** Specifies the validation icon to display under the component. */\n  @Prop({ reflect: true }) validationIcon: IconNameOrString | boolean;\n\n  /**\n   * The current validation state of the component.\n   *\n   * @readonly\n   * @mdn [ValidityState](https://developer.mozilla.org/en-US/docs/Web/API/ValidityState)\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated in form util when syncing hidden input\n  @Prop({ mutable: true }) validity: MutableValidityState = {\n    valid: false,\n    badInput: false,\n    customError: false,\n    patternMismatch: false,\n    rangeOverflow: false,\n    rangeUnderflow: false,\n    stepMismatch: false,\n    tooLong: false,\n    tooShort: false,\n    typeMismatch: false,\n    valueMissing: false,\n  };\n\n  /**\n   * Specifies the name of the component.\n   *\n   * Required to pass the component's `value` on form submission.\n   *\n   * @mdn [name](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#name)\n   */\n  @Prop({ reflect: true }) name: string;\n\n  /** Specifies the placement of the buttons for `type=\"number\"`. */\n  @Prop({ reflect: true }) numberButtonType: InputPlacement = \"vertical\";\n\n  /**\n   * Specifies placeholder text for the component.\n   *\n   * @mdn [placeholder](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#placeholder)\n   */\n  @Prop() placeholder: string;\n\n  /** Adds text to the start of the component. */\n  @Prop() prefixText: string;\n\n  /**\n   * When `true`, the component's value can be read, but cannot be modified.\n   *\n   * @mdn [readOnly](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/readonly)\n   */\n  @Prop({ reflect: true }) readOnly = false;\n\n  /** When `true`, the component must have a value in order for the form to submit. */\n  @Prop({ reflect: true }) required = false;\n\n  /** Specifies the size of the component. */\n  @Prop({ reflect: true }) scale: Scale = \"m\";\n\n  /** Specifies the status of the input field, which determines message and icons. */\n  @Prop({ reflect: true }) status: Status = \"idle\";\n\n  /**\n   * Specifies the granularity the component's `value` must adhere to.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/step)\n   */\n  @Prop({ reflect: true }) step: number | \"any\";\n\n  /**\n   * Specifies the type of content to autocomplete, for use in forms.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/autocomplete)\n   */\n  @Prop() autocomplete: string;\n\n  /**\n   * Specifies a regex pattern the component's `value` must match for validation.\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)\n   */\n  @Prop() pattern: string;\n\n  /**\n   * Specifies a comma separated list of unique file type specifiers for limiting accepted file types.\n   * This property only has an effect when `type` is \"file\".\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/pattern)\n   */\n  @Prop() accept: string;\n\n  /**\n   * When `true`, the component can accept more than one value.\n   * This property only has an effect when `type` is \"email\" or \"file\".\n   * Read the native attribute's documentation on MDN for more info.\n   *\n   * @mdn [step](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes/multiple)\n   */\n  @Prop() multiple = false;\n\n  /** Adds text to the end of the component. */\n  @Prop() suffixText: string;\n\n  /**\n   * @internal\n   */\n  @Prop({ mutable: true, reflect: true }) editingEnabled = false;\n\n  /**\n   * Specifies the component type.\n   *\n   * Note that the following `type`s add type-specific icons by default: `\"date\"`, `\"email\"`, `\"password\"`, `\"search\"`, `\"tel\"`, `\"time\"`.\n   */\n  @Prop({ reflect: true }) type:\n    | \"color\"\n    | \"date\"\n    | \"datetime-local\"\n    | \"email\"\n    | \"file\"\n    | \"image\"\n    | \"month\"\n    | \"number\"\n    | \"password\"\n    | \"search\"\n    | \"tel\"\n    | \"text\"\n    | \"textarea\"\n    | \"time\"\n    | \"url\"\n    | \"week\" = \"text\";\n\n  /** The component's value. */\n  @Prop({ mutable: true }) value = \"\";\n\n  /**\n   * When `type` is `\"file\"`, specifies the component's selected files.\n   *\n   * @mdn https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/files\n   */\n  @Prop() files: FileList | undefined;\n\n  /**\n   * Made into a prop for testing purposes only\n   *\n   * @internal\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messages: InputMessages;\n\n  /**\n   * Use this property to override individual strings used by the component.\n   */\n  // eslint-disable-next-line @stencil-community/strict-mutable -- updated by t9n module\n  @Prop({ mutable: true }) messageOverrides: Partial<InputMessages>;\n\n  @Watch(\"messageOverrides\")\n  onMessagesChange(): void {\n    /* wired up by t9n util */\n  }\n\n  @Watch(\"value\")\n  valueWatcher(newValue: string, previousValue: string): void {\n    if (!this.userChangedValue) {\n      if (this.type === \"number\" && (newValue === \"Infinity\" || newValue === \"-Infinity\")) {\n        this.displayedValue = newValue;\n        this.previousEmittedValue = newValue;\n        return;\n      }\n\n      this.setValue({\n        origin: \"direct\",\n        previousValue,\n        value:\n          newValue == null || newValue == \"\"\n            ? \"\"\n            : this.type === \"number\"\n              ? isValidNumber(newValue)\n                ? newValue\n                : this.previousValue || \"\"\n              : newValue,\n      });\n      this.warnAboutInvalidNumberValue(newValue);\n    }\n    this.userChangedValue = false;\n  }\n\n  @Watch(\"icon\")\n  @Watch(\"type\")\n  updateRequestedIcon(): void {\n    this.requestedIcon = setRequestedIcon(INPUT_TYPE_ICONS, this.icon, this.type);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Properties\n  //\n  //--------------------------------------------------------------------------\n\n  @Element() el: HTMLCalciteInputElement;\n\n  labelEl: HTMLCalciteLabelElement;\n\n  formEl: HTMLFormElement;\n\n  defaultValue: Input[\"value\"];\n\n  inlineEditableEl: HTMLCalciteInlineEditableElement;\n\n  /** keep track of the rendered child type */\n  private childEl?: HTMLInputElement | HTMLTextAreaElement;\n\n  /** keep track of the rendered child type */\n  private childElType?: \"input\" | \"textarea\" = \"input\";\n\n  /** number text input element for locale */\n  private childNumberEl?: HTMLInputElement;\n\n  get isClearable(): boolean {\n    return !this.isTextarea && (this.clearable || this.type === \"search\") && this.value?.length > 0;\n  }\n\n  get isTextarea(): boolean {\n    return this.childElType === \"textarea\";\n  }\n\n  private minString?: string;\n\n  private maxString?: string;\n\n  private previousEmittedValue: string;\n\n  private previousValue: string;\n\n  private previousValueOrigin: SetValueOrigin = \"initial\";\n\n  /** the computed icon to render */\n  private requestedIcon?: IconNameOrString;\n\n  private nudgeNumberValueIntervalId: number;\n\n  mutationObserver = createObserver(\"mutation\", () => this.setDisabledAction());\n\n  private userChangedValue = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  State\n  //\n  //--------------------------------------------------------------------------\n\n  @State() defaultMessages: InputMessages;\n\n  @State() effectiveLocale = \"\";\n\n  @Watch(\"effectiveLocale\")\n  effectiveLocaleChange(): void {\n    updateMessages(this, this.effectiveLocale);\n  }\n\n  @State() displayedValue: string;\n\n  @State() slottedActionElDisabledInternally = false;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Lifecycle\n  //\n  //--------------------------------------------------------------------------\n\n  connectedCallback(): void {\n    connectInteractive(this);\n    connectLocalized(this);\n    connectMessages(this);\n\n    this.inlineEditableEl = this.el.closest(\"calcite-inline-editable\");\n    if (this.inlineEditableEl) {\n      this.editingEnabled = this.inlineEditableEl.editingEnabled || false;\n    }\n    connectLabel(this);\n    connectForm(this);\n\n    this.mutationObserver?.observe(this.el, { childList: true });\n\n    this.setDisabledAction();\n    this.el.addEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  disconnectedCallback(): void {\n    disconnectInteractive(this);\n    disconnectLabel(this);\n    disconnectForm(this);\n    disconnectLocalized(this);\n    disconnectMessages(this);\n\n    this.mutationObserver?.disconnect();\n    this.el.removeEventListener(internalHiddenInputInputEvent, this.onHiddenFormInputInput);\n  }\n\n  async componentWillLoad(): Promise<void> {\n    setUpLoadableComponent(this);\n    this.childElType = this.type === \"textarea\" ? \"textarea\" : \"input\";\n    this.maxString = this.max?.toString();\n    this.minString = this.min?.toString();\n    this.requestedIcon = setRequestedIcon(INPUT_TYPE_ICONS, this.icon, this.type);\n    await setUpMessages(this);\n\n    this.setPreviousEmittedValue(this.value);\n    this.setPreviousValue(this.value);\n\n    if (this.type === \"number\") {\n      if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n        this.displayedValue = this.value;\n        this.previousEmittedValue = this.value;\n      } else {\n        this.warnAboutInvalidNumberValue(this.value);\n        this.setValue({\n          origin: \"connected\",\n          value: isValidNumber(this.value) ? this.value : \"\",\n        });\n      }\n    }\n  }\n\n  componentDidLoad(): void {\n    setComponentLoaded(this);\n  }\n\n  componentShouldUpdate(newValue: string, oldValue: string, property: string): boolean {\n    if (this.type === \"number\" && property === \"value\" && newValue && !isValidNumber(newValue)) {\n      this.setValue({\n        origin: \"reset\",\n        value: oldValue,\n      });\n      return false;\n    }\n    return true;\n  }\n\n  componentDidRender(): void {\n    updateHostInteraction(this);\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Events\n  //\n  //--------------------------------------------------------------------------\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputFocus: EventEmitter<void>;\n\n  /**\n   * @internal\n   */\n  @Event({ cancelable: false }) calciteInternalInputBlur: EventEmitter<void>;\n\n  /**\n   * Fires each time a new `value` is typed.\n   */\n  @Event({ cancelable: true }) calciteInputInput: EventEmitter<void>;\n\n  /**\n   * Fires each time a new `value` is typed and committed.\n   */\n  @Event({ cancelable: false }) calciteInputChange: EventEmitter<void>;\n\n  //--------------------------------------------------------------------------\n  //\n  //  Public Methods\n  //\n  //--------------------------------------------------------------------------\n\n  /** Sets focus on the component. */\n  @Method()\n  async setFocus(): Promise<void> {\n    await componentFocusable(this);\n\n    if (this.type === \"number\") {\n      this.childNumberEl?.focus();\n    } else {\n      this.childEl?.focus();\n    }\n  }\n\n  /** Selects the text of the component's `value`. */\n  @Method()\n  async selectText(): Promise<void> {\n    if (this.type === \"number\") {\n      this.childNumberEl?.select();\n    } else {\n      this.childEl?.select();\n    }\n  }\n\n  //--------------------------------------------------------------------------\n  //\n  //  Private Methods\n  //\n  //--------------------------------------------------------------------------\n\n  keyDownHandler = (event: KeyboardEvent): void => {\n    if (this.readOnly || this.disabled || event.defaultPrevented) {\n      return;\n    }\n\n    if (this.isClearable && event.key === \"Escape\") {\n      this.clearInputValue(event);\n      event.preventDefault();\n    }\n    if (event.key === \"Enter\") {\n      if (submitForm(this)) {\n        event.preventDefault();\n      }\n    }\n  };\n\n  onLabelClick(): void {\n    this.setFocus();\n  }\n\n  incrementOrDecrementNumberValue(\n    direction: NumberNudgeDirection,\n    inputMax: number | null,\n    inputMin: number | null,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void {\n    const { value } = this;\n\n    if (value === \"Infinity\" || value === \"-Infinity\") {\n      return;\n    }\n\n    const adjustment = direction === \"up\" ? 1 : -1;\n    const inputStep = this.step === \"any\" ? 1 : Math.abs(this.step || 1);\n    const inputVal = new BigDecimal(value !== \"\" ? value : \"0\");\n    const nudgedValue = inputVal.add(`${inputStep * adjustment}`);\n\n    const nudgedValueBelowInputMin = () =>\n      typeof inputMin === \"number\" &&\n      !isNaN(inputMin) &&\n      nudgedValue.subtract(`${inputMin}`).isNegative;\n\n    const nudgedValueAboveInputMax = () =>\n      typeof inputMax === \"number\" &&\n      !isNaN(inputMax) &&\n      !nudgedValue.subtract(`${inputMax}`).isNegative;\n\n    const finalValue = nudgedValueBelowInputMin()\n      ? `${inputMin}`\n      : nudgedValueAboveInputMax()\n        ? `${inputMax}`\n        : nudgedValue.toString();\n\n    this.setValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: finalValue,\n    });\n  }\n\n  private clearInputValue = (nativeEvent: KeyboardEvent | MouseEvent): void => {\n    this.setValue({\n      committing: true,\n      nativeEvent,\n      origin: \"user\",\n      value: \"\",\n    });\n  };\n\n  private emitChangeIfUserModified = (): void => {\n    if (this.previousValueOrigin === \"user\" && this.value !== this.previousEmittedValue) {\n      this.calciteInputChange.emit();\n      this.setPreviousEmittedValue(this.value);\n    }\n  };\n\n  private inputBlurHandler = () => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n    this.calciteInternalInputBlur.emit();\n    this.emitChangeIfUserModified();\n  };\n\n  private clickHandler = (event: MouseEvent): void => {\n    if (this.disabled) {\n      return;\n    }\n\n    const slottedActionEl = getSlotted(this.el, \"action\");\n    if (event.target !== slottedActionEl) {\n      this.setFocus();\n    }\n  };\n\n  private inputFocusHandler = (): void => {\n    this.calciteInternalInputFocus.emit();\n  };\n\n  private inputChangeHandler = (): void => {\n    if (this.type === \"file\") {\n      this.files = (this.childEl as HTMLInputElement).files;\n    }\n  };\n\n  private inputInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n    this.setValue({\n      nativeEvent,\n      origin: \"user\",\n      value: (nativeEvent.target as HTMLInputElement).value,\n    });\n  };\n\n  private inputKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n    if (event.key === \"Enter\") {\n      this.emitChangeIfUserModified();\n    }\n  };\n\n  private inputNumberInputHandler = (nativeEvent: InputEvent): void => {\n    if (this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      return;\n    }\n\n    const value = (nativeEvent.target as HTMLInputElement).value;\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n    const delocalizedValue = numberStringFormatter.delocalize(value);\n    if (nativeEvent.inputType === \"insertFromPaste\") {\n      if (!isValidNumber(delocalizedValue)) {\n        nativeEvent.preventDefault();\n      }\n      this.setValue({\n        nativeEvent,\n        origin: \"user\",\n        value: parseNumberString(delocalizedValue),\n      });\n      this.childNumberEl.value = this.displayedValue;\n    } else {\n      this.setValue({\n        nativeEvent,\n        origin: \"user\",\n        value: delocalizedValue,\n      });\n    }\n  };\n\n  private inputNumberKeyDownHandler = (event: KeyboardEvent): void => {\n    if (this.type !== \"number\" || this.disabled || this.readOnly) {\n      return;\n    }\n\n    if (this.value === \"Infinity\" || this.value === \"-Infinity\") {\n      event.preventDefault();\n      if (event.key === \"Backspace\" || event.key === \"Delete\") {\n        this.clearInputValue(event);\n      }\n      return;\n    }\n\n    if (event.key === \"ArrowUp\") {\n      /* prevent default behavior of moving cursor to the beginning of the input when holding down ArrowUp */\n      event.preventDefault();\n      this.nudgeNumberValue(\"up\", event);\n      return;\n    }\n    if (event.key === \"ArrowDown\") {\n      this.nudgeNumberValue(\"down\", event);\n      return;\n    }\n    const supportedKeys = [\n      ...numberKeys,\n      \"ArrowLeft\",\n      \"ArrowRight\",\n      \"Backspace\",\n      \"Delete\",\n      \"Enter\",\n      \"Escape\",\n      \"Tab\",\n    ];\n    if (event.altKey || event.ctrlKey || event.metaKey) {\n      return;\n    }\n    const isShiftTabEvent = event.shiftKey && event.key === \"Tab\";\n    if (supportedKeys.includes(event.key) || isShiftTabEvent) {\n      if (event.key === \"Enter\") {\n        this.emitChangeIfUserModified();\n      }\n      return;\n    }\n    numberStringFormatter.numberFormatOptions = {\n      locale: this.effectiveLocale,\n      numberingSystem: this.numberingSystem,\n      useGrouping: this.groupSeparator,\n    };\n    if (event.key === numberStringFormatter.decimal) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.indexOf(numberStringFormatter.decimal) === -1) {\n        return;\n      }\n    }\n    if (/[eE]/.test(event.key)) {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && !/[eE]/.test(this.childNumberEl.value)) {\n        return;\n      }\n    }\n\n    if (event.key === \"-\") {\n      if (!this.value && !this.childNumberEl.value) {\n        return;\n      }\n      if (this.value && this.childNumberEl.value.split(\"-\").length <= 2) {\n        return;\n      }\n    }\n    event.preventDefault();\n  };\n\n  private nudgeNumberValue = (\n    direction: NumberNudgeDirection,\n    nativeEvent: KeyboardEvent | MouseEvent,\n  ): void => {\n    if ((nativeEvent instanceof KeyboardEvent && nativeEvent.repeat) || this.type !== \"number\") {\n      return;\n    }\n\n    const inputMax = this.maxString ? parseFloat(this.maxString) : null;\n    const inputMin = this.minString ? parseFloat(this.minString) : null;\n    const valueNudgeDelayInMs = 150;\n\n    this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n\n    if (this.nudgeNumberValueIntervalId) {\n      window.clearInterval(this.nudgeNumberValueIntervalId);\n    }\n    let firstValueNudge = true;\n    this.nudgeNumberValueIntervalId = window.setInterval(() => {\n      if (firstValueNudge) {\n        firstValueNudge = false;\n        return;\n      }\n\n      this.incrementOrDecrementNumberValue(direction, inputMax, inputMin, nativeEvent);\n    }, valueNudgeDelayInMs);\n  };\n\n  private numberButtonPointerUpAndOutHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private numberButtonPointerDownHandler = (event: PointerEvent): void => {\n    if (!isPrimaryPointerButton(event)) {\n      return;\n    }\n\n    event.preventDefault();\n    const direction = (event.target as HTMLDivElement).dataset.adjustment as NumberNudgeDirection;\n    if (!this.disabled) {\n      this.nudgeNumberValue(direction, event);\n    }\n  };\n\n  syncHiddenFormInput(input: HTMLInputElement): void {\n    syncHiddenFormInput(this.type, this, input);\n  }\n\n  private onHiddenFormInputInput = (event: Event): void => {\n    if ((event.target as HTMLInputElement).name === this.name) {\n      this.setValue({\n        value: (event.target as HTMLInputElement).value,\n        origin: \"direct\",\n      });\n    }\n    this.setFocus();\n    event.stopPropagation();\n  };\n\n  private setChildElRef = (el: HTMLInputElement | HTMLTextAreaElement) => {\n    this.childEl = el;\n  };\n\n  private setChildNumberElRef = (el: HTMLInputElement) => {\n    this.childNumberEl = el;\n  };\n\n  private setDisabledAction(): void {\n    const slottedActionEl = getSlotted(this.el, \"action\");\n\n    if (!slottedActionEl) {\n      return;\n    }\n\n    if (this.disabled) {\n      if (slottedActionEl.getAttribute(\"disabled\") == null) {\n        this.slottedActionElDisabledInternally = true;\n      }\n      slottedActionEl.setAttribute(\"disabled\", \"\");\n    } else if (this.slottedActionElDisabledInternally) {\n      slottedActionEl.removeAttribute(\"disabled\");\n      this.slottedActionElDisabledInternally = false;\n    }\n  }\n\n  private setInputValue = (newInputValue: string): void => {\n    if (this.type === \"text\" && !this.childEl) {\n      return;\n    }\n    if (this.type === \"number\" && !this.childNumberEl) {\n      return;\n    }\n    this[`child${this.type === \"number\" ? \"Number\" : \"\"}El`].value = newInputValue;\n  };\n\n  private setPreviousEmittedValue = (value: string): void => {\n    this.previousEmittedValue = this.normalizeValue(value);\n  };\n\n  private normalizeValue(value: string): string {\n    return this.type === \"number\" ? (isValidNumber(value) ? value : \"\") : value;\n  }\n\n  private setPreviousValue = (value: string): void => {\n    this.previousValue = this.normalizeValue(value);\n  };\n\n  private setValue = ({\n    committing = false,\n    nativeEvent,\n    origin,\n    previousValue,\n    value,\n  }: {\n    committing?: boolean;\n    nativeEvent?: MouseEvent | KeyboardEvent | InputEvent;\n    origin: SetValueOrigin;\n    previousValue?: string;\n    value: string;\n  }): void => {\n    this.setPreviousValue(previousValue ?? this.value);\n    this.previousValueOrigin = origin;\n\n    if (this.type === \"number\") {\n      numberStringFormatter.numberFormatOptions = {\n        locale: this.effectiveLocale,\n        numberingSystem: this.numberingSystem,\n        useGrouping: this.groupSeparator,\n        signDisplay: \"never\",\n      };\n\n      const isValueDeleted =\n        this.previousValue?.length > value.length || this.value?.length > value.length;\n      const hasTrailingDecimalSeparator = value.charAt(value.length - 1) === \".\";\n      const sanitizedValue =\n        hasTrailingDecimalSeparator && isValueDeleted ? value : sanitizeNumberString(value);\n\n      const newValue =\n        value && !sanitizedValue\n          ? isValidNumber(this.previousValue)\n            ? this.previousValue\n            : \"\"\n          : sanitizedValue;\n\n      let newLocalizedValue = numberStringFormatter.localize(newValue);\n\n      if (origin !== \"connected\" && !hasTrailingDecimalSeparator) {\n        newLocalizedValue = addLocalizedTrailingDecimalZeros(\n          newLocalizedValue,\n          newValue,\n          numberStringFormatter,\n        );\n      }\n\n      // adds localized trailing decimal separator\n      this.displayedValue =\n        hasTrailingDecimalSeparator && isValueDeleted\n          ? `${newLocalizedValue}${numberStringFormatter.decimal}`\n          : newLocalizedValue;\n\n      this.userChangedValue = origin === \"user\" && this.value !== newValue;\n      // don't sanitize the start of negative/decimal numbers, but\n      // don't set value to an invalid number\n      this.value = [\"-\", \".\"].includes(newValue) ? \"\" : newValue;\n    } else {\n      this.userChangedValue = origin === \"user\" && this.value !== value;\n      this.value = value;\n    }\n\n    if (origin === \"direct\") {\n      this.setInputValue(value);\n      this.previousEmittedValue = value;\n    }\n\n    if (nativeEvent) {\n      const calciteInputInputEvent = this.calciteInputInput.emit();\n      if (calciteInputInputEvent.defaultPrevented) {\n        this.value = this.previousValue;\n        this.displayedValue =\n          this.type === \"number\"\n            ? numberStringFormatter.localize(this.previousValue)\n            : this.previousValue;\n      } else if (committing) {\n        this.emitChangeIfUserModified();\n      }\n    }\n  };\n\n  private inputKeyUpHandler = (): void => {\n    window.clearInterval(this.nudgeNumberValueIntervalId);\n  };\n\n  private warnAboutInvalidNumberValue(value: string): void {\n    if (this.type === \"number\" && value && !isValidNumber(value)) {\n      console.warn(`The specified value \"${value}\" cannot be parsed, or is out of range.`);\n    }\n  }\n\n  // --------------------------------------------------------------------------\n  //\n  //  Render Methods\n  //\n  // --------------------------------------------------------------------------\n\n  render(): VNode {\n    const dir = getElementDir(this.el);\n    const loader = (\n      <div class={CSS.loader}>\n        <calcite-progress label={this.messages.loading} type=\"indeterminate\" />\n      </div>\n    );\n\n    const inputClearButton = (\n      <button\n        aria-label={this.messages.clear}\n        class={CSS.clearButton}\n        disabled={this.disabled || this.readOnly}\n        onClick={this.clearInputValue}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"x\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n    const iconEl = (\n      <calcite-icon\n        class={CSS.inputIcon}\n        flipRtl={this.iconFlipRtl}\n        icon={this.requestedIcon}\n        scale={getIconScale(this.scale)}\n      />\n    );\n\n    const isHorizontalNumberButton = this.numberButtonType === \"horizontal\";\n\n    const numberButtonsHorizontalUp = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"up\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.numberButtonPointerDownHandler}\n        onPointerOut={this.numberButtonPointerUpAndOutHandler}\n        onPointerUp={this.numberButtonPointerUpAndOutHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-up\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsHorizontalDown = (\n      <button\n        aria-hidden=\"true\"\n        class={{\n          [CSS.numberButtonItem]: true,\n          [CSS.buttonItemHorizontal]: isHorizontalNumberButton,\n        }}\n        data-adjustment=\"down\"\n        disabled={this.disabled || this.readOnly}\n        onPointerDown={this.numberButtonPointerDownHandler}\n        onPointerOut={this.numberButtonPointerUpAndOutHandler}\n        onPointerUp={this.numberButtonPointerUpAndOutHandler}\n        tabIndex={-1}\n        type=\"button\"\n      >\n        <calcite-icon icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n      </button>\n    );\n\n    const numberButtonsVertical = (\n      <div class={CSS.numberButtonWrapper}>\n        {numberButtonsHorizontalUp}\n        {numberButtonsHorizontalDown}\n      </div>\n    );\n\n    const prefixText = <div class={CSS.prefix}>{this.prefixText}</div>;\n    const suffixText = <div class={CSS.suffix}>{this.suffixText}</div>;\n\n    const autofocus = this.el.autofocus || this.el.hasAttribute(\"autofocus\") ? true : null;\n    const enterKeyHint = this.el.enterKeyHint || this.el.getAttribute(\"enterkeyhint\");\n    const inputMode = this.el.inputMode || this.el.getAttribute(\"inputmode\");\n\n    const localeNumberInput =\n      this.type === \"number\" ? (\n        <input\n          accept={this.accept}\n          aria-label={getLabelText(this)}\n          autocomplete={this.autocomplete}\n          autofocus={autofocus}\n          defaultValue={this.defaultValue}\n          disabled={this.disabled ? true : null}\n          enterKeyHint={enterKeyHint}\n          inputMode={inputMode}\n          key=\"localized-input\"\n          maxLength={this.maxLength}\n          minLength={this.minLength}\n          multiple={this.multiple}\n          name={undefined}\n          onBlur={this.inputBlurHandler}\n          onFocus={this.inputFocusHandler}\n          onInput={this.inputNumberInputHandler}\n          onKeyDown={this.inputNumberKeyDownHandler}\n          onKeyUp={this.inputKeyUpHandler}\n          pattern={this.pattern}\n          placeholder={this.placeholder || \"\"}\n          readOnly={this.readOnly}\n          ref={this.setChildNumberElRef}\n          type=\"text\"\n          value={this.displayedValue}\n        />\n      ) : null;\n\n    const childEl =\n      this.type !== \"number\"\n        ? [\n            <this.childElType\n              accept={this.accept}\n              aria-label={getLabelText(this)}\n              autocomplete={this.autocomplete}\n              autofocus={autofocus}\n              class={{\n                [CSS.editingEnabled]: this.editingEnabled,\n                [CSS.inlineChild]: !!this.inlineEditableEl,\n              }}\n              defaultValue={this.defaultValue}\n              disabled={this.disabled ? true : null}\n              enterKeyHint={enterKeyHint}\n              inputMode={inputMode}\n              max={this.maxString}\n              maxLength={this.maxLength}\n              min={this.minString}\n              minLength={this.minLength}\n              multiple={this.multiple}\n              name={this.name}\n              onBlur={this.inputBlurHandler}\n              onChange={this.inputChangeHandler}\n              onFocus={this.inputFocusHandler}\n              onInput={this.inputInputHandler}\n              onKeyDown={this.inputKeyDownHandler}\n              onKeyUp={this.inputKeyUpHandler}\n              pattern={this.pattern}\n              placeholder={this.placeholder || \"\"}\n              readOnly={this.readOnly}\n              ref={this.setChildElRef}\n              required={this.required ? true : null}\n              step={this.step}\n              tabIndex={\n                this.disabled || (this.inlineEditableEl && !this.editingEnabled) ? -1 : null\n              }\n              type={this.type}\n              value={this.value}\n            />,\n            this.isTextarea ? (\n              <div class={CSS.resizeIconWrapper}>\n                <calcite-icon icon=\"chevron-down\" scale={getIconScale(this.scale)} />\n              </div>\n            ) : null,\n          ]\n        : null;\n\n    return (\n      <Host onClick={this.clickHandler} onKeyDown={this.keyDownHandler}>\n        <InteractiveContainer disabled={this.disabled}>\n          <div class={{ [CSS.inputWrapper]: true, [CSS_UTILITY.rtl]: dir === \"rtl\" }}>\n            {this.type === \"number\" && this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalDown\n              : null}\n            {this.prefixText ? prefixText : null}\n            <div class={CSS.wrapper}>\n              {localeNumberInput}\n              {childEl}\n              {this.isClearable ? inputClearButton : null}\n              {this.requestedIcon ? iconEl : null}\n              {this.loading ? loader : null}\n            </div>\n            <div class={CSS.actionWrapper}>\n              <slot name={SLOTS.action} />\n            </div>\n            {this.type === \"number\" && this.numberButtonType === \"vertical\" && !this.readOnly\n              ? numberButtonsVertical\n              : null}\n            {this.suffixText ? suffixText : null}\n            {this.type === \"number\" && this.numberButtonType === \"horizontal\" && !this.readOnly\n              ? numberButtonsHorizontalUp\n              : null}\n            <HiddenFormInputSlot component={this} />\n          </div>\n          {this.validationMessage && this.status === \"invalid\" ? (\n            <Validation\n              icon={this.validationIcon}\n              message={this.validationMessage}\n              scale={this.scale}\n              status={this.status}\n            />\n          ) : null}\n        </InteractiveContainer>\n      </Host>\n    );\n  }\n}\n",":host {\n  @apply block;\n}\n\n// scales\n:host([scale=\"s\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n2h h-6 px-2;\n  }\n  & textarea {\n    @apply h-6;\n    min-block-size: theme(\"spacing.6\");\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-6;\n  }\n  & input[type=\"file\"] {\n    @apply h-6;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.6\");\n    min-inline-size: theme(\"spacing.6\");\n  }\n  & textarea {\n    @apply text-n2h\n    h-auto\n    py-1\n    px-2;\n  }\n}\n\n:host([scale=\"m\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-n1h h-8 px-3;\n  }\n  & textarea {\n    min-block-size: theme(\"spacing.8\");\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-8;\n  }\n  & input[type=\"file\"] {\n    @apply h-8;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.8\");\n    min-inline-size: theme(\"spacing.8\");\n  }\n  & textarea {\n    @apply text-n1h\n      h-auto\n      py-2\n      px-3;\n  }\n}\n\n:host([scale=\"l\"]) {\n  & input,\n  & .prefix,\n  & .suffix {\n    @apply text-0h h-11 px-4;\n  }\n  & textarea {\n    min-block-size: theme(\"spacing.11\");\n  }\n  & .number-button-wrapper,\n  & .action-wrapper calcite-button,\n  & .action-wrapper calcite-button button {\n    @apply h-11;\n  }\n  & input[type=\"file\"] {\n    @apply h-11;\n  }\n  & .clear-button {\n    min-block-size: theme(\"spacing.11\");\n    min-inline-size: theme(\"spacing.11\");\n  }\n  & textarea {\n    @apply text-0h\n      h-auto\n      py-3\n      px-4;\n  }\n}\n\n@include disabled() {\n  & textarea {\n    resize: none;\n  }\n}\n\ntextarea,\ninput {\n  transition:\n    var(--calcite-animation-timing),\n    block-size 0,\n    outline-offset 0s;\n  -webkit-appearance: none;\n  @apply font-inherit\n    text-color-1\n    bg-foreground-1\n    relative\n    m-0\n    box-border\n    flex\n    max-h-full\n    w-full\n    max-w-full\n    flex-1\n    rounded-none\n    font-normal;\n}\n\ninput[type=\"search\"]::-webkit-search-decoration {\n  -webkit-appearance: none;\n}\n\n// states\ninput,\ntextarea {\n  @apply border\n    border-color-input\n    border-solid\n    text-color-1\n    text-ellipsis;\n  &::placeholder,\n  &:-ms-input-placeholder,\n  &::-ms-input-placeholder {\n    @apply text-color-3 font-normal;\n  }\n  &:placeholder-shown {\n    @apply text-ellipsis;\n  }\n}\ninput:focus,\ntextarea:focus {\n  @apply border-color-brand text-color-1;\n}\ninput[readonly],\ntextarea[readonly] {\n  @apply bg-background font-medium;\n}\ninput[readonly]:focus,\ntextarea[readonly]:focus {\n  @apply text-color-1;\n}\ncalcite-icon {\n  @apply text-color-3;\n}\n\n//focus\ntextarea,\ninput {\n  @apply focus-base;\n}\ntextarea:focus,\ninput:focus {\n  @apply focus-inset;\n}\n\n:host([status=\"invalid\"]) {\n  & input,\n  & textarea {\n    @apply border-color-danger;\n  }\n  & input:focus,\n  & textarea:focus {\n    @apply focus-inset-danger;\n  }\n}\n\n// ICONS\n\n// position icons\n\n:host([scale=\"s\"]) .icon {\n  inset-inline-start: theme(\"spacing.2\");\n}\n\n:host([scale=\"m\"]) .icon {\n  inset-inline-start: theme(\"spacing.3\");\n}\n\n:host([scale=\"l\"]) .icon {\n  inset-inline-start: theme(\"spacing.4\");\n}\n\n// position placeholder/value text in relation to icons\n\n:host([icon][scale=\"s\"]) input {\n  padding-inline-start: theme(\"padding.8\");\n}\n\n:host([icon][scale=\"m\"]) input {\n  padding-inline-start: theme(\"padding.10\");\n}\n\n:host([icon][scale=\"l\"]) input {\n  padding-inline-start: theme(\"padding.14\");\n}\n\n// positioning wrapper for icon and loader\n\n.element-wrapper {\n  @apply relative\n    order-3\n    inline-flex\n    flex-1\n    items-center;\n}\n\n.icon {\n  @apply transition-default\n    pointer-events-none\n    absolute\n    block;\n}\n\n.icon,\n.resize-icon-wrapper {\n  @apply z-default; // needed for firefox to display the icon properly\n}\n\n// hide browser default clear\n\ninput[type=\"text\"]::-ms-clear,\ninput[type=\"text\"]::-ms-reveal {\n  @apply hidden\n    h-0\n    w-0;\n}\ninput[type=\"search\"]::-webkit-search-decoration,\ninput[type=\"search\"]::-webkit-search-cancel-button,\ninput[type=\"search\"]::-webkit-search-results-button,\ninput[type=\"search\"]::-webkit-search-results-decoration,\ninput[type=\"date\"]::-webkit-clear-button,\ninput[type=\"time\"]::-webkit-clear-button {\n  @apply hidden;\n}\n\n.clear-button {\n  pointer-events: initial;\n  @apply focus-base\n    border-color-input\n    bg-foreground-1\n    order-4\n    m-0\n    box-border\n    flex\n    min-h-full\n    cursor-pointer\n    items-center\n    justify-center\n    self-stretch\n    border\n    border-solid;\n\n  border-inline-start-width: theme(\"borderWidth.0\");\n\n  &:hover {\n    @apply bg-foreground-2 transition-default;\n    calcite-icon {\n      @apply text-color-1 transition-default;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:focus {\n    @apply focus-inset;\n  }\n  &:disabled {\n    @apply opacity-disabled;\n  }\n}\n\n// loading\n.loader {\n  inset-block-start: 1px;\n  inset-inline: 1px;\n  @apply pointer-events-none\n    absolute\n    block;\n}\n\n// slotted action\n.action-wrapper {\n  @apply order-7 flex;\n}\n\n// prefix and suffix\n.prefix,\n.suffix {\n  @apply border-color-input\n    bg-background\n    text-color-2\n    box-border\n    flex\n    h-auto\n    min-h-full\n    select-none\n    content-center\n    items-center\n    break-words\n    border\n    border-solid\n    font-medium\n    leading-none;\n}\n\n.prefix {\n  @apply order-2;\n  border-inline-end-width: theme(\"borderWidth.0\");\n}\n.suffix {\n  @apply order-5;\n  border-inline-start-width: theme(\"borderWidth.0\");\n}\n\n// alignment type\n:host([alignment=\"start\"]) {\n  & textarea,\n  & input {\n    text-align: start;\n  }\n}\n\n:host([alignment=\"end\"]) {\n  & textarea,\n  & input {\n    text-align: end;\n  }\n}\n\n// number buttons\ninput[type=\"number\"] {\n  -moz-appearance: textfield;\n\n  &::-webkit-inner-spin-button,\n  &::-webkit-outer-spin-button {\n    -webkit-appearance: none;\n    -moz-appearance: textfield;\n    @apply m-0;\n  }\n}\n\n.number-button-wrapper {\n  @apply transition-default\n    pointer-events-none\n    order-6\n    box-border\n    flex\n    flex-col;\n}\n\n:host([number-button-type=\"vertical\"]) .wrapper {\n  flex-direction: row;\n  display: flex;\n}\n\n:host([number-button-type=\"vertical\"]) {\n  & input,\n  textarea {\n    @apply order-2;\n  }\n}\n\n:host([number-button-type=\"horizontal\"]) .calcite--rtl {\n  & .number-button-item[data-adjustment=\"down\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n  & .number-button-item[data-adjustment=\"up\"] calcite-icon {\n    transform: rotate(-90deg);\n  }\n}\n\n.number-button-item.number-button-item--horizontal {\n  &[data-adjustment=\"down\"],\n  &[data-adjustment=\"up\"] {\n    @apply order-1\n      max-h-full\n      min-h-full\n      self-stretch;\n    & calcite-icon {\n      transform: rotate(90deg);\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"down\"] {\n  @apply border-color-input\n    border\n    border-solid;\n  border-inline-end-width: theme(\"borderWidth.0\");\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n.number-button-item.number-button-item--horizontal[data-adjustment=\"up\"] {\n  @apply order-5;\n  &:hover {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"up\"]:hover {\n  @apply bg-foreground-2;\n  calcite-icon {\n    @apply text-color-1;\n  }\n}\n\n:host([number-button-type=\"vertical\"]) .number-button-item[data-adjustment=\"down\"] {\n  @apply border-t-0;\n}\n\n.number-button-item {\n  max-block-size: 50%;\n  min-block-size: 50%;\n  pointer-events: initial;\n  @apply border-color-input\n    bg-foreground-1\n    transition-default\n    m-0\n    box-border\n    flex\n    cursor-pointer\n    items-center\n    self-center\n    border\n    border-solid\n    py-0\n    px-2;\n  border-inline-start-width: theme(\"borderWidth.0\");\n  & calcite-icon {\n    @apply transition-default pointer-events-none;\n  }\n  &:focus {\n    @apply bg-foreground-2;\n    calcite-icon {\n      @apply text-color-1;\n    }\n  }\n  &:active {\n    @apply bg-foreground-3;\n  }\n  &:disabled {\n    @apply pointer-events-none;\n  }\n}\n\n.wrapper {\n  @apply relative\n    flex\n    flex-row\n    items-center;\n}\n\n// hide the default date picker\n:input::-webkit-calendar-picker-indicator {\n  @apply hidden;\n}\n\ninput[type=\"date\"]::-webkit-input-placeholder {\n  visibility: hidden !important;\n}\n\n// textarea resize icon\ntextarea::-webkit-resizer {\n  @apply absolute\n    bottom-0\n    box-border\n    py-0\n    px-1;\n  inset-inline-end: 0;\n}\n\n.resize-icon-wrapper {\n  inset-block-end: 2px;\n  inset-inline-end: 2px;\n\n  @apply bg-foreground-1\n    text-color-3\n    pointer-events-none\n    absolute\n    h-3\n    w-3;\n\n  & calcite-icon {\n    inset-block-end: theme(\"spacing.1\");\n    inset-inline-end: theme(\"spacing.1\");\n    transform: rotate(-45deg);\n  }\n}\n\n.calcite--rtl {\n  .resize-icon-wrapper {\n    & calcite-icon {\n      transform: rotate(45deg);\n    }\n  }\n}\n\n:host([type=\"color\"]) input {\n  @apply p-1;\n}\n\n// file input\n:host([type=\"file\"]) input {\n  @apply bg-foreground-1\n    border-color-input\n    cursor-pointer\n    border\n    border-dashed\n    text-center;\n}\n\n:host([type=\"file\"][scale=\"s\"]) input {\n  @apply py-px px-2;\n}\n\n:host([type=\"file\"][scale=\"m\"]) input {\n  @apply py-1 px-3;\n}\n\n:host([type=\"file\"][scale=\"l\"]) input {\n  @apply py-2 px-4;\n}\n\n:host(.no-bottom-border) input {\n  @apply border-b-0;\n}\n\n:host(.border-top-color-one) input {\n  @apply border-t-color-1;\n}\n\n// input needed for higher specificity of these overrides\ninput {\n  &.inline-child {\n    @apply transition-default bg-transparent;\n    .editing-enabled {\n      background-color: inherit;\n    }\n  }\n\n  &.inline-child:not(.editing-enabled) {\n    @apply border-color-transparent\n      flex\n      cursor-pointer text-ellipsis;\n    padding-inline-start: 0;\n  }\n}\n\n@include form-validation-message();\n@include hidden-form-input();\n@include base-component();\n","@import \"../../assets/styles/animation\";\n\n:host {\n  @apply relative block w-full;\n}\n\n.track,\n.bar {\n  @apply absolute top-0;\n  block-size: 2px;\n}\n\n.track {\n  @apply z-default w-full overflow-hidden;\n  background: theme(\"borderColor.color.3\");\n}\n\n.bar {\n  @apply bg-brand z-default;\n}\n\n@media (forced-colors: active) {\n  .track {\n    background-color: highlightText;\n  }\n  .bar {\n    background-color: linkText;\n  }\n}\n\n.indeterminate {\n  @apply w-1/5;\n  animation: looping-progress-bar-ani scaleDuration(--calcite-internal-animation-timing-medium, 11) linear infinite;\n  &.calcite--rtl {\n    animation-name: looping-progress-bar-ani-rtl;\n  }\n}\n\n.reversed {\n  animation-direction: reverse;\n}\n\n.text {\n  @apply text-n2h px-0 pt-4 pb-0 text-center font-medium;\n  color: var(--calcite-color-text-2);\n}\n\n@keyframes looping-progress-bar-ani {\n  0% {\n    transform: translate3d(-100%, 0, 0);\n  }\n  50% {\n    inline-size: 40%;\n  }\n  100% {\n    transform: translate3d(600%, 0, 0);\n  }\n}\n\n@keyframes looping-progress-bar-ani-rtl {\n  0% {\n    transform: translate3d(100%, 0, 0);\n  }\n  50% {\n    inline-size: 40%;\n  }\n  100% {\n    transform: translate3d(-600%, 0, 0);\n  }\n}\n\n@include base-component();\n","import { Component, Element, h, Prop, VNode } from \"@stencil/core\";\nimport { getElementDir } from \"../../utils/dom\";\nimport { CSS_UTILITY } from \"../../utils/resources\";\n@Component({\n  tag: \"calcite-progress\",\n  styleUrl: \"progress.scss\",\n  shadow: true,\n})\nexport class Progress {\n  @Element() el: HTMLCalciteProgressElement;\n\n  /**\n   * Specifies the component type.\n   *\n   * Use `\"indeterminate\"` if finding actual progress value is impossible.\n   *\n   */\n  @Prop({ reflect: true }) type: \"indeterminate\" | \"determinate\" = \"determinate\";\n\n  /** When `type` is `\"determinate\"`, the component's progress value with a range of 0.0 - 1.0. */\n  @Prop() value = 0;\n\n  /** Accessible name for the component. */\n  @Prop() label: string;\n\n  /** Text that displays under the component's indicator. */\n  @Prop() text: string;\n\n  /** When `true` and for `\"indeterminate\"` progress bars, reverses the animation direction. */\n  @Prop({ reflect: true }) reversed = false;\n\n  render(): VNode {\n    const isDeterminate = this.type === \"determinate\";\n    const barStyles = isDeterminate ? { width: `${this.value * 100}%` } : {};\n    const dir = getElementDir(this.el);\n    return (\n      <div\n        aria-label={this.label || this.text}\n        aria-valuemax={1}\n        aria-valuemin={0}\n        aria-valuenow={this.value}\n        role=\"progressbar\"\n      >\n        <div class=\"track\">\n          <div\n            class={{\n              bar: true,\n              indeterminate: this.type === \"indeterminate\",\n              [CSS_UTILITY.rtl]: dir === \"rtl\",\n              reversed: this.reversed,\n            }}\n            style={barStyles}\n          />\n        </div>\n        {this.text ? <div class=\"text\">{this.text}</div> : null}\n      </div>\n    );\n  }\n}\n"],"names":["CSS","Validation","_ref","scale","status","icon","message","h","class","iconCache","requestCache","scaleToPx","s","m","l","generateIconId","size","name","numberLeadingName","isNaN","Number","charAt","parts","split","length","firstNonDigitInPartPattern","map","part","partIndex","replace","match","offset","toUpperCase","join","concat","normalizeIconName","filled","iconName","substring","getCachedIconDataByKey","id","Icon","proxyCustomElement","HTMLElement","connectedCallback","this","visible","waitUntilVisible","loadIconPathData","disconnectedCallback","_this$intersectionObs","intersectionObserver","disconnect","render","el","flipRtl","pathData","textLabel","dir","getElementDir","semantic","paths","Host","key","toAriaBoolean","role","svg","fill","height","viewBox","width","xmlns","path","d","opacity","isBrowser","fetchIconProps","async","props","cachedIconKey","cachedIconData","fetch","getAssetPath","then","resp","json","catch","console","error","fetchIcon","callback","createObserver","entries","forEach","entry","isIntersecting","rootMargin","observe","StatusIconDefaults","valid","invalid","idle","InputMessage","handleIconEl","requestedIcon","setRequestedIcon","hidden","renderIcon","iconFlipRtl","minMaxStepTypes","patternTypes","minMaxLengthTypes","updateConstraintValidation","inputComponent","input","propName","matchesType","attributeName","toLowerCase","value","setAttribute","removeAttribute","INPUT_TYPE_ICONS","tel","password","email","date","time","search","SLOTS","Input","childElType","previousValueOrigin","mutationObserver","setDisabledAction","userChangedValue","keyDownHandler","event","readOnly","disabled","defaultPrevented","isClearable","clearInputValue","preventDefault","submitForm","nativeEvent","setValue","committing","origin","emitChangeIfUserModified","previousEmittedValue","calciteInputChange","emit","setPreviousEmittedValue","inputBlurHandler","window","clearInterval","nudgeNumberValueIntervalId","calciteInternalInputBlur","clickHandler","slottedActionEl","getSlotted","target","setFocus","inputFocusHandler","calciteInternalInputFocus","inputChangeHandler","type","files","childEl","inputInputHandler","inputKeyDownHandler","inputNumberInputHandler","numberStringFormatter","numberFormatOptions","locale","effectiveLocale","numberingSystem","useGrouping","groupSeparator","delocalizedValue","delocalize","inputType","isValidNumber","parseNumberString","childNumberEl","displayedValue","inputNumberKeyDownHandler","nudgeNumberValue","supportedKeys","numberKeys","altKey","ctrlKey","metaKey","isShiftTabEvent","shiftKey","includes","decimal","indexOf","test","direction","KeyboardEvent","repeat","inputMax","maxString","parseFloat","inputMin","minString","incrementOrDecrementNumberValue","firstValueNudge","setInterval","numberButtonPointerUpAndOutHandler","numberButtonPointerDownHandler","isPrimaryPointerButton","dataset","adjustment","onHiddenFormInputInput","stopPropagation","setChildElRef","setChildNumberElRef","setInputValue","newInputValue","normalizeValue","setPreviousValue","previousValue","_this$previousValue","_this$value","signDisplay","isValueDeleted","hasTrailingDecimalSeparator","sanitizedValue","sanitizeNumberString","newValue","newLocalizedValue","localize","addLocalizedTrailingDecimalZeros","calciteInputInput","inputKeyUpHandler","badInput","customError","patternMismatch","rangeOverflow","rangeUnderflow","stepMismatch","tooLong","tooShort","typeMismatch","valueMissing","handleGlobalAttributesChanged","forceUpdate","disabledWatcher","maxWatcher","_this$max","max","toString","minWatcher","_this$min","min","onMessagesChange","valueWatcher","warnAboutInvalidNumberValue","updateRequestedIcon","_this$value2","isTextarea","clearable","effectiveLocaleChange","updateMessages","_this$mutationObserve","connectInteractive","connectLocalized","connectMessages","inlineEditableEl","closest","editingEnabled","connectLabel","connectForm","childList","addEventListener","internalHiddenInputInputEvent","_this$mutationObserve2","disconnectInteractive","disconnectLabel","disconnectForm","disconnectLocalized","disconnectMessages","removeEventListener","componentWillLoad","_this$max2","_this$min2","setUpLoadableComponent","setUpMessages","componentDidLoad","setComponentLoaded","componentShouldUpdate","oldValue","property","componentDidRender","updateHostInteraction","_this$childNumberEl","_this$childEl","componentFocusable","focus","selectText","_this$childNumberEl2","_this$childEl2","select","onLabelClick","inputStep","step","Math","abs","nudgedValue","BigDecimal","add","finalValue","subtract","isNegative","syncHiddenFormInput","hiddenFormInput","isMinMaxStepType","numericInputComponent","isMinMaxLengthType","textualInputComponent","getAttribute","slottedActionElDisabledInternally","warn","loader","label","messages","loading","inputClearButton","clear","onClick","tabIndex","getIconScale","iconEl","isHorizontalNumberButton","numberButtonType","numberButtonsHorizontalUp","onPointerDown","onPointerOut","onPointerUp","numberButtonsHorizontalDown","numberButtonsVertical","prefixText","suffixText","autofocus","hasAttribute","enterKeyHint","inputMode","localeNumberInput","accept","getLabelText","autocomplete","defaultValue","maxLength","minLength","multiple","undefined","onBlur","onFocus","onInput","onKeyDown","onKeyUp","pattern","placeholder","ref","onChange","required","InteractiveContainer","CSS_UTILITY","rtl","HiddenFormInputSlot","component","validationMessage","validationIcon","Progress","barStyles","text","bar","indeterminate","reversed","style"],"sourceRoot":""}